name: Solidity

on:
  push:
    branches: [main]
    paths:
      - "packages/protocol/**"
  pull_request:
    paths:
      - "packages/protocol/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: protocol - Unit Tests
        working-directory: ./packages/protocol
        run: pnpm clean && pnpm test

      - name: protocol - Integration Tests
        working-directory: ./packages/protocol
        run: pnpm test:integration

      - name: protocol - Test Coverage
        working-directory: ./packages/protocol
        run: pnpm test:coverage

      - name: protocol - Generate Genesis
        working-directory: ./packages/protocol
        run: pnpm test:genesis

      - name: protocol - Export ABIs
        working-directory: ./packages/protocol
        run: pnpm export:abi

      - name: protocol - Deploy L1 Contracts
        working-directory: ./packages/protocol
        run: pnpm deploy:hardhat

      - name: protocol - Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./packages/protocol/coverage
          flags: protocol

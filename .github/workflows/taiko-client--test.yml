name: "CI"

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "packages/taiko-client/**"
      - "go.mod"
      - "go.sum"
    branches-ignore:
      - release-please--branches--**

jobs:
  lint:
    if: ${{ github.event.pull_request.draft == false  && !startsWith(github.head_ref, 'release-please') }}
    name: Lint
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache: true

      - name: Install golangci-lint
        run: go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@v1.60.0

      - name: Lint
        working-directory: packages/taiko-client
        run: golangci-lint run --path-prefix=./ --config=.golangci.yml

  integration_tests:
    if: ${{ github.event.pull_request.draft == false  && !startsWith(github.head_ref, 'release-please') }}
    name: Integration tests
    runs-on: [ubuntu-latest]
    timeout-minutes: 15

    strategy:
      matrix:
        execution_node: [l2_geth]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache: true

      - name: Install pnpm dependencies
        uses: ./.github/actions/install-pnpm-dependencies

      - name: Run Tests on ${{ matrix.execution_node }} execution engine
        working-directory: packages/taiko-client
        env:
          L2_NODE: ${{ matrix.execution_node }}
        run: make test

      - name: Codecov.io
        uses: codecov/codecov-action@v4
        with:
          files: packages/taiko-client/coverage.out

definitions:
  big.Int:
    type: object
  softblocks.BuildSoftBlockRequestBody:
    properties:
      transactionBatch:
        allOf:
          - $ref: "#/definitions/softblocks.TransactionBatch"
        description:
          "@param transactionBatch TransactionBatch Transaction batch to
          be inserted into the soft block"
    type: object
  softblocks.BuildSoftBlockResponseBody:
    properties:
      blockHeader:
        allOf:
          - $ref: "#/definitions/types.Header"
        description: "@param blockHeader types.Header Header of the soft block"
    type: object
  softblocks.RemoveSoftBlocksRequestBody:
    properties:
      newLastBlockId:
        description: |-
          @param newLastBlockID uint64 New last block ID of the blockchain, it should
          @param not smaller than the canonical chain's highest block ID.
        type: integer
    type: object
  softblocks.RemoveSoftBlocksResponseBody:
    properties:
      headsRemoved:
        description: "@param headsRemoved uint64 Number of soft heads removed"
        type: integer
      lastBlockId:
        description:
          "@param lastBlockID uint64 Current highest block ID of the blockchain
          (including soft blocks)"
        type: integer
      lastProposedBlockID:
        description:
          "@param lastProposedBlockID uint64 Highest block ID of the cnonical
          chain"
        type: integer
    type: object
  softblocks.SoftBlockParams:
    properties:
      anchorBlockID:
        description:
          "@param anchorBlockID uint64 `_anchorBlockId` parameter of the
          `anchorV2` transaction in soft block"
        type: integer
      anchorStateRoot:
        description:
          "@param anchorStateRoot string `_anchorStateRoot` parameter of
          the `anchorV2` transaction in soft block"
        items:
          type: integer
        type: array
      coinbase:
        description: "@param coinbase string Coinbase of the soft block"
        items:
          type: integer
        type: array
      timestamp:
        description: "@param timestamp uint64 Timestamp of the soft block"
        type: integer
    type: object
  softblocks.TransactionBatch:
    properties:
      batchId:
        description: "@param batchId uint64 ID of this transaction batch"
        type: integer
      batchType:
        allOf:
          - $ref: "#/definitions/softblocks.TransactionBatchMarker"
        description: |-
          @param batchType TransactionBatchMarker Marker of the transaction batch,
          @param either `end_of_block`, `end_of_preconf` or empty
      blockId:
        description: "@param blockId uint64 Block ID of the soft block"
        type: integer
      blockParams:
        allOf:
          - $ref: "#/definitions/softblocks.SoftBlockParams"
        description:
          "@param blockParams SoftBlockParams Block parameters of the soft
          block"
      signature:
        description: "@param signature string Signature of this transaction batch"
        type: string
      transactions:
        description:
          "@param transactions string zlib compressed RLP encoded bytes
          of a transactions list"
        items:
          type: integer
        type: array
    type: object
  softblocks.TransactionBatchMarker:
    enum:
      - ""
      - endOfBlock
      - endOfPreconf
    type: string
    x-enum-varnames:
      - BatchMarkerEmpty
      - BatchMarkerEOB
      - BatchMarkerEOP
  types.Header:
    properties:
      baseFeePerGas:
        allOf:
          - $ref: "#/definitions/big.Int"
        description: BaseFee was added by EIP-1559 and is ignored in legacy headers.
      blobGasUsed:
        description: BlobGasUsed was added by EIP-4844 and is ignored in legacy headers.
        type: integer
      difficulty:
        $ref: "#/definitions/big.Int"
      excessBlobGas:
        description:
          ExcessBlobGas was added by EIP-4844 and is ignored in legacy
          headers.
        type: integer
      extraData:
        items:
          type: integer
        type: array
      gasLimit:
        type: integer
      gasUsed:
        type: integer
      logsBloom:
        items:
          type: integer
        type: array
      miner:
        items:
          type: integer
        type: array
      mixHash:
        items:
          type: integer
        type: array
      nonce:
        items:
          type: integer
        type: array
      number:
        $ref: "#/definitions/big.Int"
      parentBeaconBlockRoot:
        description:
          ParentBeaconRoot was added by EIP-4788 and is ignored in legacy
          headers.
        items:
          type: integer
        type: array
      parentHash:
        items:
          type: integer
        type: array
      receiptsRoot:
        items:
          type: integer
        type: array
      requestsRoot:
        description: RequestsHash was added by EIP-7685 and is ignored in legacy headers.
        items:
          type: integer
        type: array
      sha3Uncles:
        items:
          type: integer
        type: array
      stateRoot:
        items:
          type: integer
        type: array
      timestamp:
        type: integer
      transactionsRoot:
        items:
          type: integer
        type: array
      withdrawalsRoot:
        description:
          WithdrawalsHash was added by EIP-4895 and is ignored in legacy
          headers.
        items:
          type: integer
        type: array
    type: object
info:
  contact:
    email: info@taiko.xyz
    name: API Support
    url: https://community.taiko.xyz/
  license:
    name: MIT
    url: https://github.com/taikoxyz/taiko-mono/blob/main/LICENSE.md
  termsOfService: http://swagger.io/terms/
  title: Taiko Soft Block Server API
  version: "1.0"
paths:
  /healthz:
    get:
      consumes:
        - application/json
      operationId: health-check
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get current server health status
  /softBlocks:
    delete:
      consumes:
        - application/json
      description: |-
        Remove all soft blocks from the blockchain beyond the specified block height,
        ensuring the latest block ID does not exceed the given height. This method will fail if
        the block with an ID one greater than the specified height is not a soft block. If the
        specified block height is greater than the latest soft block ID, the method will succeed
        without modifying the blockchain.
      parameters:
        - description: soft blocks removing request body
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/softblocks.RemoveSoftBlocksRequestBody"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/softblocks.RemoveSoftBlocksResponseBody"
    post:
      consumes:
        - application/json
      description: |-
        Insert a batch of transactions into a soft block for preconfirmation. If the batch is the
        first for a block, a new soft block will be created. Otherwise, the transactions will
        be appended to the existing soft block. The API will fail if:
        1) the block is not soft
        2) block-level parameters are invalid or do not match the current soft blockâ€™s parameters
        3) the batch ID is not exactly 1 greater than the previous one
        4) the last batch of the block indicates no further transactions are allowed
      parameters:
        - description: soft block creation request body
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/softblocks.BuildSoftBlockRequestBody"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/softblocks.BuildSoftBlockResponseBody"
swagger: "2.0"

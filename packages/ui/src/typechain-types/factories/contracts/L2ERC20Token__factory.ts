/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  L2ERC20Token,
  L2ERC20TokenInterface,
} from "../../contracts/L2ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ff238038062001ff28339818101604052810190620000379190620002f6565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260049081620000889190620005f1565b5081600590816200009a9190620005f1565b5080600660006101000a81548160ff021916908360ff16021790555050505050620006d8565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010182620000d4565b9050919050565b6200011381620000f4565b81146200011f57600080fd5b50565b600081519050620001338162000108565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018e8262000143565b810181811067ffffffffffffffff82111715620001b057620001af62000154565b5b80604052505050565b6000620001c5620000c0565b9050620001d3828262000183565b919050565b600067ffffffffffffffff821115620001f657620001f562000154565b5b620002018262000143565b9050602081019050919050565b60005b838110156200022e57808201518184015260208101905062000211565b60008484015250505050565b6000620002516200024b84620001d8565b620001b9565b90508281526020810184848401111562000270576200026f6200013e565b5b6200027d8482856200020e565b509392505050565b600082601f8301126200029d576200029c62000139565b5b8151620002af8482602086016200023a565b91505092915050565b600060ff82169050919050565b620002d081620002b8565b8114620002dc57600080fd5b50565b600081519050620002f081620002c5565b92915050565b60008060008060808587031215620003135762000312620000ca565b5b6000620003238782880162000122565b945050602085015167ffffffffffffffff811115620003475762000346620000cf565b5b620003558782880162000285565b935050604085015167ffffffffffffffff811115620003795762000378620000cf565b5b620003878782880162000285565b92505060606200039a87828801620002df565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f957607f821691505b6020821081036200040f576200040e620003b1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004797fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200043a565b6200048586836200043a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004d2620004cc620004c6846200049d565b620004a7565b6200049d565b9050919050565b6000819050919050565b620004ee83620004b1565b62000506620004fd82620004d9565b84845462000447565b825550505050565b600090565b6200051d6200050e565b6200052a818484620004e3565b505050565b5b8181101562000552576200054660008262000513565b60018101905062000530565b5050565b601f821115620005a1576200056b8162000415565b62000576846200042a565b8101602085101562000586578190505b6200059e62000595856200042a565b8301826200052f565b50505b505050565b600082821c905092915050565b6000620005c660001984600802620005a6565b1980831691505092915050565b6000620005e18383620005b3565b9150826002028217905092915050565b620005fc82620003a6565b67ffffffffffffffff81111562000618576200061762000154565b5b620006248254620003e0565b6200063182828562000556565b600060209050601f83116001811462000669576000841562000654578287015190505b620006608582620005d3565b865550620006d0565b601f198416620006798662000415565b60005b82811015620006a3578489015182556001820191506020850194506020810190506200067c565b86831015620006c35784890151620006bf601f891682620005b3565b8355505b6001600288020188555050505b505050505050565b61190a80620006e86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac1461023c578063a457c2d71461026c578063a9059cbb1461029c578063dd62ed3e146102cc576100cf565b806340c10f19146101be57806370a08231146101ee57806395d89b411461021e576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102fc565b6040516100e99190611049565b60405180910390f35b61010c60048036038101906101079190611104565b61038e565b604051610119919061115f565b60405180910390f35b61012a6103aa565b6040516101379190611189565b60405180910390f35b61015a600480360381019061015591906111a4565b6103b4565b604051610167919061115f565b60405180910390f35b6101786103dc565b6040516101859190611213565b60405180910390f35b6101a860048036038101906101a39190611104565b6103f3565b6040516101b5919061115f565b60405180910390f35b6101d860048036038101906101d39190611104565b610423565b6040516101e5919061115f565b60405180910390f35b6102086004803603810190610203919061122e565b61052e565b6040516102159190611189565b60405180910390f35b610226610577565b6040516102339190611049565b60405180910390f35b61025660048036038101906102519190611104565b610609565b604051610263919061115f565b60405180910390f35b61028660048036038101906102819190611104565b6106fc565b604051610293919061115f565b60405180910390f35b6102b660048036038101906102b19190611104565b61076c565b6040516102c3919061115f565b60405180910390f35b6102e660048036038101906102e1919061125b565b610788565b6040516102f39190611189565b60405180910390f35b60606004805461030b906112ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906112ca565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b60008033905061039f81858561080f565b600191505092915050565b6000600354905090565b6000803390506103c58582856109d8565b6103d0858585610a64565b60019150509392505050565b6000600660009054906101000a900460ff16905090565b6000803390506104188185856104098589610788565b610413919061132a565b61080f565b600191505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab906113aa565b60405180910390fd5b6104be8383610ce6565b8273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f88460405161051c9190611189565b60405180910390a36001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054610586906112ca565b80601f01602080910402602001604051908101604052809291908181526020018280546105b2906112ca565b80156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610691906113aa565b60405180910390fd5b6106a48383610e46565b8273ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040516106ea9190611189565b60405180910390a26001905092915050565b600080339050600061070e8286610788565b905083811015610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a9061143c565b60405180910390fd5b610760828686840361080f565b60019250505092915050565b60008033905061077d818585610a64565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361087e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610875906114ce565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e490611560565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109cb9190611189565b60405180910390a3505050565b60006109e48484610788565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a5e5781811015610a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a47906115cc565b60405180910390fd5b610a5d848484840361080f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca9061165e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b39906116f0565b60405180910390fd5b610b4d838383610faf565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611782565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c69919061132a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ccd9190611189565b60405180910390a3610ce0848484610fb4565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c906117ee565b60405180910390fd5b610d6160008383610faf565b8060036000828254610d73919061132a565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dc9919061132a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e2e9190611189565b60405180910390a3610e4260008383610fb4565b5050565b610e5282600083610faf565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ed9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed090611880565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160036000828254610f3191906118a0565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f969190611189565b60405180910390a3610faa83600084610fb4565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ff3578082015181840152602081019050610fd8565b60008484015250505050565b6000601f19601f8301169050919050565b600061101b82610fb9565b6110258185610fc4565b9350611035818560208601610fd5565b61103e81610fff565b840191505092915050565b600060208201905081810360008301526110638184611010565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061109b82611070565b9050919050565b6110ab81611090565b81146110b657600080fd5b50565b6000813590506110c8816110a2565b92915050565b6000819050919050565b6110e1816110ce565b81146110ec57600080fd5b50565b6000813590506110fe816110d8565b92915050565b6000806040838503121561111b5761111a61106b565b5b6000611129858286016110b9565b925050602061113a858286016110ef565b9150509250929050565b60008115159050919050565b61115981611144565b82525050565b60006020820190506111746000830184611150565b92915050565b611183816110ce565b82525050565b600060208201905061119e600083018461117a565b92915050565b6000806000606084860312156111bd576111bc61106b565b5b60006111cb868287016110b9565b93505060206111dc868287016110b9565b92505060406111ed868287016110ef565b9150509250925092565b600060ff82169050919050565b61120d816111f7565b82525050565b60006020820190506112286000830184611204565b92915050565b6000602082840312156112445761124361106b565b5b6000611252848285016110b9565b91505092915050565b600080604083850312156112725761127161106b565b5b6000611280858286016110b9565b9250506020611291858286016110b9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112e257607f821691505b6020821081036112f5576112f461129b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611335826110ce565b9150611340836110ce565b9250828201905080821115611358576113576112fb565b5b92915050565b7f6f6e6c79206272696467652063616e20646f2074686973000000000000000000600082015250565b6000611394601783610fc4565b915061139f8261135e565b602082019050919050565b600060208201905081810360008301526113c381611387565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611426602583610fc4565b9150611431826113ca565b604082019050919050565b6000602082019050818103600083015261145581611419565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006114b8602483610fc4565b91506114c38261145c565b604082019050919050565b600060208201905081810360008301526114e7816114ab565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061154a602283610fc4565b9150611555826114ee565b604082019050919050565b600060208201905081810360008301526115798161153d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006115b6601d83610fc4565b91506115c182611580565b602082019050919050565b600060208201905081810360008301526115e5816115a9565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611648602583610fc4565b9150611653826115ec565b604082019050919050565b600060208201905081810360008301526116778161163b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006116da602383610fc4565b91506116e58261167e565b604082019050919050565b60006020820190508181036000830152611709816116cd565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061176c602683610fc4565b915061177782611710565b604082019050919050565b6000602082019050818103600083015261179b8161175f565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006117d8601f83610fc4565b91506117e3826117a2565b602082019050919050565b60006020820190508181036000830152611807816117cb565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061186a602283610fc4565b91506118758261180e565b604082019050919050565b600060208201905081810360008301526118998161185d565b9050919050565b60006118ab826110ce565b91506118b6836110ce565b92508282039050818111156118ce576118cd6112fb565b5b9291505056fea26469706673582212205965ab107f14f6448a8ea4e3aa2095e5727c2634a7efefa247d2c1eb5ac244c064736f6c63430008110033";

type L2ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2ERC20Token__factory extends ContractFactory {
  constructor(...args: L2ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bridge_: PromiseOrValue<string>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L2ERC20Token> {
    return super.deploy(
      bridge_,
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<L2ERC20Token>;
  }
  override getDeployTransaction(
    bridge_: PromiseOrValue<string>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridge_,
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): L2ERC20Token {
    return super.attach(address) as L2ERC20Token;
  }
  override connect(signer: Signer): L2ERC20Token__factory {
    return super.connect(signer) as L2ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2ERC20TokenInterface {
    return new utils.Interface(_abi) as L2ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as L2ERC20Token;
  }
}

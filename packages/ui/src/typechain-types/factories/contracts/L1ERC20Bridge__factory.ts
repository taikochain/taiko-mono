/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  L1ERC20Bridge,
  L1ERC20BridgeInterface,
} from "../../contracts/L1ERC20Bridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensUnlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositAndLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unlockAndWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200137d3803806200137d8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b61116680620002176000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633c57aa7114610067578063715018a614610083578063730cbf421461008d5780638da5cb5b146100a9578063bdc50373146100c7578063f2fde38b146100e5575b600080fd5b610081600480360381019061007c9190610a47565b610101565b005b61008b610489565b005b6100a760048036038101906100a29190610a9a565b61049d565b005b6100b161078e565b6040516100be9190610ae9565b60405180910390f35b6100cf6107b7565b6040516100dc9190610ae9565b60405180910390f35b6100ff60048036038101906100fa9190610b04565b6107e1565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018890610b8e565b60405180910390fd5b600081116101d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cb90610bfa565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610c8c565b60405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86856040518363ffffffff1660e01b81526004016102d8929190610cbb565b6020604051808303816000875af192505050801561031457506040513d601f19601f820116820180604052508101906103119190610d1c565b60015b610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90610d95565b60405180910390fd5b80610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90610d95565b60405180910390fd5b83600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461041f9190610de4565b92505081905550838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fece684e11f49f06d351439e63189ad1703238b8040d90cf994901ca2b3da8d4460405160405180910390a4505050505050565b610491610864565b61049b60006108e2565b565b600081116104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610e64565b60405180910390fd5b6000829050818173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610521929190610e84565b602060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105629190610ec2565b10156105a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059a90610f3b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105e093929190610f5b565b6020604051808303816000875af192505050801561061c57506040513d601f19601f820116820180604052508101906106199190610d1c565b60015b61065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065290610fde565b60405180910390fd5b8061069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290610fde565b60405180910390fd5b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107279190610ffe565b92505081905550828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ee8ffc569c5f605999e8ad11ec9db2ef2254b66370f5b963df609fa59854eb260405160405180910390a450505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107e9610864565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084f906110a4565b60405180910390fd5b610861816108e2565b50565b61086c6109a6565b73ffffffffffffffffffffffffffffffffffffffff1661088a61078e565b73ffffffffffffffffffffffffffffffffffffffff16146108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d790611110565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109de826109b3565b9050919050565b6109ee816109d3565b81146109f957600080fd5b50565b600081359050610a0b816109e5565b92915050565b6000819050919050565b610a2481610a11565b8114610a2f57600080fd5b50565b600081359050610a4181610a1b565b92915050565b600080600060608486031215610a6057610a5f6109ae565b5b6000610a6e868287016109fc565b9350506020610a7f868287016109fc565b9250506040610a9086828701610a32565b9150509250925092565b60008060408385031215610ab157610ab06109ae565b5b6000610abf858286016109fc565b9250506020610ad085828601610a32565b9150509250929050565b610ae3816109d3565b82525050565b6000602082019050610afe6000830184610ada565b92915050565b600060208284031215610b1a57610b196109ae565b5b6000610b28848285016109fc565b91505092915050565b600082825260208201905092915050565b7f6f6e6c792072656c617965722063616e20646f20746869730000000000000000600082015250565b6000610b78601883610b31565b9150610b8382610b42565b602082019050919050565b60006020820190508181036000830152610ba781610b6b565b9050919050565b7f63616e206e6f7420756e6c6f636b203020616d6f756e74000000000000000000600082015250565b6000610be4601783610b31565b9150610bef82610bae565b602082019050919050565b60006020820190508181036000830152610c1381610bd7565b9050919050565b7f7573657220646f6573206e6f7420686176652073756666696369656e74206c6f60008201527f636b65642062616c616e63650000000000000000000000000000000000000000602082015250565b6000610c76602c83610b31565b9150610c8182610c1a565b604082019050919050565b60006020820190508181036000830152610ca581610c69565b9050919050565b610cb581610a11565b82525050565b6000604082019050610cd06000830185610ada565b610cdd6020830184610cac565b9392505050565b60008115159050919050565b610cf981610ce4565b8114610d0457600080fd5b50565b600081519050610d1681610cf0565b92915050565b600060208284031215610d3257610d316109ae565b5b6000610d4084828501610d07565b91505092915050565b7f756e61626c6520746f207472616e736665720000000000000000000000000000600082015250565b6000610d7f601283610b31565b9150610d8a82610d49565b602082019050919050565b60006020820190508181036000830152610dae81610d72565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610def82610a11565b9150610dfa83610a11565b9250828203905081811115610e1257610e11610db5565b5b92915050565b7f63616e206e6f74206c6f636b203020746f6b656e730000000000000000000000600082015250565b6000610e4e601583610b31565b9150610e5982610e18565b602082019050919050565b60006020820190508181036000830152610e7d81610e41565b9050919050565b6000604082019050610e996000830185610ada565b610ea66020830184610ada565b9392505050565b600081519050610ebc81610a1b565b92915050565b600060208284031215610ed857610ed76109ae565b5b6000610ee684828501610ead565b91505092915050565b7f616c6c6f77616e6365206e6f7420656e6f756768000000000000000000000000600082015250565b6000610f25601483610b31565b9150610f3082610eef565b602082019050919050565b60006020820190508181036000830152610f5481610f18565b9050919050565b6000606082019050610f706000830186610ada565b610f7d6020830185610ada565b610f8a6040830184610cac565b949350505050565b7f7472616e7366657246726f6d206661696c656400000000000000000000000000600082015250565b6000610fc8601383610b31565b9150610fd382610f92565b602082019050919050565b60006020820190508181036000830152610ff781610fbb565b9050919050565b600061100982610a11565b915061101483610a11565b925082820190508082111561102c5761102b610db5565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061108e602683610b31565b915061109982611032565b604082019050919050565b600060208201905081810360008301526110bd81611081565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006110fa602083610b31565b9150611105826110c4565b602082019050919050565b60006020820190508181036000830152611129816110ed565b905091905056fea264697066735822122075b25af231976c1817c3864134989248f8610ed4e0348d3deeaff7d84e79849f64736f6c63430008110033";

type L1ERC20BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1ERC20BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1ERC20Bridge__factory extends ContractFactory {
  constructor(...args: L1ERC20BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _relayer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1ERC20Bridge> {
    return super.deploy(_relayer, overrides || {}) as Promise<L1ERC20Bridge>;
  }
  override getDeployTransaction(
    _relayer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_relayer, overrides || {});
  }
  override attach(address: string): L1ERC20Bridge {
    return super.attach(address) as L1ERC20Bridge;
  }
  override connect(signer: Signer): L1ERC20Bridge__factory {
    return super.connect(signer) as L1ERC20Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1ERC20BridgeInterface {
    return new utils.Interface(_abi) as L1ERC20BridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1ERC20Bridge {
    return new Contract(address, _abi, signerOrProvider) as L1ERC20Bridge;
  }
}

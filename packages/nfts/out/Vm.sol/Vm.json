{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert()":"285b366a","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockFunction(address,address,bytes)":"adf84d21","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns an random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns an random byte array value of the given length.\"},\"randomInt()\":{\"notice\":\"Returns an random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns an random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns an random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@taiko/blacklist/=node_modules/@taiko/supplementary-contracts/contracts/blacklist/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/\",\":murky/=node_modules/murky/src/\",\":openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/\",\":p256-verifier/=node_modules/p256-verifier/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\"]},\"sources\":{\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4cf4fbccf5c3f6e5e022d511cc67cce4fb93ce335106a7ee52b4034ad5dae99a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0114018f4670c22ed000dec83d8dc26e483ba323e5e58c4e99af568919fbeb81\",\"dweb:/ipfs/QmY13eZqF2P8dSZbPZNwG7nE8LsqdUrnZXNiZ8g9h96q2v\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns an random `bool`."},"randomBytes(uint256)":{"notice":"Returns an random byte array value of the given length."},"randomInt()":{"notice":"Returns an random `int256` value."},"randomInt(uint256)":{"notice":"Returns an random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns an random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@taiko/blacklist/=node_modules/@taiko/supplementary-contracts/contracts/blacklist/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/","murky/=node_modules/murky/src/","openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/","p256-verifier/=node_modules/p256-verifier/","solady/=node_modules/solady/","solidity-stringutils/=node_modules/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/forge-std/src/Vm.sol":"Vm"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/forge-std/src/Vm.sol":{"keccak256":"0x4cf4fbccf5c3f6e5e022d511cc67cce4fb93ce335106a7ee52b4034ad5dae99a","urls":["bzz-raw://0114018f4670c22ed000dec83d8dc26e483ba323e5e58c4e99af568919fbeb81","dweb:/ipfs/QmY13eZqF2P8dSZbPZNwG7nE8LsqdUrnZXNiZ8g9h96q2v"],"license":"MIT OR Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"node_modules/forge-std/src/Vm.sol","id":36402,"exportedSymbols":{"Vm":[36401],"VmSafe":[35698]},"nodeType":"SourceUnit","src":"117:101971:89","nodes":[{"id":32185,"nodeType":"PragmaDirective","src":"117:31:89","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":32186,"nodeType":"PragmaDirective","src":"149:33:89","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":35698,"nodeType":"ContractDefinition","src":"409:84079:89","nodes":[{"id":32194,"nodeType":"EnumDefinition","src":"529:533:89","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":32188,"nodeType":"StructuredDocumentation","src":"432:92:89","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":32189,"name":"None","nameLocation":"610:4:89","nodeType":"EnumValue","src":"610:4:89"},{"id":32190,"name":"Broadcast","nameLocation":"714:9:89","nodeType":"EnumValue","src":"714:9:89"},{"id":32191,"name":"RecurrentBroadcast","nameLocation":"829:18:89","nodeType":"EnumValue","src":"829:18:89"},{"id":32192,"name":"Prank","nameLocation":"939:5:89","nodeType":"EnumValue","src":"939:5:89"},{"id":32193,"name":"RecurrentPrank","nameLocation":"1042:14:89","nodeType":"EnumValue","src":"1042:14:89"}],"name":"CallerMode","nameLocation":"534:10:89"},{"id":32207,"nodeType":"EnumDefinition","src":"1118:791:89","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":32195,"nodeType":"StructuredDocumentation","src":"1068:45:89","text":"The kind of account access that occurred."},"members":[{"id":32196,"name":"Call","nameLocation":"1186:4:89","nodeType":"EnumValue","src":"1186:4:89"},{"id":32197,"name":"DelegateCall","nameLocation":"1252:12:89","nodeType":"EnumValue","src":"1252:12:89"},{"id":32198,"name":"CallCode","nameLocation":"1322:8:89","nodeType":"EnumValue","src":"1322:8:89"},{"id":32199,"name":"StaticCall","nameLocation":"1390:10:89","nodeType":"EnumValue","src":"1390:10:89"},{"id":32200,"name":"Create","nameLocation":"1446:6:89","nodeType":"EnumValue","src":"1446:6:89"},{"id":32201,"name":"SelfDestruct","nameLocation":"1505:12:89","nodeType":"EnumValue","src":"1505:12:89"},{"id":32202,"name":"Resume","nameLocation":"1644:6:89","nodeType":"EnumValue","src":"1644:6:89"},{"id":32203,"name":"Balance","nameLocation":"1703:7:89","nodeType":"EnumValue","src":"1703:7:89"},{"id":32204,"name":"Extcodesize","nameLocation":"1764:11:89","nodeType":"EnumValue","src":"1764:11:89"},{"id":32205,"name":"Extcodehash","nameLocation":"1829:11:89","nodeType":"EnumValue","src":"1829:11:89"},{"id":32206,"name":"Extcodecopy","nameLocation":"1892:11:89","nodeType":"EnumValue","src":"1892:11:89"}],"name":"AccountAccessKind","nameLocation":"1123:17:89"},{"id":32218,"nodeType":"EnumDefinition","src":"1949:683:89","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":32208,"nodeType":"StructuredDocumentation","src":"1915:29:89","text":"Forge execution contexts."},"members":[{"id":32209,"name":"TestGroup","nameLocation":"2047:9:89","nodeType":"EnumValue","src":"2047:9:89"},{"id":32210,"name":"Test","nameLocation":"2109:4:89","nodeType":"EnumValue","src":"2109:4:89"},{"id":32211,"name":"Coverage","nameLocation":"2170:8:89","nodeType":"EnumValue","src":"2170:8:89"},{"id":32212,"name":"Snapshot","nameLocation":"2235:8:89","nodeType":"EnumValue","src":"2235:8:89"},{"id":32213,"name":"ScriptGroup","nameLocation":"2327:11:89","nodeType":"EnumValue","src":"2327:11:89"},{"id":32214,"name":"ScriptDryRun","nameLocation":"2393:12:89","nodeType":"EnumValue","src":"2393:12:89"},{"id":32215,"name":"ScriptBroadcast","nameLocation":"2472:15:89","nodeType":"EnumValue","src":"2472:15:89"},{"id":32216,"name":"ScriptResume","nameLocation":"2551:12:89","nodeType":"EnumValue","src":"2551:12:89"},{"id":32217,"name":"Unknown","nameLocation":"2619:7:89","nodeType":"EnumValue","src":"2619:7:89"}],"name":"ForgeContext","nameLocation":"1954:12:89"},{"id":32227,"nodeType":"StructDefinition","src":"2694:237:89","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":32219,"nodeType":"StructuredDocumentation","src":"2638:51:89","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":32222,"mutability":"mutable","name":"topics","nameLocation":"2792:6:89","nodeType":"VariableDeclaration","scope":32227,"src":"2782:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32221,"nodeType":"ArrayTypeName","src":"2782:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":32224,"mutability":"mutable","name":"data","nameLocation":"2850:4:89","nodeType":"VariableDeclaration","scope":32227,"src":"2844:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":32223,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":32226,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:89","nodeType":"VariableDeclaration","scope":32227,"src":"2909:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32225,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:89","scope":35698,"visibility":"public"},{"id":32233,"nodeType":"StructDefinition","src":"3000:119:89","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":32228,"nodeType":"StructuredDocumentation","src":"2937:58:89","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":32230,"mutability":"mutable","name":"key","nameLocation":"3065:3:89","nodeType":"VariableDeclaration","scope":32233,"src":"3058:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":32229,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32232,"mutability":"mutable","name":"url","nameLocation":"3109:3:89","nodeType":"VariableDeclaration","scope":32233,"src":"3102:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":32231,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:89","scope":35698,"visibility":"public"},{"id":32254,"nodeType":"StructDefinition","src":"3179:615:89","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":32234,"nodeType":"StructuredDocumentation","src":"3125:49:89","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":32236,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:89","nodeType":"VariableDeclaration","scope":32254,"src":"3252:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32235,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32239,"mutability":"mutable","name":"topics","nameLocation":"3354:6:89","nodeType":"VariableDeclaration","scope":32254,"src":"3344:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32238,"nodeType":"ArrayTypeName","src":"3344:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":32241,"mutability":"mutable","name":"data","nameLocation":"3412:4:89","nodeType":"VariableDeclaration","scope":32254,"src":"3406:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":32240,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":32243,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:89","nodeType":"VariableDeclaration","scope":32254,"src":"3453:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32245,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:89","nodeType":"VariableDeclaration","scope":32254,"src":"3509:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32244,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":32247,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:89","nodeType":"VariableDeclaration","scope":32254,"src":"3570:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32249,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:89","nodeType":"VariableDeclaration","scope":32254,"src":"3650:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32248,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":32251,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:89","nodeType":"VariableDeclaration","scope":32254,"src":"3709:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32250,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32253,"mutability":"mutable","name":"removed","nameLocation":"3780:7:89","nodeType":"VariableDeclaration","scope":32254,"src":"3775:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32252,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:89","scope":35698,"visibility":"public"},{"id":32266,"nodeType":"StructDefinition","src":"3870:334:89","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":32255,"nodeType":"StructuredDocumentation","src":"3800:65:89","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":32257,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:89","nodeType":"VariableDeclaration","scope":32266,"src":"3934:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":32256,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32259,"mutability":"mutable","name":"path","nameLocation":"4004:4:89","nodeType":"VariableDeclaration","scope":32266,"src":"3997:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":32258,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32261,"mutability":"mutable","name":"depth","nameLocation":"4060:5:89","nodeType":"VariableDeclaration","scope":32266,"src":"4053:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32260,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":32263,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:89","nodeType":"VariableDeclaration","scope":32266,"src":"4120:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32262,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32265,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:89","nodeType":"VariableDeclaration","scope":32266,"src":"4183:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32264,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:89","scope":35698,"visibility":"public"},{"id":32282,"nodeType":"StructDefinition","src":"4434:599:89","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":32267,"nodeType":"StructuredDocumentation","src":"4210:219:89","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":32269,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:89","nodeType":"VariableDeclaration","scope":32282,"src":"4515:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32268,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32271,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:89","nodeType":"VariableDeclaration","scope":32282,"src":"4586:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32270,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32273,"mutability":"mutable","name":"length","nameLocation":"4683:6:89","nodeType":"VariableDeclaration","scope":32282,"src":"4675:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32272,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32275,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:89","nodeType":"VariableDeclaration","scope":32282,"src":"4769:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32274,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32277,"mutability":"mutable","name":"modified","nameLocation":"4863:8:89","nodeType":"VariableDeclaration","scope":32282,"src":"4855:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32279,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:89","nodeType":"VariableDeclaration","scope":32282,"src":"4931:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32281,"mutability":"mutable","name":"created","nameLocation":"5019:7:89","nodeType":"VariableDeclaration","scope":32282,"src":"5011:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32280,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:89","scope":35698,"visibility":"public"},{"id":32292,"nodeType":"StructDefinition","src":"5087:277:89","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":32283,"nodeType":"StructuredDocumentation","src":"5039:43:89","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":32285,"mutability":"mutable","name":"addr","nameLocation":"5152:4:89","nodeType":"VariableDeclaration","scope":32292,"src":"5144:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32284,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32287,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:89","nodeType":"VariableDeclaration","scope":32292,"src":"5206:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32289,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:89","nodeType":"VariableDeclaration","scope":32292,"src":"5274:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32288,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32291,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:89","nodeType":"VariableDeclaration","scope":32292,"src":"5339:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32290,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:89","scope":35698,"visibility":"public"},{"id":32300,"nodeType":"StructDefinition","src":"5409:213:89","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":32293,"nodeType":"StructuredDocumentation","src":"5370:34:89","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":32295,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:89","nodeType":"VariableDeclaration","scope":32300,"src":"5474:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":32294,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:89","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":32297,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:89","nodeType":"VariableDeclaration","scope":32300,"src":"5551:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":32296,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":32299,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:89","nodeType":"VariableDeclaration","scope":32300,"src":"5603:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":32298,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:89","scope":35698,"visibility":"public"},{"id":32306,"nodeType":"StructDefinition","src":"5671:184:89","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":32301,"nodeType":"StructuredDocumentation","src":"5628:38:89","text":"Information on the chain and fork."},"members":[{"constant":false,"id":32303,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:89","nodeType":"VariableDeclaration","scope":32306,"src":"5764:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32305,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:89","nodeType":"VariableDeclaration","scope":32306,"src":"5833:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:89","scope":35698,"visibility":"public"},{"id":32338,"nodeType":"StructDefinition","src":"5916:1837:89","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":32307,"nodeType":"StructuredDocumentation","src":"5861:50:89","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":32310,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:89","nodeType":"VariableDeclaration","scope":32338,"src":"5998:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$32306_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":32309,"nodeType":"UserDefinedTypeName","pathNode":{"id":32308,"name":"ChainInfo","nameLocations":["5998:9:89"],"nodeType":"IdentifierPath","referencedDeclaration":32306,"src":"5998:9:89"},"referencedDeclaration":32306,"src":"5998:9:89","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$32306_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":32313,"mutability":"mutable","name":"kind","nameLocation":"6471:4:89","nodeType":"VariableDeclaration","scope":32338,"src":"6453:22:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$32207","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":32312,"nodeType":"UserDefinedTypeName","pathNode":{"id":32311,"name":"AccountAccessKind","nameLocations":["6453:17:89"],"nodeType":"IdentifierPath","referencedDeclaration":32207,"src":"6453:17:89"},"referencedDeclaration":32207,"src":"6453:17:89","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$32207","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":32315,"mutability":"mutable","name":"account","nameLocation":"6648:7:89","nodeType":"VariableDeclaration","scope":32338,"src":"6640:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32314,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32317,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:89","nodeType":"VariableDeclaration","scope":32338,"src":"6703:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32316,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32319,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:89","nodeType":"VariableDeclaration","scope":32338,"src":"6917:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32318,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32321,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:89","nodeType":"VariableDeclaration","scope":32338,"src":"7000:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32320,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32323,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:89","nodeType":"VariableDeclaration","scope":32338,"src":"7175:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32322,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32325,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:89","nodeType":"VariableDeclaration","scope":32338,"src":"7254:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":32324,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":32327,"mutability":"mutable","name":"value","nameLocation":"7344:5:89","nodeType":"VariableDeclaration","scope":32338,"src":"7336:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32326,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32329,"mutability":"mutable","name":"data","nameLocation":"7418:4:89","nodeType":"VariableDeclaration","scope":32338,"src":"7412:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":32328,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":32331,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:89","nodeType":"VariableDeclaration","scope":32338,"src":"7508:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32330,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32335,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:89","nodeType":"VariableDeclaration","scope":32338,"src":"7619:31:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$32352_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":32333,"nodeType":"UserDefinedTypeName","pathNode":{"id":32332,"name":"StorageAccess","nameLocations":["7619:13:89"],"nodeType":"IdentifierPath","referencedDeclaration":32352,"src":"7619:13:89"},"referencedDeclaration":32352,"src":"7619:13:89","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$32352_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":32334,"nodeType":"ArrayTypeName","src":"7619:15:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$32352_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":32337,"mutability":"mutable","name":"depth","nameLocation":"7741:5:89","nodeType":"VariableDeclaration","scope":32338,"src":"7734:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32336,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:89","scope":35698,"visibility":"public"},{"id":32352,"nodeType":"StructDefinition","src":"7815:425:89","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":32339,"nodeType":"StructuredDocumentation","src":"7759:51:89","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":32341,"mutability":"mutable","name":"account","nameLocation":"7905:7:89","nodeType":"VariableDeclaration","scope":32352,"src":"7897:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32340,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32343,"mutability":"mutable","name":"slot","nameLocation":"7969:4:89","nodeType":"VariableDeclaration","scope":32352,"src":"7961:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32345,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:89","nodeType":"VariableDeclaration","scope":32352,"src":"8021:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32344,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32347,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:89","nodeType":"VariableDeclaration","scope":32352,"src":"8086:21:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32349,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:89","nodeType":"VariableDeclaration","scope":32352,"src":"8155:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32351,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:89","nodeType":"VariableDeclaration","scope":32352,"src":"8220:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32350,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:89","scope":35698,"visibility":"public"},{"id":32364,"nodeType":"StructDefinition","src":"8291:458:89","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":32353,"nodeType":"StructuredDocumentation","src":"8246:40:89","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":32355,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:89","nodeType":"VariableDeclaration","scope":32364,"src":"8350:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32354,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":32357,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:89","nodeType":"VariableDeclaration","scope":32364,"src":"8406:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32356,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":32359,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:89","nodeType":"VariableDeclaration","scope":32364,"src":"8587:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32358,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":32361,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:89","nodeType":"VariableDeclaration","scope":32364,"src":"8656:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":32360,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:89","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":32363,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:89","nodeType":"VariableDeclaration","scope":32364,"src":"8723:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32362,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:89","scope":35698,"visibility":"public"},{"id":32373,"nodeType":"FunctionDefinition","src":"8892:91:89","nodes":[],"documentation":{"id":32365,"nodeType":"StructuredDocumentation","src":"8788:99:89","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"8901:12:89","parameters":{"id":32368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32367,"mutability":"mutable","name":"walletLabel","nameLocation":"8930:11:89","nodeType":"VariableDeclaration","scope":32373,"src":"8914:27:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32366,"name":"string","nodeType":"ElementaryTypeName","src":"8914:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8913:29:89"},"returnParameters":{"id":32372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32371,"mutability":"mutable","name":"wallet","nameLocation":"8975:6:89","nodeType":"VariableDeclaration","scope":32373,"src":"8961:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":32370,"nodeType":"UserDefinedTypeName","pathNode":{"id":32369,"name":"Wallet","nameLocations":["8961:6:89"],"nodeType":"IdentifierPath","referencedDeclaration":32292,"src":"8961:6:89"},"referencedDeclaration":32292,"src":"8961:6:89","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"8960:22:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32382,"nodeType":"FunctionDefinition","src":"9061:82:89","nodes":[],"documentation":{"id":32374,"nodeType":"StructuredDocumentation","src":"8989:67:89","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9070:12:89","parameters":{"id":32377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32376,"mutability":"mutable","name":"privateKey","nameLocation":"9091:10:89","nodeType":"VariableDeclaration","scope":32382,"src":"9083:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32375,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:20:89"},"returnParameters":{"id":32381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32380,"mutability":"mutable","name":"wallet","nameLocation":"9135:6:89","nodeType":"VariableDeclaration","scope":32382,"src":"9121:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":32379,"nodeType":"UserDefinedTypeName","pathNode":{"id":32378,"name":"Wallet","nameLocations":["9121:6:89"],"nodeType":"IdentifierPath","referencedDeclaration":32292,"src":"9121:6:89"},"referencedDeclaration":32292,"src":"9121:6:89","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9120:22:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32393,"nodeType":"FunctionDefinition","src":"9257:111:89","nodes":[],"documentation":{"id":32383,"nodeType":"StructuredDocumentation","src":"9149:103:89","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9266:12:89","parameters":{"id":32388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32385,"mutability":"mutable","name":"privateKey","nameLocation":"9287:10:89","nodeType":"VariableDeclaration","scope":32393,"src":"9279:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32384,"name":"uint256","nodeType":"ElementaryTypeName","src":"9279:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32387,"mutability":"mutable","name":"walletLabel","nameLocation":"9315:11:89","nodeType":"VariableDeclaration","scope":32393,"src":"9299:27:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32386,"name":"string","nodeType":"ElementaryTypeName","src":"9299:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9278:49:89"},"returnParameters":{"id":32392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32391,"mutability":"mutable","name":"wallet","nameLocation":"9360:6:89","nodeType":"VariableDeclaration","scope":32393,"src":"9346:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":32390,"nodeType":"UserDefinedTypeName","pathNode":{"id":32389,"name":"Wallet","nameLocations":["9346:6:89"],"nodeType":"IdentifierPath","referencedDeclaration":32292,"src":"9346:6:89"},"referencedDeclaration":32292,"src":"9346:6:89","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9345:22:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32403,"nodeType":"FunctionDefinition","src":"9516:102:89","nodes":[],"documentation":{"id":32394,"nodeType":"StructuredDocumentation","src":"9374:137:89","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9525:9:89","parameters":{"id":32399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32396,"mutability":"mutable","name":"mnemonic","nameLocation":"9551:8:89","nodeType":"VariableDeclaration","scope":32403,"src":"9535:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32395,"name":"string","nodeType":"ElementaryTypeName","src":"9535:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32398,"mutability":"mutable","name":"index","nameLocation":"9568:5:89","nodeType":"VariableDeclaration","scope":32403,"src":"9561:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":32397,"name":"uint32","nodeType":"ElementaryTypeName","src":"9561:6:89","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9534:40:89"},"returnParameters":{"id":32402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32401,"mutability":"mutable","name":"privateKey","nameLocation":"9606:10:89","nodeType":"VariableDeclaration","scope":32403,"src":"9598:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32400,"name":"uint256","nodeType":"ElementaryTypeName","src":"9598:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9597:20:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32415,"nodeType":"FunctionDefinition","src":"9747:158:89","nodes":[],"documentation":{"id":32404,"nodeType":"StructuredDocumentation","src":"9624:118:89","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9756:9:89","parameters":{"id":32411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32406,"mutability":"mutable","name":"mnemonic","nameLocation":"9782:8:89","nodeType":"VariableDeclaration","scope":32415,"src":"9766:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32405,"name":"string","nodeType":"ElementaryTypeName","src":"9766:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32408,"mutability":"mutable","name":"derivationPath","nameLocation":"9808:14:89","nodeType":"VariableDeclaration","scope":32415,"src":"9792:30:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32407,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32410,"mutability":"mutable","name":"index","nameLocation":"9831:5:89","nodeType":"VariableDeclaration","scope":32415,"src":"9824:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":32409,"name":"uint32","nodeType":"ElementaryTypeName","src":"9824:6:89","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9765:72:89"},"returnParameters":{"id":32414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32413,"mutability":"mutable","name":"privateKey","nameLocation":"9893:10:89","nodeType":"VariableDeclaration","scope":32415,"src":"9885:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32412,"name":"uint256","nodeType":"ElementaryTypeName","src":"9885:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9884:20:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32427,"nodeType":"FunctionDefinition","src":"10079:152:89","nodes":[],"documentation":{"id":32416,"nodeType":"StructuredDocumentation","src":"9911:163:89","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10088:9:89","parameters":{"id":32423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32418,"mutability":"mutable","name":"mnemonic","nameLocation":"10114:8:89","nodeType":"VariableDeclaration","scope":32427,"src":"10098:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32417,"name":"string","nodeType":"ElementaryTypeName","src":"10098:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32420,"mutability":"mutable","name":"index","nameLocation":"10131:5:89","nodeType":"VariableDeclaration","scope":32427,"src":"10124:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":32419,"name":"uint32","nodeType":"ElementaryTypeName","src":"10124:6:89","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":32422,"mutability":"mutable","name":"language","nameLocation":"10154:8:89","nodeType":"VariableDeclaration","scope":32427,"src":"10138:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32421,"name":"string","nodeType":"ElementaryTypeName","src":"10138:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10097:66:89"},"returnParameters":{"id":32426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32425,"mutability":"mutable","name":"privateKey","nameLocation":"10219:10:89","nodeType":"VariableDeclaration","scope":32427,"src":"10211:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32424,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10210:20:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32441,"nodeType":"FunctionDefinition","src":"10386:184:89","nodes":[],"documentation":{"id":32428,"nodeType":"StructuredDocumentation","src":"10237:144:89","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10395:9:89","parameters":{"id":32437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32430,"mutability":"mutable","name":"mnemonic","nameLocation":"10421:8:89","nodeType":"VariableDeclaration","scope":32441,"src":"10405:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32429,"name":"string","nodeType":"ElementaryTypeName","src":"10405:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32432,"mutability":"mutable","name":"derivationPath","nameLocation":"10447:14:89","nodeType":"VariableDeclaration","scope":32441,"src":"10431:30:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32431,"name":"string","nodeType":"ElementaryTypeName","src":"10431:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32434,"mutability":"mutable","name":"index","nameLocation":"10470:5:89","nodeType":"VariableDeclaration","scope":32441,"src":"10463:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":32433,"name":"uint32","nodeType":"ElementaryTypeName","src":"10463:6:89","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":32436,"mutability":"mutable","name":"language","nameLocation":"10493:8:89","nodeType":"VariableDeclaration","scope":32441,"src":"10477:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32435,"name":"string","nodeType":"ElementaryTypeName","src":"10477:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10404:98:89"},"returnParameters":{"id":32440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32439,"mutability":"mutable","name":"privateKey","nameLocation":"10558:10:89","nodeType":"VariableDeclaration","scope":32441,"src":"10550:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32438,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10549:20:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32451,"nodeType":"FunctionDefinition","src":"10645:106:89","nodes":[],"documentation":{"id":32442,"nodeType":"StructuredDocumentation","src":"10576:64:89","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"10654:13:89","parameters":{"id":32445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32444,"mutability":"mutable","name":"privateKey","nameLocation":"10676:10:89","nodeType":"VariableDeclaration","scope":32451,"src":"10668:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32443,"name":"uint256","nodeType":"ElementaryTypeName","src":"10668:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10667:20:89"},"returnParameters":{"id":32450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32447,"mutability":"mutable","name":"publicKeyX","nameLocation":"10719:10:89","nodeType":"VariableDeclaration","scope":32451,"src":"10711:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10711:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32449,"mutability":"mutable","name":"publicKeyY","nameLocation":"10739:10:89","nodeType":"VariableDeclaration","scope":32451,"src":"10731:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32448,"name":"uint256","nodeType":"ElementaryTypeName","src":"10731:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10710:40:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32459,"nodeType":"FunctionDefinition","src":"10835:76:89","nodes":[],"documentation":{"id":32452,"nodeType":"StructuredDocumentation","src":"10757:73:89","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"10844:11:89","parameters":{"id":32455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32454,"mutability":"mutable","name":"privateKey","nameLocation":"10864:10:89","nodeType":"VariableDeclaration","scope":32459,"src":"10856:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32453,"name":"uint256","nodeType":"ElementaryTypeName","src":"10856:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:20:89"},"returnParameters":{"id":32458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32457,"mutability":"mutable","name":"keyAddr","nameLocation":"10902:7:89","nodeType":"VariableDeclaration","scope":32459,"src":"10894:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32456,"name":"address","nodeType":"ElementaryTypeName","src":"10894:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10893:17:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32472,"nodeType":"FunctionDefinition","src":"11190:102:89","nodes":[],"documentation":{"id":32460,"nodeType":"StructuredDocumentation","src":"10917:268:89","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11199:11:89","parameters":{"id":32466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32463,"mutability":"mutable","name":"wallet","nameLocation":"11227:6:89","nodeType":"VariableDeclaration","scope":32472,"src":"11211:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":32462,"nodeType":"UserDefinedTypeName","pathNode":{"id":32461,"name":"Wallet","nameLocations":["11211:6:89"],"nodeType":"IdentifierPath","referencedDeclaration":32292,"src":"11211:6:89"},"referencedDeclaration":32292,"src":"11211:6:89","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":32465,"mutability":"mutable","name":"digest","nameLocation":"11243:6:89","nodeType":"VariableDeclaration","scope":32472,"src":"11235:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11235:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11210:40:89"},"returnParameters":{"id":32471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32468,"mutability":"mutable","name":"r","nameLocation":"11277:1:89","nodeType":"VariableDeclaration","scope":32472,"src":"11269:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11269:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32470,"mutability":"mutable","name":"vs","nameLocation":"11288:2:89","nodeType":"VariableDeclaration","scope":32472,"src":"11280:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11280:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11268:23:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32484,"nodeType":"FunctionDefinition","src":"11603:103:89","nodes":[],"documentation":{"id":32473,"nodeType":"StructuredDocumentation","src":"11298:300:89","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11612:11:89","parameters":{"id":32478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32475,"mutability":"mutable","name":"privateKey","nameLocation":"11632:10:89","nodeType":"VariableDeclaration","scope":32484,"src":"11624:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32474,"name":"uint256","nodeType":"ElementaryTypeName","src":"11624:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32477,"mutability":"mutable","name":"digest","nameLocation":"11652:6:89","nodeType":"VariableDeclaration","scope":32484,"src":"11644:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11644:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11623:36:89"},"returnParameters":{"id":32483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32480,"mutability":"mutable","name":"r","nameLocation":"11691:1:89","nodeType":"VariableDeclaration","scope":32484,"src":"11683:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11683:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32482,"mutability":"mutable","name":"vs","nameLocation":"11702:2:89","nodeType":"VariableDeclaration","scope":32484,"src":"11694:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11694:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11682:23:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32494,"nodeType":"FunctionDefinition","src":"12382:83:89","nodes":[],"documentation":{"id":32485,"nodeType":"StructuredDocumentation","src":"11712:665:89","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12391:11:89","parameters":{"id":32488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32487,"mutability":"mutable","name":"digest","nameLocation":"12411:6:89","nodeType":"VariableDeclaration","scope":32494,"src":"12403:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12403:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12402:16:89"},"returnParameters":{"id":32493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32490,"mutability":"mutable","name":"r","nameLocation":"12450:1:89","nodeType":"VariableDeclaration","scope":32494,"src":"12442:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12442:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32492,"mutability":"mutable","name":"vs","nameLocation":"12461:2:89","nodeType":"VariableDeclaration","scope":32494,"src":"12453:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12453:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12441:23:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32506,"nodeType":"FunctionDefinition","src":"12879:99:89","nodes":[],"documentation":{"id":32495,"nodeType":"StructuredDocumentation","src":"12471:403:89","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12888:11:89","parameters":{"id":32500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32497,"mutability":"mutable","name":"signer","nameLocation":"12908:6:89","nodeType":"VariableDeclaration","scope":32506,"src":"12900:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32496,"name":"address","nodeType":"ElementaryTypeName","src":"12900:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32499,"mutability":"mutable","name":"digest","nameLocation":"12924:6:89","nodeType":"VariableDeclaration","scope":32506,"src":"12916:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12916:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12899:32:89"},"returnParameters":{"id":32505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32502,"mutability":"mutable","name":"r","nameLocation":"12963:1:89","nodeType":"VariableDeclaration","scope":32506,"src":"12955:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12955:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32504,"mutability":"mutable","name":"vs","nameLocation":"12974:2:89","nodeType":"VariableDeclaration","scope":32506,"src":"12966:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12966:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12954:23:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32518,"nodeType":"FunctionDefinition","src":"13052:99:89","nodes":[],"documentation":{"id":32507,"nodeType":"StructuredDocumentation","src":"12984:63:89","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"13061:8:89","parameters":{"id":32512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32509,"mutability":"mutable","name":"privateKey","nameLocation":"13078:10:89","nodeType":"VariableDeclaration","scope":32518,"src":"13070:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32508,"name":"uint256","nodeType":"ElementaryTypeName","src":"13070:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32511,"mutability":"mutable","name":"digest","nameLocation":"13098:6:89","nodeType":"VariableDeclaration","scope":32518,"src":"13090:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13090:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13069:36:89"},"returnParameters":{"id":32517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32514,"mutability":"mutable","name":"r","nameLocation":"13137:1:89","nodeType":"VariableDeclaration","scope":32518,"src":"13129:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13129:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32516,"mutability":"mutable","name":"s","nameLocation":"13148:1:89","nodeType":"VariableDeclaration","scope":32518,"src":"13140:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13140:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13128:22:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32533,"nodeType":"FunctionDefinition","src":"13193:103:89","nodes":[],"documentation":{"id":32519,"nodeType":"StructuredDocumentation","src":"13157:31:89","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13202:4:89","parameters":{"id":32525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32522,"mutability":"mutable","name":"wallet","nameLocation":"13223:6:89","nodeType":"VariableDeclaration","scope":32533,"src":"13207:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":32521,"nodeType":"UserDefinedTypeName","pathNode":{"id":32520,"name":"Wallet","nameLocations":["13207:6:89"],"nodeType":"IdentifierPath","referencedDeclaration":32292,"src":"13207:6:89"},"referencedDeclaration":32292,"src":"13207:6:89","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":32524,"mutability":"mutable","name":"digest","nameLocation":"13239:6:89","nodeType":"VariableDeclaration","scope":32533,"src":"13231:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13231:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13206:40:89"},"returnParameters":{"id":32532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32527,"mutability":"mutable","name":"v","nameLocation":"13271:1:89","nodeType":"VariableDeclaration","scope":32533,"src":"13265:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":32526,"name":"uint8","nodeType":"ElementaryTypeName","src":"13265:5:89","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":32529,"mutability":"mutable","name":"r","nameLocation":"13282:1:89","nodeType":"VariableDeclaration","scope":32533,"src":"13274:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13274:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32531,"mutability":"mutable","name":"s","nameLocation":"13293:1:89","nodeType":"VariableDeclaration","scope":32533,"src":"13285:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13285:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13264:31:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32547,"nodeType":"FunctionDefinition","src":"13370:104:89","nodes":[],"documentation":{"id":32534,"nodeType":"StructuredDocumentation","src":"13302:63:89","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13379:4:89","parameters":{"id":32539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32536,"mutability":"mutable","name":"privateKey","nameLocation":"13392:10:89","nodeType":"VariableDeclaration","scope":32547,"src":"13384:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32535,"name":"uint256","nodeType":"ElementaryTypeName","src":"13384:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32538,"mutability":"mutable","name":"digest","nameLocation":"13412:6:89","nodeType":"VariableDeclaration","scope":32547,"src":"13404:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13404:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13383:36:89"},"returnParameters":{"id":32546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32541,"mutability":"mutable","name":"v","nameLocation":"13449:1:89","nodeType":"VariableDeclaration","scope":32547,"src":"13443:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":32540,"name":"uint8","nodeType":"ElementaryTypeName","src":"13443:5:89","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":32543,"mutability":"mutable","name":"r","nameLocation":"13460:1:89","nodeType":"VariableDeclaration","scope":32547,"src":"13452:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13452:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32545,"mutability":"mutable","name":"s","nameLocation":"13471:1:89","nodeType":"VariableDeclaration","scope":32547,"src":"13463:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13463:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13442:31:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32559,"nodeType":"FunctionDefinition","src":"13913:84:89","nodes":[],"documentation":{"id":32548,"nodeType":"StructuredDocumentation","src":"13480:428:89","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13922:4:89","parameters":{"id":32551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32550,"mutability":"mutable","name":"digest","nameLocation":"13935:6:89","nodeType":"VariableDeclaration","scope":32559,"src":"13927:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13927:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13926:16:89"},"returnParameters":{"id":32558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32553,"mutability":"mutable","name":"v","nameLocation":"13972:1:89","nodeType":"VariableDeclaration","scope":32559,"src":"13966:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":32552,"name":"uint8","nodeType":"ElementaryTypeName","src":"13966:5:89","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":32555,"mutability":"mutable","name":"r","nameLocation":"13983:1:89","nodeType":"VariableDeclaration","scope":32559,"src":"13975:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13975:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32557,"mutability":"mutable","name":"s","nameLocation":"13994:1:89","nodeType":"VariableDeclaration","scope":32559,"src":"13986:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13986:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13965:31:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32573,"nodeType":"FunctionDefinition","src":"14174:100:89","nodes":[],"documentation":{"id":32560,"nodeType":"StructuredDocumentation","src":"14003:166:89","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"14183:4:89","parameters":{"id":32565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32562,"mutability":"mutable","name":"signer","nameLocation":"14196:6:89","nodeType":"VariableDeclaration","scope":32573,"src":"14188:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32561,"name":"address","nodeType":"ElementaryTypeName","src":"14188:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32564,"mutability":"mutable","name":"digest","nameLocation":"14212:6:89","nodeType":"VariableDeclaration","scope":32573,"src":"14204:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14204:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:32:89"},"returnParameters":{"id":32572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32567,"mutability":"mutable","name":"v","nameLocation":"14249:1:89","nodeType":"VariableDeclaration","scope":32573,"src":"14243:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":32566,"name":"uint8","nodeType":"ElementaryTypeName","src":"14243:5:89","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":32569,"mutability":"mutable","name":"r","nameLocation":"14260:1:89","nodeType":"VariableDeclaration","scope":32573,"src":"14252:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14252:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32571,"mutability":"mutable","name":"s","nameLocation":"14271:1:89","nodeType":"VariableDeclaration","scope":32573,"src":"14263:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14263:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14242:31:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32581,"nodeType":"FunctionDefinition","src":"14461:80:89","nodes":[],"documentation":{"id":32574,"nodeType":"StructuredDocumentation","src":"14318:138:89","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14470:10:89","parameters":{"id":32577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32576,"mutability":"mutable","name":"name","nameLocation":"14497:4:89","nodeType":"VariableDeclaration","scope":32581,"src":"14481:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32575,"name":"string","nodeType":"ElementaryTypeName","src":"14481:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14480:22:89"},"returnParameters":{"id":32580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32579,"mutability":"mutable","name":"value","nameLocation":"14534:5:89","nodeType":"VariableDeclaration","scope":32581,"src":"14526:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32578,"name":"address","nodeType":"ElementaryTypeName","src":"14526:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14525:15:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32592,"nodeType":"FunctionDefinition","src":"14724:112:89","nodes":[],"documentation":{"id":32582,"nodeType":"StructuredDocumentation","src":"14547:172:89","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14733:10:89","parameters":{"id":32587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32584,"mutability":"mutable","name":"name","nameLocation":"14760:4:89","nodeType":"VariableDeclaration","scope":32592,"src":"14744:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32583,"name":"string","nodeType":"ElementaryTypeName","src":"14744:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32586,"mutability":"mutable","name":"delim","nameLocation":"14782:5:89","nodeType":"VariableDeclaration","scope":32592,"src":"14766:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32585,"name":"string","nodeType":"ElementaryTypeName","src":"14766:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14743:45:89"},"returnParameters":{"id":32591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32590,"mutability":"mutable","name":"value","nameLocation":"14829:5:89","nodeType":"VariableDeclaration","scope":32592,"src":"14812:22:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":32588,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":32589,"nodeType":"ArrayTypeName","src":"14812:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14811:24:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32600,"nodeType":"FunctionDefinition","src":"14982:74:89","nodes":[],"documentation":{"id":32593,"nodeType":"StructuredDocumentation","src":"14842:135:89","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"14991:7:89","parameters":{"id":32596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32595,"mutability":"mutable","name":"name","nameLocation":"15015:4:89","nodeType":"VariableDeclaration","scope":32600,"src":"14999:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32594,"name":"string","nodeType":"ElementaryTypeName","src":"14999:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14998:22:89"},"returnParameters":{"id":32599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32598,"mutability":"mutable","name":"value","nameLocation":"15049:5:89","nodeType":"VariableDeclaration","scope":32600,"src":"15044:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32597,"name":"bool","nodeType":"ElementaryTypeName","src":"15044:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15043:12:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32611,"nodeType":"FunctionDefinition","src":"15236:106:89","nodes":[],"documentation":{"id":32601,"nodeType":"StructuredDocumentation","src":"15062:169:89","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"15245:7:89","parameters":{"id":32606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32603,"mutability":"mutable","name":"name","nameLocation":"15269:4:89","nodeType":"VariableDeclaration","scope":32611,"src":"15253:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32602,"name":"string","nodeType":"ElementaryTypeName","src":"15253:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32605,"mutability":"mutable","name":"delim","nameLocation":"15291:5:89","nodeType":"VariableDeclaration","scope":32611,"src":"15275:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32604,"name":"string","nodeType":"ElementaryTypeName","src":"15275:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15252:45:89"},"returnParameters":{"id":32610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32609,"mutability":"mutable","name":"value","nameLocation":"15335:5:89","nodeType":"VariableDeclaration","scope":32611,"src":"15321:19:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":32607,"name":"bool","nodeType":"ElementaryTypeName","src":"15321:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":32608,"nodeType":"ArrayTypeName","src":"15321:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15320:21:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32619,"nodeType":"FunctionDefinition","src":"15491:80:89","nodes":[],"documentation":{"id":32612,"nodeType":"StructuredDocumentation","src":"15348:138:89","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15500:10:89","parameters":{"id":32615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32614,"mutability":"mutable","name":"name","nameLocation":"15527:4:89","nodeType":"VariableDeclaration","scope":32619,"src":"15511:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32613,"name":"string","nodeType":"ElementaryTypeName","src":"15511:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15510:22:89"},"returnParameters":{"id":32618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32617,"mutability":"mutable","name":"value","nameLocation":"15564:5:89","nodeType":"VariableDeclaration","scope":32619,"src":"15556:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15556:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15555:15:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32630,"nodeType":"FunctionDefinition","src":"15754:112:89","nodes":[],"documentation":{"id":32620,"nodeType":"StructuredDocumentation","src":"15577:172:89","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15763:10:89","parameters":{"id":32625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32622,"mutability":"mutable","name":"name","nameLocation":"15790:4:89","nodeType":"VariableDeclaration","scope":32630,"src":"15774:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32621,"name":"string","nodeType":"ElementaryTypeName","src":"15774:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32624,"mutability":"mutable","name":"delim","nameLocation":"15812:5:89","nodeType":"VariableDeclaration","scope":32630,"src":"15796:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32623,"name":"string","nodeType":"ElementaryTypeName","src":"15796:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15773:45:89"},"returnParameters":{"id":32629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32628,"mutability":"mutable","name":"value","nameLocation":"15859:5:89","nodeType":"VariableDeclaration","scope":32630,"src":"15842:22:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15842:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32627,"nodeType":"ArrayTypeName","src":"15842:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15841:24:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32638,"nodeType":"FunctionDefinition","src":"16013:83:89","nodes":[],"documentation":{"id":32631,"nodeType":"StructuredDocumentation","src":"15872:136:89","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16022:8:89","parameters":{"id":32634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32633,"mutability":"mutable","name":"name","nameLocation":"16047:4:89","nodeType":"VariableDeclaration","scope":32638,"src":"16031:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32632,"name":"string","nodeType":"ElementaryTypeName","src":"16031:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16030:22:89"},"returnParameters":{"id":32637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32636,"mutability":"mutable","name":"value","nameLocation":"16089:5:89","nodeType":"VariableDeclaration","scope":32638,"src":"16076:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":32635,"name":"bytes","nodeType":"ElementaryTypeName","src":"16076:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16075:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32649,"nodeType":"FunctionDefinition","src":"16277:108:89","nodes":[],"documentation":{"id":32639,"nodeType":"StructuredDocumentation","src":"16102:170:89","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16286:8:89","parameters":{"id":32644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32641,"mutability":"mutable","name":"name","nameLocation":"16311:4:89","nodeType":"VariableDeclaration","scope":32649,"src":"16295:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32640,"name":"string","nodeType":"ElementaryTypeName","src":"16295:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32643,"mutability":"mutable","name":"delim","nameLocation":"16333:5:89","nodeType":"VariableDeclaration","scope":32649,"src":"16317:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32642,"name":"string","nodeType":"ElementaryTypeName","src":"16317:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16294:45:89"},"returnParameters":{"id":32648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32647,"mutability":"mutable","name":"value","nameLocation":"16378:5:89","nodeType":"VariableDeclaration","scope":32649,"src":"16363:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":32645,"name":"bytes","nodeType":"ElementaryTypeName","src":"16363:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":32646,"nodeType":"ArrayTypeName","src":"16363:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"16362:22:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32657,"nodeType":"FunctionDefinition","src":"16487:77:89","nodes":[],"documentation":{"id":32650,"nodeType":"StructuredDocumentation","src":"16391:91:89","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"16496:9:89","parameters":{"id":32653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32652,"mutability":"mutable","name":"name","nameLocation":"16522:4:89","nodeType":"VariableDeclaration","scope":32657,"src":"16506:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32651,"name":"string","nodeType":"ElementaryTypeName","src":"16506:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16505:22:89"},"returnParameters":{"id":32656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32655,"mutability":"mutable","name":"result","nameLocation":"16556:6:89","nodeType":"VariableDeclaration","scope":32657,"src":"16551:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32654,"name":"bool","nodeType":"ElementaryTypeName","src":"16551:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16550:13:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32665,"nodeType":"FunctionDefinition","src":"16712:75:89","nodes":[],"documentation":{"id":32658,"nodeType":"StructuredDocumentation","src":"16570:137:89","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16721:6:89","parameters":{"id":32661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32660,"mutability":"mutable","name":"name","nameLocation":"16744:4:89","nodeType":"VariableDeclaration","scope":32665,"src":"16728:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32659,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16727:22:89"},"returnParameters":{"id":32664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32663,"mutability":"mutable","name":"value","nameLocation":"16780:5:89","nodeType":"VariableDeclaration","scope":32665,"src":"16773:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":32662,"name":"int256","nodeType":"ElementaryTypeName","src":"16773:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16772:14:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32676,"nodeType":"FunctionDefinition","src":"16969:107:89","nodes":[],"documentation":{"id":32666,"nodeType":"StructuredDocumentation","src":"16793:171:89","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16978:6:89","parameters":{"id":32671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32668,"mutability":"mutable","name":"name","nameLocation":"17001:4:89","nodeType":"VariableDeclaration","scope":32676,"src":"16985:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32667,"name":"string","nodeType":"ElementaryTypeName","src":"16985:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32670,"mutability":"mutable","name":"delim","nameLocation":"17023:5:89","nodeType":"VariableDeclaration","scope":32676,"src":"17007:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32669,"name":"string","nodeType":"ElementaryTypeName","src":"17007:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16984:45:89"},"returnParameters":{"id":32675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32674,"mutability":"mutable","name":"value","nameLocation":"17069:5:89","nodeType":"VariableDeclaration","scope":32676,"src":"17053:21:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":32672,"name":"int256","nodeType":"ElementaryTypeName","src":"17053:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":32673,"nodeType":"ArrayTypeName","src":"17053:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"17052:23:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32686,"nodeType":"FunctionDefinition","src":"17267:91:89","nodes":[],"documentation":{"id":32677,"nodeType":"StructuredDocumentation","src":"17082:180:89","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17276:5:89","parameters":{"id":32682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32679,"mutability":"mutable","name":"name","nameLocation":"17298:4:89","nodeType":"VariableDeclaration","scope":32686,"src":"17282:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32678,"name":"string","nodeType":"ElementaryTypeName","src":"17282:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32681,"mutability":"mutable","name":"defaultValue","nameLocation":"17309:12:89","nodeType":"VariableDeclaration","scope":32686,"src":"17304:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32680,"name":"bool","nodeType":"ElementaryTypeName","src":"17304:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17281:41:89"},"returnParameters":{"id":32685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32684,"mutability":"mutable","name":"value","nameLocation":"17351:5:89","nodeType":"VariableDeclaration","scope":32686,"src":"17346:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32683,"name":"bool","nodeType":"ElementaryTypeName","src":"17346:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17345:12:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32696,"nodeType":"FunctionDefinition","src":"17552:97:89","nodes":[],"documentation":{"id":32687,"nodeType":"StructuredDocumentation","src":"17364:183:89","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17561:5:89","parameters":{"id":32692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32689,"mutability":"mutable","name":"name","nameLocation":"17583:4:89","nodeType":"VariableDeclaration","scope":32696,"src":"17567:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32688,"name":"string","nodeType":"ElementaryTypeName","src":"17567:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32691,"mutability":"mutable","name":"defaultValue","nameLocation":"17597:12:89","nodeType":"VariableDeclaration","scope":32696,"src":"17589:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32690,"name":"uint256","nodeType":"ElementaryTypeName","src":"17589:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17566:44:89"},"returnParameters":{"id":32695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32694,"mutability":"mutable","name":"value","nameLocation":"17642:5:89","nodeType":"VariableDeclaration","scope":32696,"src":"17634:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32693,"name":"uint256","nodeType":"ElementaryTypeName","src":"17634:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17633:15:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32710,"nodeType":"FunctionDefinition","src":"17877:164:89","nodes":[],"documentation":{"id":32697,"nodeType":"StructuredDocumentation","src":"17655:217:89","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17886:5:89","parameters":{"id":32705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32699,"mutability":"mutable","name":"name","nameLocation":"17908:4:89","nodeType":"VariableDeclaration","scope":32710,"src":"17892:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32698,"name":"string","nodeType":"ElementaryTypeName","src":"17892:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32701,"mutability":"mutable","name":"delim","nameLocation":"17930:5:89","nodeType":"VariableDeclaration","scope":32710,"src":"17914:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32700,"name":"string","nodeType":"ElementaryTypeName","src":"17914:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32704,"mutability":"mutable","name":"defaultValue","nameLocation":"17956:12:89","nodeType":"VariableDeclaration","scope":32710,"src":"17937:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":32702,"name":"address","nodeType":"ElementaryTypeName","src":"17937:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":32703,"nodeType":"ArrayTypeName","src":"17937:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17891:78:89"},"returnParameters":{"id":32709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32708,"mutability":"mutable","name":"value","nameLocation":"18034:5:89","nodeType":"VariableDeclaration","scope":32710,"src":"18017:22:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":32706,"name":"address","nodeType":"ElementaryTypeName","src":"18017:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":32707,"nodeType":"ArrayTypeName","src":"18017:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18016:24:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32724,"nodeType":"FunctionDefinition","src":"18269:164:89","nodes":[],"documentation":{"id":32711,"nodeType":"StructuredDocumentation","src":"18047:217:89","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18278:5:89","parameters":{"id":32719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32713,"mutability":"mutable","name":"name","nameLocation":"18300:4:89","nodeType":"VariableDeclaration","scope":32724,"src":"18284:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32712,"name":"string","nodeType":"ElementaryTypeName","src":"18284:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32715,"mutability":"mutable","name":"delim","nameLocation":"18322:5:89","nodeType":"VariableDeclaration","scope":32724,"src":"18306:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32714,"name":"string","nodeType":"ElementaryTypeName","src":"18306:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32718,"mutability":"mutable","name":"defaultValue","nameLocation":"18348:12:89","nodeType":"VariableDeclaration","scope":32724,"src":"18329:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18329:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32717,"nodeType":"ArrayTypeName","src":"18329:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18283:78:89"},"returnParameters":{"id":32723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32722,"mutability":"mutable","name":"value","nameLocation":"18426:5:89","nodeType":"VariableDeclaration","scope":32724,"src":"18409:22:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18409:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32721,"nodeType":"ArrayTypeName","src":"18409:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18408:24:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32738,"nodeType":"FunctionDefinition","src":"18660:162:89","nodes":[],"documentation":{"id":32725,"nodeType":"StructuredDocumentation","src":"18439:216:89","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18669:5:89","parameters":{"id":32733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32727,"mutability":"mutable","name":"name","nameLocation":"18691:4:89","nodeType":"VariableDeclaration","scope":32738,"src":"18675:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32726,"name":"string","nodeType":"ElementaryTypeName","src":"18675:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32729,"mutability":"mutable","name":"delim","nameLocation":"18713:5:89","nodeType":"VariableDeclaration","scope":32738,"src":"18697:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32728,"name":"string","nodeType":"ElementaryTypeName","src":"18697:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32732,"mutability":"mutable","name":"defaultValue","nameLocation":"18738:12:89","nodeType":"VariableDeclaration","scope":32738,"src":"18720:30:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":32730,"name":"string","nodeType":"ElementaryTypeName","src":"18720:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":32731,"nodeType":"ArrayTypeName","src":"18720:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18674:77:89"},"returnParameters":{"id":32737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32736,"mutability":"mutable","name":"value","nameLocation":"18815:5:89","nodeType":"VariableDeclaration","scope":32738,"src":"18799:21:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":32734,"name":"string","nodeType":"ElementaryTypeName","src":"18799:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":32735,"nodeType":"ArrayTypeName","src":"18799:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18798:23:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32752,"nodeType":"FunctionDefinition","src":"19048:160:89","nodes":[],"documentation":{"id":32739,"nodeType":"StructuredDocumentation","src":"18828:215:89","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19057:5:89","parameters":{"id":32747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32741,"mutability":"mutable","name":"name","nameLocation":"19079:4:89","nodeType":"VariableDeclaration","scope":32752,"src":"19063:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32740,"name":"string","nodeType":"ElementaryTypeName","src":"19063:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32743,"mutability":"mutable","name":"delim","nameLocation":"19101:5:89","nodeType":"VariableDeclaration","scope":32752,"src":"19085:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32742,"name":"string","nodeType":"ElementaryTypeName","src":"19085:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32746,"mutability":"mutable","name":"defaultValue","nameLocation":"19125:12:89","nodeType":"VariableDeclaration","scope":32752,"src":"19108:29:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":32744,"name":"bytes","nodeType":"ElementaryTypeName","src":"19108:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":32745,"nodeType":"ArrayTypeName","src":"19108:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19062:76:89"},"returnParameters":{"id":32751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32750,"mutability":"mutable","name":"value","nameLocation":"19201:5:89","nodeType":"VariableDeclaration","scope":32752,"src":"19186:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":32748,"name":"bytes","nodeType":"ElementaryTypeName","src":"19186:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":32749,"nodeType":"ArrayTypeName","src":"19186:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19185:22:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32762,"nodeType":"FunctionDefinition","src":"19401:95:89","nodes":[],"documentation":{"id":32753,"nodeType":"StructuredDocumentation","src":"19214:182:89","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19410:5:89","parameters":{"id":32758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32755,"mutability":"mutable","name":"name","nameLocation":"19432:4:89","nodeType":"VariableDeclaration","scope":32762,"src":"19416:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32754,"name":"string","nodeType":"ElementaryTypeName","src":"19416:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32757,"mutability":"mutable","name":"defaultValue","nameLocation":"19445:12:89","nodeType":"VariableDeclaration","scope":32762,"src":"19438:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":32756,"name":"int256","nodeType":"ElementaryTypeName","src":"19438:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19415:43:89"},"returnParameters":{"id":32761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32760,"mutability":"mutable","name":"value","nameLocation":"19489:5:89","nodeType":"VariableDeclaration","scope":32762,"src":"19482:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":32759,"name":"int256","nodeType":"ElementaryTypeName","src":"19482:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19481:14:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32772,"nodeType":"FunctionDefinition","src":"19690:97:89","nodes":[],"documentation":{"id":32763,"nodeType":"StructuredDocumentation","src":"19502:183:89","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19699:5:89","parameters":{"id":32768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32765,"mutability":"mutable","name":"name","nameLocation":"19721:4:89","nodeType":"VariableDeclaration","scope":32772,"src":"19705:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32764,"name":"string","nodeType":"ElementaryTypeName","src":"19705:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32767,"mutability":"mutable","name":"defaultValue","nameLocation":"19735:12:89","nodeType":"VariableDeclaration","scope":32772,"src":"19727:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32766,"name":"address","nodeType":"ElementaryTypeName","src":"19727:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19704:44:89"},"returnParameters":{"id":32771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32770,"mutability":"mutable","name":"value","nameLocation":"19780:5:89","nodeType":"VariableDeclaration","scope":32772,"src":"19772:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32769,"name":"address","nodeType":"ElementaryTypeName","src":"19772:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19771:15:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32782,"nodeType":"FunctionDefinition","src":"19981:97:89","nodes":[],"documentation":{"id":32773,"nodeType":"StructuredDocumentation","src":"19793:183:89","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19990:5:89","parameters":{"id":32778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32775,"mutability":"mutable","name":"name","nameLocation":"20012:4:89","nodeType":"VariableDeclaration","scope":32782,"src":"19996:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32774,"name":"string","nodeType":"ElementaryTypeName","src":"19996:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32777,"mutability":"mutable","name":"defaultValue","nameLocation":"20026:12:89","nodeType":"VariableDeclaration","scope":32782,"src":"20018:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20018:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19995:44:89"},"returnParameters":{"id":32781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32780,"mutability":"mutable","name":"value","nameLocation":"20071:5:89","nodeType":"VariableDeclaration","scope":32782,"src":"20063:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20063:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20062:15:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32792,"nodeType":"FunctionDefinition","src":"20271:111:89","nodes":[],"documentation":{"id":32783,"nodeType":"StructuredDocumentation","src":"20084:182:89","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20280:5:89","parameters":{"id":32788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32785,"mutability":"mutable","name":"name","nameLocation":"20302:4:89","nodeType":"VariableDeclaration","scope":32792,"src":"20286:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32784,"name":"string","nodeType":"ElementaryTypeName","src":"20286:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32787,"mutability":"mutable","name":"defaultValue","nameLocation":"20324:12:89","nodeType":"VariableDeclaration","scope":32792,"src":"20308:28:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32786,"name":"string","nodeType":"ElementaryTypeName","src":"20308:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20285:52:89"},"returnParameters":{"id":32791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32790,"mutability":"mutable","name":"value","nameLocation":"20375:5:89","nodeType":"VariableDeclaration","scope":32792,"src":"20361:19:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":32789,"name":"string","nodeType":"ElementaryTypeName","src":"20361:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20360:21:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32802,"nodeType":"FunctionDefinition","src":"20574:109:89","nodes":[],"documentation":{"id":32793,"nodeType":"StructuredDocumentation","src":"20388:181:89","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20583:5:89","parameters":{"id":32798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32795,"mutability":"mutable","name":"name","nameLocation":"20605:4:89","nodeType":"VariableDeclaration","scope":32802,"src":"20589:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32794,"name":"string","nodeType":"ElementaryTypeName","src":"20589:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32797,"mutability":"mutable","name":"defaultValue","nameLocation":"20626:12:89","nodeType":"VariableDeclaration","scope":32802,"src":"20611:27:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":32796,"name":"bytes","nodeType":"ElementaryTypeName","src":"20611:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20588:51:89"},"returnParameters":{"id":32801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32800,"mutability":"mutable","name":"value","nameLocation":"20676:5:89","nodeType":"VariableDeclaration","scope":32802,"src":"20663:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":32799,"name":"bytes","nodeType":"ElementaryTypeName","src":"20663:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20662:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32816,"nodeType":"FunctionDefinition","src":"20908:158:89","nodes":[],"documentation":{"id":32803,"nodeType":"StructuredDocumentation","src":"20689:214:89","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20917:5:89","parameters":{"id":32811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32805,"mutability":"mutable","name":"name","nameLocation":"20939:4:89","nodeType":"VariableDeclaration","scope":32816,"src":"20923:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32804,"name":"string","nodeType":"ElementaryTypeName","src":"20923:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32807,"mutability":"mutable","name":"delim","nameLocation":"20961:5:89","nodeType":"VariableDeclaration","scope":32816,"src":"20945:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32806,"name":"string","nodeType":"ElementaryTypeName","src":"20945:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32810,"mutability":"mutable","name":"defaultValue","nameLocation":"20984:12:89","nodeType":"VariableDeclaration","scope":32816,"src":"20968:28:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":32808,"name":"bool","nodeType":"ElementaryTypeName","src":"20968:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":32809,"nodeType":"ArrayTypeName","src":"20968:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20922:75:89"},"returnParameters":{"id":32815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32814,"mutability":"mutable","name":"value","nameLocation":"21059:5:89","nodeType":"VariableDeclaration","scope":32816,"src":"21045:19:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":32812,"name":"bool","nodeType":"ElementaryTypeName","src":"21045:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":32813,"nodeType":"ArrayTypeName","src":"21045:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"21044:21:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32830,"nodeType":"FunctionDefinition","src":"21294:164:89","nodes":[],"documentation":{"id":32817,"nodeType":"StructuredDocumentation","src":"21072:217:89","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21303:5:89","parameters":{"id":32825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32819,"mutability":"mutable","name":"name","nameLocation":"21325:4:89","nodeType":"VariableDeclaration","scope":32830,"src":"21309:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32818,"name":"string","nodeType":"ElementaryTypeName","src":"21309:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32821,"mutability":"mutable","name":"delim","nameLocation":"21347:5:89","nodeType":"VariableDeclaration","scope":32830,"src":"21331:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32820,"name":"string","nodeType":"ElementaryTypeName","src":"21331:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32824,"mutability":"mutable","name":"defaultValue","nameLocation":"21373:12:89","nodeType":"VariableDeclaration","scope":32830,"src":"21354:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":32822,"name":"uint256","nodeType":"ElementaryTypeName","src":"21354:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":32823,"nodeType":"ArrayTypeName","src":"21354:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21308:78:89"},"returnParameters":{"id":32829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32828,"mutability":"mutable","name":"value","nameLocation":"21451:5:89","nodeType":"VariableDeclaration","scope":32830,"src":"21434:22:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":32826,"name":"uint256","nodeType":"ElementaryTypeName","src":"21434:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":32827,"nodeType":"ArrayTypeName","src":"21434:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21433:24:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32844,"nodeType":"FunctionDefinition","src":"21685:162:89","nodes":[],"documentation":{"id":32831,"nodeType":"StructuredDocumentation","src":"21464:216:89","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21694:5:89","parameters":{"id":32839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32833,"mutability":"mutable","name":"name","nameLocation":"21716:4:89","nodeType":"VariableDeclaration","scope":32844,"src":"21700:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32832,"name":"string","nodeType":"ElementaryTypeName","src":"21700:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32835,"mutability":"mutable","name":"delim","nameLocation":"21738:5:89","nodeType":"VariableDeclaration","scope":32844,"src":"21722:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32834,"name":"string","nodeType":"ElementaryTypeName","src":"21722:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32838,"mutability":"mutable","name":"defaultValue","nameLocation":"21763:12:89","nodeType":"VariableDeclaration","scope":32844,"src":"21745:30:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":32836,"name":"int256","nodeType":"ElementaryTypeName","src":"21745:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":32837,"nodeType":"ArrayTypeName","src":"21745:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21699:77:89"},"returnParameters":{"id":32843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32842,"mutability":"mutable","name":"value","nameLocation":"21840:5:89","nodeType":"VariableDeclaration","scope":32844,"src":"21824:21:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":32840,"name":"int256","nodeType":"ElementaryTypeName","src":"21824:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":32841,"nodeType":"ArrayTypeName","src":"21824:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21823:23:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32852,"nodeType":"FunctionDefinition","src":"21995:85:89","nodes":[],"documentation":{"id":32845,"nodeType":"StructuredDocumentation","src":"21853:137:89","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22004:9:89","parameters":{"id":32848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32847,"mutability":"mutable","name":"name","nameLocation":"22030:4:89","nodeType":"VariableDeclaration","scope":32852,"src":"22014:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32846,"name":"string","nodeType":"ElementaryTypeName","src":"22014:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22013:22:89"},"returnParameters":{"id":32851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32850,"mutability":"mutable","name":"value","nameLocation":"22073:5:89","nodeType":"VariableDeclaration","scope":32852,"src":"22059:19:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":32849,"name":"string","nodeType":"ElementaryTypeName","src":"22059:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22058:21:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32863,"nodeType":"FunctionDefinition","src":"22262:110:89","nodes":[],"documentation":{"id":32853,"nodeType":"StructuredDocumentation","src":"22086:171:89","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22271:9:89","parameters":{"id":32858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32855,"mutability":"mutable","name":"name","nameLocation":"22297:4:89","nodeType":"VariableDeclaration","scope":32863,"src":"22281:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32854,"name":"string","nodeType":"ElementaryTypeName","src":"22281:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32857,"mutability":"mutable","name":"delim","nameLocation":"22319:5:89","nodeType":"VariableDeclaration","scope":32863,"src":"22303:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32856,"name":"string","nodeType":"ElementaryTypeName","src":"22303:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22280:45:89"},"returnParameters":{"id":32862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32861,"mutability":"mutable","name":"value","nameLocation":"22365:5:89","nodeType":"VariableDeclaration","scope":32863,"src":"22349:21:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":32859,"name":"string","nodeType":"ElementaryTypeName","src":"22349:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":32860,"nodeType":"ArrayTypeName","src":"22349:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22348:23:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32871,"nodeType":"FunctionDefinition","src":"22521:77:89","nodes":[],"documentation":{"id":32864,"nodeType":"StructuredDocumentation","src":"22378:138:89","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22530:7:89","parameters":{"id":32867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32866,"mutability":"mutable","name":"name","nameLocation":"22554:4:89","nodeType":"VariableDeclaration","scope":32871,"src":"22538:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32865,"name":"string","nodeType":"ElementaryTypeName","src":"22538:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22537:22:89"},"returnParameters":{"id":32870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32869,"mutability":"mutable","name":"value","nameLocation":"22591:5:89","nodeType":"VariableDeclaration","scope":32871,"src":"22583:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32868,"name":"uint256","nodeType":"ElementaryTypeName","src":"22583:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22582:15:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32882,"nodeType":"FunctionDefinition","src":"22781:109:89","nodes":[],"documentation":{"id":32872,"nodeType":"StructuredDocumentation","src":"22604:172:89","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22790:7:89","parameters":{"id":32877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32874,"mutability":"mutable","name":"name","nameLocation":"22814:4:89","nodeType":"VariableDeclaration","scope":32882,"src":"22798:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32873,"name":"string","nodeType":"ElementaryTypeName","src":"22798:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32876,"mutability":"mutable","name":"delim","nameLocation":"22836:5:89","nodeType":"VariableDeclaration","scope":32882,"src":"22820:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32875,"name":"string","nodeType":"ElementaryTypeName","src":"22820:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22797:45:89"},"returnParameters":{"id":32881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32880,"mutability":"mutable","name":"value","nameLocation":"22883:5:89","nodeType":"VariableDeclaration","scope":32882,"src":"22866:22:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":32878,"name":"uint256","nodeType":"ElementaryTypeName","src":"22866:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":32879,"nodeType":"ArrayTypeName","src":"22866:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22865:24:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32891,"nodeType":"FunctionDefinition","src":"22967:77:89","nodes":[],"documentation":{"id":32883,"nodeType":"StructuredDocumentation","src":"22896:66:89","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"22976:9:89","parameters":{"id":32887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32886,"mutability":"mutable","name":"context","nameLocation":"22999:7:89","nodeType":"VariableDeclaration","scope":32891,"src":"22986:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$32218","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":32885,"nodeType":"UserDefinedTypeName","pathNode":{"id":32884,"name":"ForgeContext","nameLocations":["22986:12:89"],"nodeType":"IdentifierPath","referencedDeclaration":32218,"src":"22986:12:89"},"referencedDeclaration":32218,"src":"22986:12:89","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$32218","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"22985:22:89"},"returnParameters":{"id":32890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32889,"mutability":"mutable","name":"result","nameLocation":"23036:6:89","nodeType":"VariableDeclaration","scope":32891,"src":"23031:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32888,"name":"bool","nodeType":"ElementaryTypeName","src":"23031:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23030:13:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32899,"nodeType":"FunctionDefinition","src":"23086:70:89","nodes":[],"documentation":{"id":32892,"nodeType":"StructuredDocumentation","src":"23050:31:89","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"23095:6:89","parameters":{"id":32897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32894,"mutability":"mutable","name":"name","nameLocation":"23118:4:89","nodeType":"VariableDeclaration","scope":32899,"src":"23102:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32893,"name":"string","nodeType":"ElementaryTypeName","src":"23102:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32896,"mutability":"mutable","name":"value","nameLocation":"23140:5:89","nodeType":"VariableDeclaration","scope":32899,"src":"23124:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":32895,"name":"string","nodeType":"ElementaryTypeName","src":"23124:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23101:45:89"},"returnParameters":{"id":32898,"nodeType":"ParameterList","parameters":[],"src":"23155:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32911,"nodeType":"FunctionDefinition","src":"23288:109:89","nodes":[],"documentation":{"id":32900,"nodeType":"StructuredDocumentation","src":"23192:91:89","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"23297:8:89","parameters":{"id":32903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32902,"mutability":"mutable","name":"target","nameLocation":"23314:6:89","nodeType":"VariableDeclaration","scope":32911,"src":"23306:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32901,"name":"address","nodeType":"ElementaryTypeName","src":"23306:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23305:16:89"},"returnParameters":{"id":32910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32906,"mutability":"mutable","name":"readSlots","nameLocation":"23357:9:89","nodeType":"VariableDeclaration","scope":32911,"src":"23340:26:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23340:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32905,"nodeType":"ArrayTypeName","src":"23340:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":32909,"mutability":"mutable","name":"writeSlots","nameLocation":"23385:10:89","nodeType":"VariableDeclaration","scope":32911,"src":"23368:27:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23368:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32908,"nodeType":"ArrayTypeName","src":"23368:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23339:57:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32919,"nodeType":"FunctionDefinition","src":"23453:74:89","nodes":[],"documentation":{"id":32912,"nodeType":"StructuredDocumentation","src":"23403:45:89","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"23462:4:89","parameters":{"id":32915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32914,"mutability":"mutable","name":"privateKey","nameLocation":"23475:10:89","nodeType":"VariableDeclaration","scope":32919,"src":"23467:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32913,"name":"uint256","nodeType":"ElementaryTypeName","src":"23467:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23466:20:89"},"returnParameters":{"id":32918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32917,"mutability":"mutable","name":"keyAddr","nameLocation":"23518:7:89","nodeType":"VariableDeclaration","scope":32919,"src":"23510:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32916,"name":"address","nodeType":"ElementaryTypeName","src":"23510:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23509:17:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":32936,"nodeType":"FunctionDefinition","src":"23590:160:89","nodes":[],"documentation":{"id":32920,"nodeType":"StructuredDocumentation","src":"23533:52:89","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"23599:11:89","parameters":{"id":32930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32922,"mutability":"mutable","name":"fromBlock","nameLocation":"23619:9:89","nodeType":"VariableDeclaration","scope":32936,"src":"23611:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32921,"name":"uint256","nodeType":"ElementaryTypeName","src":"23611:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32924,"mutability":"mutable","name":"toBlock","nameLocation":"23638:7:89","nodeType":"VariableDeclaration","scope":32936,"src":"23630:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32923,"name":"uint256","nodeType":"ElementaryTypeName","src":"23630:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32926,"mutability":"mutable","name":"target","nameLocation":"23655:6:89","nodeType":"VariableDeclaration","scope":32936,"src":"23647:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32925,"name":"address","nodeType":"ElementaryTypeName","src":"23647:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32929,"mutability":"mutable","name":"topics","nameLocation":"23682:6:89","nodeType":"VariableDeclaration","scope":32936,"src":"23663:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":32927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23663:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":32928,"nodeType":"ArrayTypeName","src":"23663:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23610:79:89"},"returnParameters":{"id":32935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32934,"mutability":"mutable","name":"logs","nameLocation":"23744:4:89","nodeType":"VariableDeclaration","scope":32936,"src":"23724:24:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$32254_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":32932,"nodeType":"UserDefinedTypeName","pathNode":{"id":32931,"name":"EthGetLogs","nameLocations":["23724:10:89"],"nodeType":"IdentifierPath","referencedDeclaration":32254,"src":"23724:10:89"},"referencedDeclaration":32254,"src":"23724:10:89","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$32254_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":32933,"nodeType":"ArrayTypeName","src":"23724:12:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$32254_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"23723:26:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32942,"nodeType":"FunctionDefinition","src":"24087:70:89","nodes":[],"documentation":{"id":32937,"nodeType":"StructuredDocumentation","src":"23756:326:89","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"24096:14:89","parameters":{"id":32938,"nodeType":"ParameterList","parameters":[],"src":"24110:2:89"},"returnParameters":{"id":32941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32940,"mutability":"mutable","name":"blobBaseFee","nameLocation":"24144:11:89","nodeType":"VariableDeclaration","scope":32942,"src":"24136:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32939,"name":"uint256","nodeType":"ElementaryTypeName","src":"24136:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24135:21:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32948,"nodeType":"FunctionDefinition","src":"24472:65:89","nodes":[],"documentation":{"id":32943,"nodeType":"StructuredDocumentation","src":"24163:304:89","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"24481:14:89","parameters":{"id":32944,"nodeType":"ParameterList","parameters":[],"src":"24495:2:89"},"returnParameters":{"id":32947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32946,"mutability":"mutable","name":"height","nameLocation":"24529:6:89","nodeType":"VariableDeclaration","scope":32948,"src":"24521:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32945,"name":"uint256","nodeType":"ElementaryTypeName","src":"24521:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24520:16:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32954,"nodeType":"FunctionDefinition","src":"24861:71:89","nodes":[],"documentation":{"id":32949,"nodeType":"StructuredDocumentation","src":"24543:313:89","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"24870:17:89","parameters":{"id":32950,"nodeType":"ParameterList","parameters":[],"src":"24887:2:89"},"returnParameters":{"id":32953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32952,"mutability":"mutable","name":"timestamp","nameLocation":"24921:9:89","nodeType":"VariableDeclaration","scope":32954,"src":"24913:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32951,"name":"uint256","nodeType":"ElementaryTypeName","src":"24913:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24912:19:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":32968,"nodeType":"FunctionDefinition","src":"25025:146:89","nodes":[],"documentation":{"id":32955,"nodeType":"StructuredDocumentation","src":"24938:82:89","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"25034:24:89","parameters":{"id":32960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32957,"mutability":"mutable","name":"target","nameLocation":"25067:6:89","nodeType":"VariableDeclaration","scope":32968,"src":"25059:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32956,"name":"address","nodeType":"ElementaryTypeName","src":"25059:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32959,"mutability":"mutable","name":"elementSlot","nameLocation":"25083:11:89","nodeType":"VariableDeclaration","scope":32968,"src":"25075:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25075:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25058:37:89"},"returnParameters":{"id":32967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32962,"mutability":"mutable","name":"found","nameLocation":"25135:5:89","nodeType":"VariableDeclaration","scope":32968,"src":"25130:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32961,"name":"bool","nodeType":"ElementaryTypeName","src":"25130:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":32964,"mutability":"mutable","name":"key","nameLocation":"25150:3:89","nodeType":"VariableDeclaration","scope":32968,"src":"25142:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25142:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32966,"mutability":"mutable","name":"parent","nameLocation":"25163:6:89","nodeType":"VariableDeclaration","scope":32968,"src":"25155:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25155:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25129:41:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32978,"nodeType":"FunctionDefinition","src":"25268:97:89","nodes":[],"documentation":{"id":32969,"nodeType":"StructuredDocumentation","src":"25177:86:89","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"25277:16:89","parameters":{"id":32974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32971,"mutability":"mutable","name":"target","nameLocation":"25302:6:89","nodeType":"VariableDeclaration","scope":32978,"src":"25294:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32970,"name":"address","nodeType":"ElementaryTypeName","src":"25294:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32973,"mutability":"mutable","name":"mappingSlot","nameLocation":"25318:11:89","nodeType":"VariableDeclaration","scope":32978,"src":"25310:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25310:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25293:37:89"},"returnParameters":{"id":32977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32976,"mutability":"mutable","name":"length","nameLocation":"25357:6:89","nodeType":"VariableDeclaration","scope":32978,"src":"25349:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32975,"name":"uint256","nodeType":"ElementaryTypeName","src":"25349:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25348:16:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32990,"nodeType":"FunctionDefinition","src":"25569:109:89","nodes":[],"documentation":{"id":32979,"nodeType":"StructuredDocumentation","src":"25371:193:89","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"25578:16:89","parameters":{"id":32986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32981,"mutability":"mutable","name":"target","nameLocation":"25603:6:89","nodeType":"VariableDeclaration","scope":32990,"src":"25595:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32980,"name":"address","nodeType":"ElementaryTypeName","src":"25595:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32983,"mutability":"mutable","name":"mappingSlot","nameLocation":"25619:11:89","nodeType":"VariableDeclaration","scope":32990,"src":"25611:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25611:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32985,"mutability":"mutable","name":"idx","nameLocation":"25640:3:89","nodeType":"VariableDeclaration","scope":32990,"src":"25632:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32984,"name":"uint256","nodeType":"ElementaryTypeName","src":"25632:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25594:50:89"},"returnParameters":{"id":32989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32988,"mutability":"mutable","name":"value","nameLocation":"25671:5:89","nodeType":"VariableDeclaration","scope":32990,"src":"25663:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25663:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25662:15:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":32998,"nodeType":"FunctionDefinition","src":"25722:72:89","nodes":[],"documentation":{"id":32991,"nodeType":"StructuredDocumentation","src":"25684:33:89","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25731:8:89","parameters":{"id":32994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32993,"mutability":"mutable","name":"account","nameLocation":"25748:7:89","nodeType":"VariableDeclaration","scope":32998,"src":"25740:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32992,"name":"address","nodeType":"ElementaryTypeName","src":"25740:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25739:17:89"},"returnParameters":{"id":32997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32996,"mutability":"mutable","name":"nonce","nameLocation":"25787:5:89","nodeType":"VariableDeclaration","scope":32998,"src":"25780:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":32995,"name":"uint64","nodeType":"ElementaryTypeName","src":"25780:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25779:14:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33007,"nodeType":"FunctionDefinition","src":"25837:74:89","nodes":[],"documentation":{"id":32999,"nodeType":"StructuredDocumentation","src":"25800:32:89","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25846:8:89","parameters":{"id":33003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33002,"mutability":"mutable","name":"wallet","nameLocation":"25871:6:89","nodeType":"VariableDeclaration","scope":33007,"src":"25855:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":33001,"nodeType":"UserDefinedTypeName","pathNode":{"id":33000,"name":"Wallet","nameLocations":["25855:6:89"],"nodeType":"IdentifierPath","referencedDeclaration":32292,"src":"25855:6:89"},"referencedDeclaration":32292,"src":"25855:6:89","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$32292_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"25854:24:89"},"returnParameters":{"id":33006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33005,"mutability":"mutable","name":"nonce","nameLocation":"25904:5:89","nodeType":"VariableDeclaration","scope":33007,"src":"25897:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":33004,"name":"uint64","nodeType":"ElementaryTypeName","src":"25897:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25896:14:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33015,"nodeType":"FunctionDefinition","src":"25953:64:89","nodes":[],"documentation":{"id":33008,"nodeType":"StructuredDocumentation","src":"25917:31:89","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"25962:15:89","parameters":{"id":33009,"nodeType":"ParameterList","parameters":[],"src":"25977:2:89"},"returnParameters":{"id":33014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33013,"mutability":"mutable","name":"logs","nameLocation":"26011:4:89","nodeType":"VariableDeclaration","scope":33015,"src":"25998:17:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$32227_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":33011,"nodeType":"UserDefinedTypeName","pathNode":{"id":33010,"name":"Log","nameLocations":["25998:3:89"],"nodeType":"IdentifierPath","referencedDeclaration":32227,"src":"25998:3:89"},"referencedDeclaration":32227,"src":"25998:3:89","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$32227_storage_ptr","typeString":"struct VmSafe.Log"}},"id":33012,"nodeType":"ArrayTypeName","src":"25998:5:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$32227_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"25997:19:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33022,"nodeType":"FunctionDefinition","src":"26067:62:89","nodes":[],"documentation":{"id":33016,"nodeType":"StructuredDocumentation","src":"26023:39:89","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"26076:11:89","parameters":{"id":33017,"nodeType":"ParameterList","parameters":[],"src":"26087:2:89"},"returnParameters":{"id":33021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33020,"mutability":"mutable","name":"gas","nameLocation":"26124:3:89","nodeType":"VariableDeclaration","scope":33022,"src":"26113:14:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$32364_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":33019,"nodeType":"UserDefinedTypeName","pathNode":{"id":33018,"name":"Gas","nameLocations":["26113:3:89"],"nodeType":"IdentifierPath","referencedDeclaration":32364,"src":"26113:3:89"},"referencedDeclaration":32364,"src":"26113:3:89","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$32364_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"26112:16:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33032,"nodeType":"FunctionDefinition","src":"26181:81:89","nodes":[],"documentation":{"id":33023,"nodeType":"StructuredDocumentation","src":"26135:41:89","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"26190:4:89","parameters":{"id":33028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33025,"mutability":"mutable","name":"target","nameLocation":"26203:6:89","nodeType":"VariableDeclaration","scope":33032,"src":"26195:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33024,"name":"address","nodeType":"ElementaryTypeName","src":"26195:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33027,"mutability":"mutable","name":"slot","nameLocation":"26219:4:89","nodeType":"VariableDeclaration","scope":33032,"src":"26211:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":33026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26211:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26194:30:89"},"returnParameters":{"id":33031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33030,"mutability":"mutable","name":"data","nameLocation":"26256:4:89","nodeType":"VariableDeclaration","scope":33032,"src":"26248:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":33029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26248:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26247:14:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33036,"nodeType":"FunctionDefinition","src":"26353:37:89","nodes":[],"documentation":{"id":33033,"nodeType":"StructuredDocumentation","src":"26268:80:89","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"26362:16:89","parameters":{"id":33034,"nodeType":"ParameterList","parameters":[],"src":"26378:2:89"},"returnParameters":{"id":33035,"nodeType":"ParameterList","parameters":[],"src":"26389:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33040,"nodeType":"FunctionDefinition","src":"26442:27:89","nodes":[],"documentation":{"id":33037,"nodeType":"StructuredDocumentation","src":"26396:41:89","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"26451:6:89","parameters":{"id":33038,"nodeType":"ParameterList","parameters":[],"src":"26457:2:89"},"returnParameters":{"id":33039,"nodeType":"ParameterList","parameters":[],"src":"26468:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33044,"nodeType":"FunctionDefinition","src":"26516:31:89","nodes":[],"documentation":{"id":33041,"nodeType":"StructuredDocumentation","src":"26475:36:89","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"26525:10:89","parameters":{"id":33042,"nodeType":"ParameterList","parameters":[],"src":"26535:2:89"},"returnParameters":{"id":33043,"nodeType":"ParameterList","parameters":[],"src":"26546:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33048,"nodeType":"FunctionDefinition","src":"26618:37:89","nodes":[],"documentation":{"id":33045,"nodeType":"StructuredDocumentation","src":"26553:60:89","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"26627:16:89","parameters":{"id":33046,"nodeType":"ParameterList","parameters":[],"src":"26643:2:89"},"returnParameters":{"id":33047,"nodeType":"ParameterList","parameters":[],"src":"26654:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33052,"nodeType":"FunctionDefinition","src":"26745:38:89","nodes":[],"documentation":{"id":33049,"nodeType":"StructuredDocumentation","src":"26661:79:89","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"26754:17:89","parameters":{"id":33050,"nodeType":"ParameterList","parameters":[],"src":"26771:2:89"},"returnParameters":{"id":33051,"nodeType":"ParameterList","parameters":[],"src":"26782:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33062,"nodeType":"FunctionDefinition","src":"26860:98:89","nodes":[],"documentation":{"id":33053,"nodeType":"StructuredDocumentation","src":"26789:66:89","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"26869:3:89","parameters":{"id":33058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33055,"mutability":"mutable","name":"method","nameLocation":"26889:6:89","nodeType":"VariableDeclaration","scope":33062,"src":"26873:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33054,"name":"string","nodeType":"ElementaryTypeName","src":"26873:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33057,"mutability":"mutable","name":"params","nameLocation":"26913:6:89","nodeType":"VariableDeclaration","scope":33062,"src":"26897:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33056,"name":"string","nodeType":"ElementaryTypeName","src":"26897:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26872:48:89"},"returnParameters":{"id":33061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33060,"mutability":"mutable","name":"data","nameLocation":"26952:4:89","nodeType":"VariableDeclaration","scope":33062,"src":"26939:17:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33059,"name":"bytes","nodeType":"ElementaryTypeName","src":"26939:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26938:19:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33074,"nodeType":"FunctionDefinition","src":"27033:142:89","nodes":[],"documentation":{"id":33063,"nodeType":"StructuredDocumentation","src":"26964:64:89","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"27042:3:89","parameters":{"id":33070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33065,"mutability":"mutable","name":"urlOrAlias","nameLocation":"27062:10:89","nodeType":"VariableDeclaration","scope":33074,"src":"27046:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33064,"name":"string","nodeType":"ElementaryTypeName","src":"27046:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33067,"mutability":"mutable","name":"method","nameLocation":"27090:6:89","nodeType":"VariableDeclaration","scope":33074,"src":"27074:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33066,"name":"string","nodeType":"ElementaryTypeName","src":"27074:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33069,"mutability":"mutable","name":"params","nameLocation":"27114:6:89","nodeType":"VariableDeclaration","scope":33074,"src":"27098:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33068,"name":"string","nodeType":"ElementaryTypeName","src":"27098:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27045:76:89"},"returnParameters":{"id":33073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33072,"mutability":"mutable","name":"data","nameLocation":"27169:4:89","nodeType":"VariableDeclaration","scope":33074,"src":"27156:17:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33071,"name":"bytes","nodeType":"ElementaryTypeName","src":"27156:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27155:19:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33078,"nodeType":"FunctionDefinition","src":"27243:42:89","nodes":[],"documentation":{"id":33075,"nodeType":"StructuredDocumentation","src":"27181:57:89","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"27252:21:89","parameters":{"id":33076,"nodeType":"ParameterList","parameters":[],"src":"27273:2:89"},"returnParameters":{"id":33077,"nodeType":"ParameterList","parameters":[],"src":"27284:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33082,"nodeType":"FunctionDefinition","src":"27429:44:89","nodes":[],"documentation":{"id":33079,"nodeType":"StructuredDocumentation","src":"27291:133:89","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"27438:23:89","parameters":{"id":33080,"nodeType":"ParameterList","parameters":[],"src":"27461:2:89"},"returnParameters":{"id":33081,"nodeType":"ParameterList","parameters":[],"src":"27472:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33090,"nodeType":"FunctionDefinition","src":"27581:92:89","nodes":[],"documentation":{"id":33083,"nodeType":"StructuredDocumentation","src":"27479:97:89","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"27590:22:89","parameters":{"id":33084,"nodeType":"ParameterList","parameters":[],"src":"27612:2:89"},"returnParameters":{"id":33089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33088,"mutability":"mutable","name":"accountAccesses","nameLocation":"27656:15:89","nodeType":"VariableDeclaration","scope":33090,"src":"27633:38:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$32338_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":33086,"nodeType":"UserDefinedTypeName","pathNode":{"id":33085,"name":"AccountAccess","nameLocations":["27633:13:89"],"nodeType":"IdentifierPath","referencedDeclaration":32338,"src":"27633:13:89"},"referencedDeclaration":32338,"src":"27633:13:89","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$32338_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":33087,"nodeType":"ArrayTypeName","src":"27633:15:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$32338_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"27632:40:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33094,"nodeType":"FunctionDefinition","src":"27769:41:89","nodes":[],"documentation":{"id":33091,"nodeType":"StructuredDocumentation","src":"27679:85:89","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"27778:20:89","parameters":{"id":33092,"nodeType":"ParameterList","parameters":[],"src":"27798:2:89"},"returnParameters":{"id":33093,"nodeType":"ParameterList","parameters":[],"src":"27809:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33100,"nodeType":"FunctionDefinition","src":"28009:50:89","nodes":[],"documentation":{"id":33095,"nodeType":"StructuredDocumentation","src":"27853:151:89","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"28018:9:89","parameters":{"id":33098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33097,"mutability":"mutable","name":"path","nameLocation":"28044:4:89","nodeType":"VariableDeclaration","scope":33100,"src":"28028:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33096,"name":"string","nodeType":"ElementaryTypeName","src":"28028:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28027:22:89"},"returnParameters":{"id":33099,"nodeType":"ParameterList","parameters":[],"src":"28058:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33110,"nodeType":"FunctionDefinition","src":"28374:93:89","nodes":[],"documentation":{"id":33101,"nodeType":"StructuredDocumentation","src":"28065:304:89","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"28383:8:89","parameters":{"id":33106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33103,"mutability":"mutable","name":"from","nameLocation":"28408:4:89","nodeType":"VariableDeclaration","scope":33110,"src":"28392:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33102,"name":"string","nodeType":"ElementaryTypeName","src":"28392:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33105,"mutability":"mutable","name":"to","nameLocation":"28430:2:89","nodeType":"VariableDeclaration","scope":33110,"src":"28414:18:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33104,"name":"string","nodeType":"ElementaryTypeName","src":"28414:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28391:42:89"},"returnParameters":{"id":33109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33108,"mutability":"mutable","name":"copied","nameLocation":"28459:6:89","nodeType":"VariableDeclaration","scope":33110,"src":"28452:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":33107,"name":"uint64","nodeType":"ElementaryTypeName","src":"28452:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28451:15:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33118,"nodeType":"FunctionDefinition","src":"28872:66:89","nodes":[],"documentation":{"id":33111,"nodeType":"StructuredDocumentation","src":"28473:394:89","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"28881:9:89","parameters":{"id":33116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33113,"mutability":"mutable","name":"path","nameLocation":"28907:4:89","nodeType":"VariableDeclaration","scope":33118,"src":"28891:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33112,"name":"string","nodeType":"ElementaryTypeName","src":"28891:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33115,"mutability":"mutable","name":"recursive","nameLocation":"28918:9:89","nodeType":"VariableDeclaration","scope":33118,"src":"28913:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33114,"name":"bool","nodeType":"ElementaryTypeName","src":"28913:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28890:38:89"},"returnParameters":{"id":33117,"nodeType":"ParameterList","parameters":[],"src":"28937:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33126,"nodeType":"FunctionDefinition","src":"29168:93:89","nodes":[],"documentation":{"id":33119,"nodeType":"StructuredDocumentation","src":"28944:219:89","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29177:10:89","parameters":{"id":33122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33121,"mutability":"mutable","name":"artifactPath","nameLocation":"29204:12:89","nodeType":"VariableDeclaration","scope":33126,"src":"29188:28:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33120,"name":"string","nodeType":"ElementaryTypeName","src":"29188:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29187:30:89"},"returnParameters":{"id":33125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33124,"mutability":"mutable","name":"deployedAddress","nameLocation":"29244:15:89","nodeType":"VariableDeclaration","scope":33126,"src":"29236:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33123,"name":"address","nodeType":"ElementaryTypeName","src":"29236:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29235:25:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33136,"nodeType":"FunctionDefinition","src":"29555:141:89","nodes":[],"documentation":{"id":33127,"nodeType":"StructuredDocumentation","src":"29267:283:89","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29564:10:89","parameters":{"id":33132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33129,"mutability":"mutable","name":"artifactPath","nameLocation":"29591:12:89","nodeType":"VariableDeclaration","scope":33136,"src":"29575:28:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33128,"name":"string","nodeType":"ElementaryTypeName","src":"29575:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33131,"mutability":"mutable","name":"constructorArgs","nameLocation":"29620:15:89","nodeType":"VariableDeclaration","scope":33136,"src":"29605:30:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33130,"name":"bytes","nodeType":"ElementaryTypeName","src":"29605:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29574:62:89"},"returnParameters":{"id":33135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33134,"mutability":"mutable","name":"deployedAddress","nameLocation":"29679:15:89","nodeType":"VariableDeclaration","scope":33136,"src":"29671:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33133,"name":"address","nodeType":"ElementaryTypeName","src":"29671:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29670:25:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33144,"nodeType":"FunctionDefinition","src":"29791:69:89","nodes":[],"documentation":{"id":33137,"nodeType":"StructuredDocumentation","src":"29702:84:89","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"29800:6:89","parameters":{"id":33140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33139,"mutability":"mutable","name":"path","nameLocation":"29823:4:89","nodeType":"VariableDeclaration","scope":33144,"src":"29807:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33138,"name":"string","nodeType":"ElementaryTypeName","src":"29807:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29806:22:89"},"returnParameters":{"id":33143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33142,"mutability":"mutable","name":"result","nameLocation":"29852:6:89","nodeType":"VariableDeclaration","scope":33144,"src":"29847:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33141,"name":"bool","nodeType":"ElementaryTypeName","src":"29847:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29846:13:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33153,"nodeType":"FunctionDefinition","src":"29925:84:89","nodes":[],"documentation":{"id":33145,"nodeType":"StructuredDocumentation","src":"29866:54:89","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"29934:3:89","parameters":{"id":33149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33148,"mutability":"mutable","name":"commandInput","nameLocation":"29956:12:89","nodeType":"VariableDeclaration","scope":33153,"src":"29938:30:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":33146,"name":"string","nodeType":"ElementaryTypeName","src":"29938:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":33147,"nodeType":"ArrayTypeName","src":"29938:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29937:32:89"},"returnParameters":{"id":33152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33151,"mutability":"mutable","name":"result","nameLocation":"30001:6:89","nodeType":"VariableDeclaration","scope":33153,"src":"29988:19:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33150,"name":"bytes","nodeType":"ElementaryTypeName","src":"29988:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29987:21:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33162,"nodeType":"FunctionDefinition","src":"30108:93:89","nodes":[],"documentation":{"id":33154,"nodeType":"StructuredDocumentation","src":"30015:88:89","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"30117:10:89","parameters":{"id":33157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33156,"mutability":"mutable","name":"path","nameLocation":"30144:4:89","nodeType":"VariableDeclaration","scope":33162,"src":"30128:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33155,"name":"string","nodeType":"ElementaryTypeName","src":"30128:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30127:22:89"},"returnParameters":{"id":33161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33160,"mutability":"mutable","name":"metadata","nameLocation":"30191:8:89","nodeType":"VariableDeclaration","scope":33162,"src":"30173:26:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$32282_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":33159,"nodeType":"UserDefinedTypeName","pathNode":{"id":33158,"name":"FsMetadata","nameLocations":["30173:10:89"],"nodeType":"IdentifierPath","referencedDeclaration":32282,"src":"30173:10:89"},"referencedDeclaration":32282,"src":"30173:10:89","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$32282_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"30172:28:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33170,"nodeType":"FunctionDefinition","src":"30270:95:89","nodes":[],"documentation":{"id":33163,"nodeType":"StructuredDocumentation","src":"30207:58:89","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"30279:21:89","parameters":{"id":33166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33165,"mutability":"mutable","name":"code","nameLocation":"30316:4:89","nodeType":"VariableDeclaration","scope":33170,"src":"30301:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33164,"name":"bytes","nodeType":"ElementaryTypeName","src":"30301:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30300:21:89"},"returnParameters":{"id":33169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33168,"mutability":"mutable","name":"path","nameLocation":"30359:4:89","nodeType":"VariableDeclaration","scope":33170,"src":"30345:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33167,"name":"string","nodeType":"ElementaryTypeName","src":"30345:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30344:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33178,"nodeType":"FunctionDefinition","src":"30442:111:89","nodes":[],"documentation":{"id":33171,"nodeType":"StructuredDocumentation","src":"30371:66:89","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"30451:29:89","parameters":{"id":33174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33173,"mutability":"mutable","name":"deployedCode","nameLocation":"30496:12:89","nodeType":"VariableDeclaration","scope":33178,"src":"30481:27:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33172,"name":"bytes","nodeType":"ElementaryTypeName","src":"30481:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30480:29:89"},"returnParameters":{"id":33177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33176,"mutability":"mutable","name":"path","nameLocation":"30547:4:89","nodeType":"VariableDeclaration","scope":33178,"src":"30533:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33175,"name":"string","nodeType":"ElementaryTypeName","src":"30533:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30532:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33186,"nodeType":"FunctionDefinition","src":"30791:101:89","nodes":[],"documentation":{"id":33179,"nodeType":"StructuredDocumentation","src":"30559:227:89","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"30800:7:89","parameters":{"id":33182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33181,"mutability":"mutable","name":"artifactPath","nameLocation":"30824:12:89","nodeType":"VariableDeclaration","scope":33186,"src":"30808:28:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33180,"name":"string","nodeType":"ElementaryTypeName","src":"30808:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30807:30:89"},"returnParameters":{"id":33185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33184,"mutability":"mutable","name":"creationBytecode","nameLocation":"30874:16:89","nodeType":"VariableDeclaration","scope":33186,"src":"30861:29:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33183,"name":"bytes","nodeType":"ElementaryTypeName","src":"30861:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30860:31:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33194,"nodeType":"FunctionDefinition","src":"31130:108:89","nodes":[],"documentation":{"id":33187,"nodeType":"StructuredDocumentation","src":"30898:227:89","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"31139:15:89","parameters":{"id":33190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33189,"mutability":"mutable","name":"artifactPath","nameLocation":"31171:12:89","nodeType":"VariableDeclaration","scope":33194,"src":"31155:28:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33188,"name":"string","nodeType":"ElementaryTypeName","src":"31155:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31154:30:89"},"returnParameters":{"id":33193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33192,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"31221:15:89","nodeType":"VariableDeclaration","scope":33194,"src":"31208:28:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33191,"name":"bytes","nodeType":"ElementaryTypeName","src":"31208:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31207:30:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33202,"nodeType":"FunctionDefinition","src":"31344:68:89","nodes":[],"documentation":{"id":33195,"nodeType":"StructuredDocumentation","src":"31244:95:89","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"31353:5:89","parameters":{"id":33198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33197,"mutability":"mutable","name":"path","nameLocation":"31375:4:89","nodeType":"VariableDeclaration","scope":33202,"src":"31359:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33196,"name":"string","nodeType":"ElementaryTypeName","src":"31359:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31358:22:89"},"returnParameters":{"id":33201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33200,"mutability":"mutable","name":"result","nameLocation":"31404:6:89","nodeType":"VariableDeclaration","scope":33202,"src":"31399:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33199,"name":"bool","nodeType":"ElementaryTypeName","src":"31399:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31398:13:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33210,"nodeType":"FunctionDefinition","src":"31521:69:89","nodes":[],"documentation":{"id":33203,"nodeType":"StructuredDocumentation","src":"31418:98:89","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"31530:6:89","parameters":{"id":33206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33205,"mutability":"mutable","name":"path","nameLocation":"31553:4:89","nodeType":"VariableDeclaration","scope":33210,"src":"31537:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33204,"name":"string","nodeType":"ElementaryTypeName","src":"31537:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31536:22:89"},"returnParameters":{"id":33209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33208,"mutability":"mutable","name":"result","nameLocation":"31582:6:89","nodeType":"VariableDeclaration","scope":33210,"src":"31577:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33207,"name":"bool","nodeType":"ElementaryTypeName","src":"31577:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31576:13:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33216,"nodeType":"FunctionDefinition","src":"31646:66:89","nodes":[],"documentation":{"id":33211,"nodeType":"StructuredDocumentation","src":"31596:45:89","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"31655:11:89","parameters":{"id":33212,"nodeType":"ParameterList","parameters":[],"src":"31666:2:89"},"returnParameters":{"id":33215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33214,"mutability":"mutable","name":"path","nameLocation":"31706:4:89","nodeType":"VariableDeclaration","scope":33216,"src":"31692:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33213,"name":"string","nodeType":"ElementaryTypeName","src":"31692:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31691:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33224,"nodeType":"FunctionDefinition","src":"31779:83:89","nodes":[],"documentation":{"id":33217,"nodeType":"StructuredDocumentation","src":"31718:56:89","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"31788:6:89","parameters":{"id":33220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33219,"mutability":"mutable","name":"promptText","nameLocation":"31811:10:89","nodeType":"VariableDeclaration","scope":33224,"src":"31795:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33218,"name":"string","nodeType":"ElementaryTypeName","src":"31795:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31794:28:89"},"returnParameters":{"id":33223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33222,"mutability":"mutable","name":"input","nameLocation":"31855:5:89","nodeType":"VariableDeclaration","scope":33224,"src":"31841:19:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33221,"name":"string","nodeType":"ElementaryTypeName","src":"31841:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31840:21:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33232,"nodeType":"FunctionDefinition","src":"31925:78:89","nodes":[],"documentation":{"id":33225,"nodeType":"StructuredDocumentation","src":"31868:52:89","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"31934:13:89","parameters":{"id":33228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33227,"mutability":"mutable","name":"promptText","nameLocation":"31964:10:89","nodeType":"VariableDeclaration","scope":33232,"src":"31948:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33226,"name":"string","nodeType":"ElementaryTypeName","src":"31948:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31947:28:89"},"returnParameters":{"id":33231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33232,"src":"31994:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33229,"name":"address","nodeType":"ElementaryTypeName","src":"31994:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31993:9:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33240,"nodeType":"FunctionDefinition","src":"32077:89:89","nodes":[],"documentation":{"id":33233,"nodeType":"StructuredDocumentation","src":"32009:63:89","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"32086:12:89","parameters":{"id":33236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33235,"mutability":"mutable","name":"promptText","nameLocation":"32115:10:89","nodeType":"VariableDeclaration","scope":33240,"src":"32099:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33234,"name":"string","nodeType":"ElementaryTypeName","src":"32099:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32098:28:89"},"returnParameters":{"id":33239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33238,"mutability":"mutable","name":"input","nameLocation":"32159:5:89","nodeType":"VariableDeclaration","scope":33240,"src":"32145:19:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33237,"name":"string","nodeType":"ElementaryTypeName","src":"32145:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32144:21:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33248,"nodeType":"FunctionDefinition","src":"32246:81:89","nodes":[],"documentation":{"id":33241,"nodeType":"StructuredDocumentation","src":"32172:69:89","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"32255:16:89","parameters":{"id":33244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33243,"mutability":"mutable","name":"promptText","nameLocation":"32288:10:89","nodeType":"VariableDeclaration","scope":33248,"src":"32272:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33242,"name":"string","nodeType":"ElementaryTypeName","src":"32272:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32271:28:89"},"returnParameters":{"id":33247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33248,"src":"32318:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33245,"name":"uint256","nodeType":"ElementaryTypeName","src":"32318:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32317:9:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33256,"nodeType":"FunctionDefinition","src":"32387:75:89","nodes":[],"documentation":{"id":33249,"nodeType":"StructuredDocumentation","src":"32333:49:89","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"32396:10:89","parameters":{"id":33252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33251,"mutability":"mutable","name":"promptText","nameLocation":"32423:10:89","nodeType":"VariableDeclaration","scope":33256,"src":"32407:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33250,"name":"string","nodeType":"ElementaryTypeName","src":"32407:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32406:28:89"},"returnParameters":{"id":33255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33256,"src":"32453:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33253,"name":"uint256","nodeType":"ElementaryTypeName","src":"32453:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32452:9:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33266,"nodeType":"FunctionDefinition","src":"32710:89:89","nodes":[],"documentation":{"id":33257,"nodeType":"StructuredDocumentation","src":"32468:237:89","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32719:7:89","parameters":{"id":33260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33259,"mutability":"mutable","name":"path","nameLocation":"32743:4:89","nodeType":"VariableDeclaration","scope":33266,"src":"32727:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33258,"name":"string","nodeType":"ElementaryTypeName","src":"32727:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32726:22:89"},"returnParameters":{"id":33265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33264,"mutability":"mutable","name":"entries","nameLocation":"32790:7:89","nodeType":"VariableDeclaration","scope":33266,"src":"32772:25:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$32266_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":33262,"nodeType":"UserDefinedTypeName","pathNode":{"id":33261,"name":"DirEntry","nameLocations":["32772:8:89"],"nodeType":"IdentifierPath","referencedDeclaration":32266,"src":"32772:8:89"},"referencedDeclaration":32266,"src":"32772:8:89","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$32266_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":33263,"nodeType":"ArrayTypeName","src":"32772:10:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$32266_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32771:27:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33278,"nodeType":"FunctionDefinition","src":"32836:106:89","nodes":[],"documentation":{"id":33267,"nodeType":"StructuredDocumentation","src":"32805:26:89","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32845:7:89","parameters":{"id":33272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33269,"mutability":"mutable","name":"path","nameLocation":"32869:4:89","nodeType":"VariableDeclaration","scope":33278,"src":"32853:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33268,"name":"string","nodeType":"ElementaryTypeName","src":"32853:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33271,"mutability":"mutable","name":"maxDepth","nameLocation":"32882:8:89","nodeType":"VariableDeclaration","scope":33278,"src":"32875:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":33270,"name":"uint64","nodeType":"ElementaryTypeName","src":"32875:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32852:39:89"},"returnParameters":{"id":33277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33276,"mutability":"mutable","name":"entries","nameLocation":"32933:7:89","nodeType":"VariableDeclaration","scope":33278,"src":"32915:25:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$32266_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":33274,"nodeType":"UserDefinedTypeName","pathNode":{"id":33273,"name":"DirEntry","nameLocations":["32915:8:89"],"nodeType":"IdentifierPath","referencedDeclaration":32266,"src":"32915:8:89"},"referencedDeclaration":32266,"src":"32915:8:89","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$32266_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":33275,"nodeType":"ArrayTypeName","src":"32915:10:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$32266_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32914:27:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33292,"nodeType":"FunctionDefinition","src":"32979:148:89","nodes":[],"documentation":{"id":33279,"nodeType":"StructuredDocumentation","src":"32948:26:89","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32988:7:89","parameters":{"id":33286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33281,"mutability":"mutable","name":"path","nameLocation":"33012:4:89","nodeType":"VariableDeclaration","scope":33292,"src":"32996:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33280,"name":"string","nodeType":"ElementaryTypeName","src":"32996:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33283,"mutability":"mutable","name":"maxDepth","nameLocation":"33025:8:89","nodeType":"VariableDeclaration","scope":33292,"src":"33018:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":33282,"name":"uint64","nodeType":"ElementaryTypeName","src":"33018:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":33285,"mutability":"mutable","name":"followLinks","nameLocation":"33040:11:89","nodeType":"VariableDeclaration","scope":33292,"src":"33035:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33284,"name":"bool","nodeType":"ElementaryTypeName","src":"33035:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32995:57:89"},"returnParameters":{"id":33291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33290,"mutability":"mutable","name":"entries","nameLocation":"33118:7:89","nodeType":"VariableDeclaration","scope":33292,"src":"33100:25:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$32266_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":33288,"nodeType":"UserDefinedTypeName","pathNode":{"id":33287,"name":"DirEntry","nameLocations":["33100:8:89"],"nodeType":"IdentifierPath","referencedDeclaration":32266,"src":"33100:8:89"},"referencedDeclaration":32266,"src":"33100:8:89","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$32266_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":33289,"nodeType":"ArrayTypeName","src":"33100:10:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$32266_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"33099:27:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33300,"nodeType":"FunctionDefinition","src":"33225:83:89","nodes":[],"documentation":{"id":33293,"nodeType":"StructuredDocumentation","src":"33133:87:89","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"33234:8:89","parameters":{"id":33296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33295,"mutability":"mutable","name":"path","nameLocation":"33259:4:89","nodeType":"VariableDeclaration","scope":33300,"src":"33243:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33294,"name":"string","nodeType":"ElementaryTypeName","src":"33243:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33242:22:89"},"returnParameters":{"id":33299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33298,"mutability":"mutable","name":"data","nameLocation":"33302:4:89","nodeType":"VariableDeclaration","scope":33300,"src":"33288:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33297,"name":"string","nodeType":"ElementaryTypeName","src":"33288:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33287:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33308,"nodeType":"FunctionDefinition","src":"33406:88:89","nodes":[],"documentation":{"id":33301,"nodeType":"StructuredDocumentation","src":"33314:87:89","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"33415:14:89","parameters":{"id":33304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33303,"mutability":"mutable","name":"path","nameLocation":"33446:4:89","nodeType":"VariableDeclaration","scope":33308,"src":"33430:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33302,"name":"string","nodeType":"ElementaryTypeName","src":"33430:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33429:22:89"},"returnParameters":{"id":33307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33306,"mutability":"mutable","name":"data","nameLocation":"33488:4:89","nodeType":"VariableDeclaration","scope":33308,"src":"33475:17:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33305,"name":"bytes","nodeType":"ElementaryTypeName","src":"33475:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33474:19:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33316,"nodeType":"FunctionDefinition","src":"33543:83:89","nodes":[],"documentation":{"id":33309,"nodeType":"StructuredDocumentation","src":"33500:38:89","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"33552:8:89","parameters":{"id":33312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33311,"mutability":"mutable","name":"path","nameLocation":"33577:4:89","nodeType":"VariableDeclaration","scope":33316,"src":"33561:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33310,"name":"string","nodeType":"ElementaryTypeName","src":"33561:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33560:22:89"},"returnParameters":{"id":33315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33314,"mutability":"mutable","name":"line","nameLocation":"33620:4:89","nodeType":"VariableDeclaration","scope":33316,"src":"33606:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33313,"name":"string","nodeType":"ElementaryTypeName","src":"33606:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33605:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33324,"nodeType":"FunctionDefinition","src":"33885:93:89","nodes":[],"documentation":{"id":33317,"nodeType":"StructuredDocumentation","src":"33632:248:89","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"33894:8:89","parameters":{"id":33320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33319,"mutability":"mutable","name":"linkPath","nameLocation":"33919:8:89","nodeType":"VariableDeclaration","scope":33324,"src":"33903:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33318,"name":"string","nodeType":"ElementaryTypeName","src":"33903:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33902:26:89"},"returnParameters":{"id":33323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33322,"mutability":"mutable","name":"targetPath","nameLocation":"33966:10:89","nodeType":"VariableDeclaration","scope":33324,"src":"33952:24:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33321,"name":"string","nodeType":"ElementaryTypeName","src":"33952:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33951:26:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33332,"nodeType":"FunctionDefinition","src":"34368:66:89","nodes":[],"documentation":{"id":33325,"nodeType":"StructuredDocumentation","src":"33984:379:89","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"34377:9:89","parameters":{"id":33330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33327,"mutability":"mutable","name":"path","nameLocation":"34403:4:89","nodeType":"VariableDeclaration","scope":33332,"src":"34387:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33326,"name":"string","nodeType":"ElementaryTypeName","src":"34387:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33329,"mutability":"mutable","name":"recursive","nameLocation":"34414:9:89","nodeType":"VariableDeclaration","scope":33332,"src":"34409:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33328,"name":"bool","nodeType":"ElementaryTypeName","src":"34409:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34386:38:89"},"returnParameters":{"id":33331,"nodeType":"ParameterList","parameters":[],"src":"34433:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33338,"nodeType":"FunctionDefinition","src":"34767:51:89","nodes":[],"documentation":{"id":33333,"nodeType":"StructuredDocumentation","src":"34440:322:89","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"34776:10:89","parameters":{"id":33336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33335,"mutability":"mutable","name":"path","nameLocation":"34803:4:89","nodeType":"VariableDeclaration","scope":33338,"src":"34787:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33334,"name":"string","nodeType":"ElementaryTypeName","src":"34787:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34786:22:89"},"returnParameters":{"id":33337,"nodeType":"ParameterList","parameters":[],"src":"34817:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33348,"nodeType":"FunctionDefinition","src":"34925:91:89","nodes":[],"documentation":{"id":33339,"nodeType":"StructuredDocumentation","src":"34824:96:89","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"34934:6:89","parameters":{"id":33343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33342,"mutability":"mutable","name":"commandInput","nameLocation":"34959:12:89","nodeType":"VariableDeclaration","scope":33348,"src":"34941:30:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":33340,"name":"string","nodeType":"ElementaryTypeName","src":"34941:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":33341,"nodeType":"ArrayTypeName","src":"34941:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"34940:32:89"},"returnParameters":{"id":33347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33346,"mutability":"mutable","name":"result","nameLocation":"35008:6:89","nodeType":"VariableDeclaration","scope":33348,"src":"34991:23:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$32300_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":33345,"nodeType":"UserDefinedTypeName","pathNode":{"id":33344,"name":"FfiResult","nameLocations":["34991:9:89"],"nodeType":"IdentifierPath","referencedDeclaration":32300,"src":"34991:9:89"},"referencedDeclaration":32300,"src":"34991:9:89","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$32300_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"34990:25:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33354,"nodeType":"FunctionDefinition","src":"35081:60:89","nodes":[],"documentation":{"id":33349,"nodeType":"StructuredDocumentation","src":"35022:54:89","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"35090:8:89","parameters":{"id":33350,"nodeType":"ParameterList","parameters":[],"src":"35098:2:89"},"returnParameters":{"id":33353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33352,"mutability":"mutable","name":"milliseconds","nameLocation":"35127:12:89","nodeType":"VariableDeclaration","scope":33354,"src":"35119:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33351,"name":"uint256","nodeType":"ElementaryTypeName","src":"35119:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35118:22:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33362,"nodeType":"FunctionDefinition","src":"35310:72:89","nodes":[],"documentation":{"id":33355,"nodeType":"StructuredDocumentation","src":"35147:158:89","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"35319:9:89","parameters":{"id":33360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33357,"mutability":"mutable","name":"path","nameLocation":"35345:4:89","nodeType":"VariableDeclaration","scope":33362,"src":"35329:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33356,"name":"string","nodeType":"ElementaryTypeName","src":"35329:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33359,"mutability":"mutable","name":"data","nameLocation":"35367:4:89","nodeType":"VariableDeclaration","scope":33362,"src":"35351:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33358,"name":"string","nodeType":"ElementaryTypeName","src":"35351:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35328:44:89"},"returnParameters":{"id":33361,"nodeType":"ParameterList","parameters":[],"src":"35381:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33370,"nodeType":"FunctionDefinition","src":"35560:77:89","nodes":[],"documentation":{"id":33363,"nodeType":"StructuredDocumentation","src":"35388:167:89","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"35569:15:89","parameters":{"id":33368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33365,"mutability":"mutable","name":"path","nameLocation":"35601:4:89","nodeType":"VariableDeclaration","scope":33370,"src":"35585:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33364,"name":"string","nodeType":"ElementaryTypeName","src":"35585:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33367,"mutability":"mutable","name":"data","nameLocation":"35622:4:89","nodeType":"VariableDeclaration","scope":33370,"src":"35607:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33366,"name":"bytes","nodeType":"ElementaryTypeName","src":"35607:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35584:43:89"},"returnParameters":{"id":33369,"nodeType":"ParameterList","parameters":[],"src":"35636:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33378,"nodeType":"FunctionDefinition","src":"35758:72:89","nodes":[],"documentation":{"id":33371,"nodeType":"StructuredDocumentation","src":"35643:110:89","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"35767:9:89","parameters":{"id":33376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33373,"mutability":"mutable","name":"path","nameLocation":"35793:4:89","nodeType":"VariableDeclaration","scope":33378,"src":"35777:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33372,"name":"string","nodeType":"ElementaryTypeName","src":"35777:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33375,"mutability":"mutable","name":"data","nameLocation":"35815:4:89","nodeType":"VariableDeclaration","scope":33378,"src":"35799:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33374,"name":"string","nodeType":"ElementaryTypeName","src":"35799:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35776:44:89"},"returnParameters":{"id":33377,"nodeType":"ParameterList","parameters":[],"src":"35829:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33388,"nodeType":"FunctionDefinition","src":"35916:95:89","nodes":[],"documentation":{"id":33379,"nodeType":"StructuredDocumentation","src":"35867:44:89","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"35925:13:89","parameters":{"id":33384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33381,"mutability":"mutable","name":"json","nameLocation":"35955:4:89","nodeType":"VariableDeclaration","scope":33388,"src":"35939:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33380,"name":"string","nodeType":"ElementaryTypeName","src":"35939:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33383,"mutability":"mutable","name":"key","nameLocation":"35977:3:89","nodeType":"VariableDeclaration","scope":33388,"src":"35961:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33382,"name":"string","nodeType":"ElementaryTypeName","src":"35961:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35938:43:89"},"returnParameters":{"id":33387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33388,"src":"36005:4:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33385,"name":"bool","nodeType":"ElementaryTypeName","src":"36005:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36004:6:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33398,"nodeType":"FunctionDefinition","src":"36092:101:89","nodes":[],"documentation":{"id":33389,"nodeType":"StructuredDocumentation","src":"36017:70:89","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"36101:16:89","parameters":{"id":33394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33391,"mutability":"mutable","name":"json","nameLocation":"36134:4:89","nodeType":"VariableDeclaration","scope":33398,"src":"36118:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33390,"name":"string","nodeType":"ElementaryTypeName","src":"36118:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33393,"mutability":"mutable","name":"key","nameLocation":"36156:3:89","nodeType":"VariableDeclaration","scope":33398,"src":"36140:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33392,"name":"string","nodeType":"ElementaryTypeName","src":"36140:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36117:43:89"},"returnParameters":{"id":33397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33398,"src":"36184:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33395,"name":"address","nodeType":"ElementaryTypeName","src":"36184:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36183:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33409,"nodeType":"FunctionDefinition","src":"36276:139:89","nodes":[],"documentation":{"id":33399,"nodeType":"StructuredDocumentation","src":"36199:72:89","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"36285:21:89","parameters":{"id":33404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33401,"mutability":"mutable","name":"json","nameLocation":"36323:4:89","nodeType":"VariableDeclaration","scope":33409,"src":"36307:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33400,"name":"string","nodeType":"ElementaryTypeName","src":"36307:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33403,"mutability":"mutable","name":"key","nameLocation":"36345:3:89","nodeType":"VariableDeclaration","scope":33409,"src":"36329:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33402,"name":"string","nodeType":"ElementaryTypeName","src":"36329:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36306:43:89"},"returnParameters":{"id":33408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33409,"src":"36397:16:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":33405,"name":"address","nodeType":"ElementaryTypeName","src":"36397:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":33406,"nodeType":"ArrayTypeName","src":"36397:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"36396:18:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33419,"nodeType":"FunctionDefinition","src":"36493:95:89","nodes":[],"documentation":{"id":33410,"nodeType":"StructuredDocumentation","src":"36421:67:89","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"36502:13:89","parameters":{"id":33415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33412,"mutability":"mutable","name":"json","nameLocation":"36532:4:89","nodeType":"VariableDeclaration","scope":33419,"src":"36516:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33411,"name":"string","nodeType":"ElementaryTypeName","src":"36516:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33414,"mutability":"mutable","name":"key","nameLocation":"36554:3:89","nodeType":"VariableDeclaration","scope":33419,"src":"36538:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33413,"name":"string","nodeType":"ElementaryTypeName","src":"36538:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36515:43:89"},"returnParameters":{"id":33418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33419,"src":"36582:4:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33416,"name":"bool","nodeType":"ElementaryTypeName","src":"36582:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36581:6:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33430,"nodeType":"FunctionDefinition","src":"36668:109:89","nodes":[],"documentation":{"id":33420,"nodeType":"StructuredDocumentation","src":"36594:69:89","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"36677:18:89","parameters":{"id":33425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33422,"mutability":"mutable","name":"json","nameLocation":"36712:4:89","nodeType":"VariableDeclaration","scope":33430,"src":"36696:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33421,"name":"string","nodeType":"ElementaryTypeName","src":"36696:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33424,"mutability":"mutable","name":"key","nameLocation":"36734:3:89","nodeType":"VariableDeclaration","scope":33430,"src":"36718:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33423,"name":"string","nodeType":"ElementaryTypeName","src":"36718:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36695:43:89"},"returnParameters":{"id":33429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33430,"src":"36762:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":33426,"name":"bool","nodeType":"ElementaryTypeName","src":"36762:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":33427,"nodeType":"ArrayTypeName","src":"36762:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"36761:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33440,"nodeType":"FunctionDefinition","src":"36856:104:89","nodes":[],"documentation":{"id":33431,"nodeType":"StructuredDocumentation","src":"36783:68:89","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"36865:14:89","parameters":{"id":33436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33433,"mutability":"mutable","name":"json","nameLocation":"36896:4:89","nodeType":"VariableDeclaration","scope":33440,"src":"36880:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33432,"name":"string","nodeType":"ElementaryTypeName","src":"36880:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33435,"mutability":"mutable","name":"key","nameLocation":"36918:3:89","nodeType":"VariableDeclaration","scope":33440,"src":"36902:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33434,"name":"string","nodeType":"ElementaryTypeName","src":"36902:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36879:43:89"},"returnParameters":{"id":33439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33440,"src":"36946:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33437,"name":"bytes","nodeType":"ElementaryTypeName","src":"36946:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36945:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33450,"nodeType":"FunctionDefinition","src":"37041:101:89","nodes":[],"documentation":{"id":33441,"nodeType":"StructuredDocumentation","src":"36966:70:89","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"37050:16:89","parameters":{"id":33446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33443,"mutability":"mutable","name":"json","nameLocation":"37083:4:89","nodeType":"VariableDeclaration","scope":33450,"src":"37067:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33442,"name":"string","nodeType":"ElementaryTypeName","src":"37067:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33445,"mutability":"mutable","name":"key","nameLocation":"37105:3:89","nodeType":"VariableDeclaration","scope":33450,"src":"37089:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33444,"name":"string","nodeType":"ElementaryTypeName","src":"37089:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37066:43:89"},"returnParameters":{"id":33449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33450,"src":"37133:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":33447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37133:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37132:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33461,"nodeType":"FunctionDefinition","src":"37225:139:89","nodes":[],"documentation":{"id":33451,"nodeType":"StructuredDocumentation","src":"37148:72:89","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"37234:21:89","parameters":{"id":33456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33453,"mutability":"mutable","name":"json","nameLocation":"37272:4:89","nodeType":"VariableDeclaration","scope":33461,"src":"37256:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33452,"name":"string","nodeType":"ElementaryTypeName","src":"37256:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33455,"mutability":"mutable","name":"key","nameLocation":"37294:3:89","nodeType":"VariableDeclaration","scope":33461,"src":"37278:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33454,"name":"string","nodeType":"ElementaryTypeName","src":"37278:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37255:43:89"},"returnParameters":{"id":33460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33461,"src":"37346:16:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":33457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37346:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":33458,"nodeType":"ArrayTypeName","src":"37346:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"37345:18:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33472,"nodeType":"FunctionDefinition","src":"37445:111:89","nodes":[],"documentation":{"id":33462,"nodeType":"StructuredDocumentation","src":"37370:70:89","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"37454:19:89","parameters":{"id":33467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33464,"mutability":"mutable","name":"json","nameLocation":"37490:4:89","nodeType":"VariableDeclaration","scope":33472,"src":"37474:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33463,"name":"string","nodeType":"ElementaryTypeName","src":"37474:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33466,"mutability":"mutable","name":"key","nameLocation":"37512:3:89","nodeType":"VariableDeclaration","scope":33472,"src":"37496:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33465,"name":"string","nodeType":"ElementaryTypeName","src":"37496:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37473:43:89"},"returnParameters":{"id":33471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33472,"src":"37540:14:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":33468,"name":"bytes","nodeType":"ElementaryTypeName","src":"37540:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":33469,"nodeType":"ArrayTypeName","src":"37540:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"37539:16:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33482,"nodeType":"FunctionDefinition","src":"37636:96:89","nodes":[],"documentation":{"id":33473,"nodeType":"StructuredDocumentation","src":"37562:69:89","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"37645:12:89","parameters":{"id":33478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33475,"mutability":"mutable","name":"json","nameLocation":"37674:4:89","nodeType":"VariableDeclaration","scope":33482,"src":"37658:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33474,"name":"string","nodeType":"ElementaryTypeName","src":"37658:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33477,"mutability":"mutable","name":"key","nameLocation":"37696:3:89","nodeType":"VariableDeclaration","scope":33482,"src":"37680:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33476,"name":"string","nodeType":"ElementaryTypeName","src":"37680:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37657:43:89"},"returnParameters":{"id":33481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33482,"src":"37724:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":33479,"name":"int256","nodeType":"ElementaryTypeName","src":"37724:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"37723:8:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33493,"nodeType":"FunctionDefinition","src":"37814:110:89","nodes":[],"documentation":{"id":33483,"nodeType":"StructuredDocumentation","src":"37738:71:89","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"37823:17:89","parameters":{"id":33488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33485,"mutability":"mutable","name":"json","nameLocation":"37857:4:89","nodeType":"VariableDeclaration","scope":33493,"src":"37841:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33484,"name":"string","nodeType":"ElementaryTypeName","src":"37841:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33487,"mutability":"mutable","name":"key","nameLocation":"37879:3:89","nodeType":"VariableDeclaration","scope":33493,"src":"37863:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33486,"name":"string","nodeType":"ElementaryTypeName","src":"37863:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37840:43:89"},"returnParameters":{"id":33492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33493,"src":"37907:15:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":33489,"name":"int256","nodeType":"ElementaryTypeName","src":"37907:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":33490,"nodeType":"ArrayTypeName","src":"37907:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"37906:17:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33504,"nodeType":"FunctionDefinition","src":"37989:111:89","nodes":[],"documentation":{"id":33494,"nodeType":"StructuredDocumentation","src":"37930:54:89","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"37998:13:89","parameters":{"id":33499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33496,"mutability":"mutable","name":"json","nameLocation":"38028:4:89","nodeType":"VariableDeclaration","scope":33504,"src":"38012:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33495,"name":"string","nodeType":"ElementaryTypeName","src":"38012:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33498,"mutability":"mutable","name":"key","nameLocation":"38050:3:89","nodeType":"VariableDeclaration","scope":33504,"src":"38034:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33497,"name":"string","nodeType":"ElementaryTypeName","src":"38034:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38011:43:89"},"returnParameters":{"id":33503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33502,"mutability":"mutable","name":"keys","nameLocation":"38094:4:89","nodeType":"VariableDeclaration","scope":33504,"src":"38078:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":33500,"name":"string","nodeType":"ElementaryTypeName","src":"38078:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":33501,"nodeType":"ArrayTypeName","src":"38078:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38077:22:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33514,"nodeType":"FunctionDefinition","src":"38180:106:89","nodes":[],"documentation":{"id":33505,"nodeType":"StructuredDocumentation","src":"38106:69:89","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"38189:15:89","parameters":{"id":33510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33507,"mutability":"mutable","name":"json","nameLocation":"38221:4:89","nodeType":"VariableDeclaration","scope":33514,"src":"38205:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33506,"name":"string","nodeType":"ElementaryTypeName","src":"38205:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33509,"mutability":"mutable","name":"key","nameLocation":"38243:3:89","nodeType":"VariableDeclaration","scope":33514,"src":"38227:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33508,"name":"string","nodeType":"ElementaryTypeName","src":"38227:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38204:43:89"},"returnParameters":{"id":33513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33514,"src":"38271:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33511,"name":"string","nodeType":"ElementaryTypeName","src":"38271:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38270:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33525,"nodeType":"FunctionDefinition","src":"38368:113:89","nodes":[],"documentation":{"id":33515,"nodeType":"StructuredDocumentation","src":"38292:71:89","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"38377:20:89","parameters":{"id":33520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33517,"mutability":"mutable","name":"json","nameLocation":"38414:4:89","nodeType":"VariableDeclaration","scope":33525,"src":"38398:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33516,"name":"string","nodeType":"ElementaryTypeName","src":"38398:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33519,"mutability":"mutable","name":"key","nameLocation":"38436:3:89","nodeType":"VariableDeclaration","scope":33525,"src":"38420:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33518,"name":"string","nodeType":"ElementaryTypeName","src":"38420:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38397:43:89"},"returnParameters":{"id":33524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33525,"src":"38464:15:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":33521,"name":"string","nodeType":"ElementaryTypeName","src":"38464:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":33522,"nodeType":"ArrayTypeName","src":"38464:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38463:17:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33537,"nodeType":"FunctionDefinition","src":"38598:165:89","nodes":[],"documentation":{"id":33526,"nodeType":"StructuredDocumentation","src":"38487:106:89","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"38607:18:89","parameters":{"id":33533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33528,"mutability":"mutable","name":"json","nameLocation":"38642:4:89","nodeType":"VariableDeclaration","scope":33537,"src":"38626:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33527,"name":"string","nodeType":"ElementaryTypeName","src":"38626:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33530,"mutability":"mutable","name":"key","nameLocation":"38664:3:89","nodeType":"VariableDeclaration","scope":33537,"src":"38648:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33529,"name":"string","nodeType":"ElementaryTypeName","src":"38648:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33532,"mutability":"mutable","name":"typeDescription","nameLocation":"38685:15:89","nodeType":"VariableDeclaration","scope":33537,"src":"38669:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33531,"name":"string","nodeType":"ElementaryTypeName","src":"38669:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38625:76:89"},"returnParameters":{"id":33536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33537,"src":"38749:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33534,"name":"bytes","nodeType":"ElementaryTypeName","src":"38749:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38748:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33547,"nodeType":"FunctionDefinition","src":"38865:139:89","nodes":[],"documentation":{"id":33538,"nodeType":"StructuredDocumentation","src":"38769:91:89","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"38874:13:89","parameters":{"id":33543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33540,"mutability":"mutable","name":"json","nameLocation":"38904:4:89","nodeType":"VariableDeclaration","scope":33547,"src":"38888:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33539,"name":"string","nodeType":"ElementaryTypeName","src":"38888:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33542,"mutability":"mutable","name":"typeDescription","nameLocation":"38926:15:89","nodeType":"VariableDeclaration","scope":33547,"src":"38910:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33541,"name":"string","nodeType":"ElementaryTypeName","src":"38910:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38887:55:89"},"returnParameters":{"id":33546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33547,"src":"38990:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33544,"name":"bytes","nodeType":"ElementaryTypeName","src":"38990:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38989:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33559,"nodeType":"FunctionDefinition","src":"39115:160:89","nodes":[],"documentation":{"id":33548,"nodeType":"StructuredDocumentation","src":"39010:100:89","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"39124:13:89","parameters":{"id":33555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33550,"mutability":"mutable","name":"json","nameLocation":"39154:4:89","nodeType":"VariableDeclaration","scope":33559,"src":"39138:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33549,"name":"string","nodeType":"ElementaryTypeName","src":"39138:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33552,"mutability":"mutable","name":"key","nameLocation":"39176:3:89","nodeType":"VariableDeclaration","scope":33559,"src":"39160:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33551,"name":"string","nodeType":"ElementaryTypeName","src":"39160:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33554,"mutability":"mutable","name":"typeDescription","nameLocation":"39197:15:89","nodeType":"VariableDeclaration","scope":33559,"src":"39181:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33553,"name":"string","nodeType":"ElementaryTypeName","src":"39181:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39137:76:89"},"returnParameters":{"id":33558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33559,"src":"39261:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33556,"name":"bytes","nodeType":"ElementaryTypeName","src":"39261:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39260:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33569,"nodeType":"FunctionDefinition","src":"39356:98:89","nodes":[],"documentation":{"id":33560,"nodeType":"StructuredDocumentation","src":"39281:70:89","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"39365:13:89","parameters":{"id":33565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33562,"mutability":"mutable","name":"json","nameLocation":"39395:4:89","nodeType":"VariableDeclaration","scope":33569,"src":"39379:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33561,"name":"string","nodeType":"ElementaryTypeName","src":"39379:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33564,"mutability":"mutable","name":"key","nameLocation":"39417:3:89","nodeType":"VariableDeclaration","scope":33569,"src":"39401:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33563,"name":"string","nodeType":"ElementaryTypeName","src":"39401:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39378:43:89"},"returnParameters":{"id":33568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33569,"src":"39445:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33566,"name":"uint256","nodeType":"ElementaryTypeName","src":"39445:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39444:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33580,"nodeType":"FunctionDefinition","src":"39537:112:89","nodes":[],"documentation":{"id":33570,"nodeType":"StructuredDocumentation","src":"39460:72:89","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"39546:18:89","parameters":{"id":33575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33572,"mutability":"mutable","name":"json","nameLocation":"39581:4:89","nodeType":"VariableDeclaration","scope":33580,"src":"39565:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33571,"name":"string","nodeType":"ElementaryTypeName","src":"39565:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33574,"mutability":"mutable","name":"key","nameLocation":"39603:3:89","nodeType":"VariableDeclaration","scope":33580,"src":"39587:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33573,"name":"string","nodeType":"ElementaryTypeName","src":"39587:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39564:43:89"},"returnParameters":{"id":33579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33580,"src":"39631:16:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33576,"name":"uint256","nodeType":"ElementaryTypeName","src":"39631:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":33577,"nodeType":"ArrayTypeName","src":"39631:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"39630:18:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33588,"nodeType":"FunctionDefinition","src":"39690:93:89","nodes":[],"documentation":{"id":33581,"nodeType":"StructuredDocumentation","src":"39655:30:89","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39699:9:89","parameters":{"id":33584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33583,"mutability":"mutable","name":"json","nameLocation":"39725:4:89","nodeType":"VariableDeclaration","scope":33588,"src":"39709:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33582,"name":"string","nodeType":"ElementaryTypeName","src":"39709:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39708:22:89"},"returnParameters":{"id":33587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33586,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39767:14:89","nodeType":"VariableDeclaration","scope":33588,"src":"39754:27:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33585,"name":"bytes","nodeType":"ElementaryTypeName","src":"39754:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39753:29:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33598,"nodeType":"FunctionDefinition","src":"39833:114:89","nodes":[],"documentation":{"id":33589,"nodeType":"StructuredDocumentation","src":"39789:39:89","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39842:9:89","parameters":{"id":33594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33591,"mutability":"mutable","name":"json","nameLocation":"39868:4:89","nodeType":"VariableDeclaration","scope":33598,"src":"39852:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33590,"name":"string","nodeType":"ElementaryTypeName","src":"39852:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33593,"mutability":"mutable","name":"key","nameLocation":"39890:3:89","nodeType":"VariableDeclaration","scope":33598,"src":"39874:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33592,"name":"string","nodeType":"ElementaryTypeName","src":"39874:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39851:43:89"},"returnParameters":{"id":33597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33596,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39931:14:89","nodeType":"VariableDeclaration","scope":33598,"src":"39918:27:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33595,"name":"bytes","nodeType":"ElementaryTypeName","src":"39918:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39917:29:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33610,"nodeType":"FunctionDefinition","src":"39982:148:89","nodes":[],"documentation":{"id":33599,"nodeType":"StructuredDocumentation","src":"39953:24:89","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"39991:16:89","parameters":{"id":33606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33601,"mutability":"mutable","name":"objectKey","nameLocation":"40024:9:89","nodeType":"VariableDeclaration","scope":33610,"src":"40008:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33600,"name":"string","nodeType":"ElementaryTypeName","src":"40008:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33603,"mutability":"mutable","name":"valueKey","nameLocation":"40051:8:89","nodeType":"VariableDeclaration","scope":33610,"src":"40035:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33602,"name":"string","nodeType":"ElementaryTypeName","src":"40035:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33605,"mutability":"mutable","name":"value","nameLocation":"40069:5:89","nodeType":"VariableDeclaration","scope":33610,"src":"40061:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33604,"name":"address","nodeType":"ElementaryTypeName","src":"40061:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40007:68:89"},"returnParameters":{"id":33609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33608,"mutability":"mutable","name":"json","nameLocation":"40124:4:89","nodeType":"VariableDeclaration","scope":33610,"src":"40110:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33607,"name":"string","nodeType":"ElementaryTypeName","src":"40110:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40109:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33623,"nodeType":"FunctionDefinition","src":"40165:160:89","nodes":[],"documentation":{"id":33611,"nodeType":"StructuredDocumentation","src":"40136:24:89","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"40174:16:89","parameters":{"id":33619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33613,"mutability":"mutable","name":"objectKey","nameLocation":"40207:9:89","nodeType":"VariableDeclaration","scope":33623,"src":"40191:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33612,"name":"string","nodeType":"ElementaryTypeName","src":"40191:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33615,"mutability":"mutable","name":"valueKey","nameLocation":"40234:8:89","nodeType":"VariableDeclaration","scope":33623,"src":"40218:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33614,"name":"string","nodeType":"ElementaryTypeName","src":"40218:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33618,"mutability":"mutable","name":"values","nameLocation":"40263:6:89","nodeType":"VariableDeclaration","scope":33623,"src":"40244:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":33616,"name":"address","nodeType":"ElementaryTypeName","src":"40244:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":33617,"nodeType":"ArrayTypeName","src":"40244:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"40190:80:89"},"returnParameters":{"id":33622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33621,"mutability":"mutable","name":"json","nameLocation":"40319:4:89","nodeType":"VariableDeclaration","scope":33623,"src":"40305:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33620,"name":"string","nodeType":"ElementaryTypeName","src":"40305:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40304:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33635,"nodeType":"FunctionDefinition","src":"40360:142:89","nodes":[],"documentation":{"id":33624,"nodeType":"StructuredDocumentation","src":"40331:24:89","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40369:13:89","parameters":{"id":33631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33626,"mutability":"mutable","name":"objectKey","nameLocation":"40399:9:89","nodeType":"VariableDeclaration","scope":33635,"src":"40383:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33625,"name":"string","nodeType":"ElementaryTypeName","src":"40383:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33628,"mutability":"mutable","name":"valueKey","nameLocation":"40426:8:89","nodeType":"VariableDeclaration","scope":33635,"src":"40410:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33627,"name":"string","nodeType":"ElementaryTypeName","src":"40410:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33630,"mutability":"mutable","name":"value","nameLocation":"40441:5:89","nodeType":"VariableDeclaration","scope":33635,"src":"40436:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33629,"name":"bool","nodeType":"ElementaryTypeName","src":"40436:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"40382:65:89"},"returnParameters":{"id":33634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33633,"mutability":"mutable","name":"json","nameLocation":"40496:4:89","nodeType":"VariableDeclaration","scope":33635,"src":"40482:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33632,"name":"string","nodeType":"ElementaryTypeName","src":"40482:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40481:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33648,"nodeType":"FunctionDefinition","src":"40537:154:89","nodes":[],"documentation":{"id":33636,"nodeType":"StructuredDocumentation","src":"40508:24:89","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40546:13:89","parameters":{"id":33644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33638,"mutability":"mutable","name":"objectKey","nameLocation":"40576:9:89","nodeType":"VariableDeclaration","scope":33648,"src":"40560:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33637,"name":"string","nodeType":"ElementaryTypeName","src":"40560:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33640,"mutability":"mutable","name":"valueKey","nameLocation":"40603:8:89","nodeType":"VariableDeclaration","scope":33648,"src":"40587:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33639,"name":"string","nodeType":"ElementaryTypeName","src":"40587:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33643,"mutability":"mutable","name":"values","nameLocation":"40629:6:89","nodeType":"VariableDeclaration","scope":33648,"src":"40613:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":33641,"name":"bool","nodeType":"ElementaryTypeName","src":"40613:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":33642,"nodeType":"ArrayTypeName","src":"40613:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"40559:77:89"},"returnParameters":{"id":33647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33646,"mutability":"mutable","name":"json","nameLocation":"40685:4:89","nodeType":"VariableDeclaration","scope":33648,"src":"40671:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33645,"name":"string","nodeType":"ElementaryTypeName","src":"40671:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40670:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33660,"nodeType":"FunctionDefinition","src":"40726:148:89","nodes":[],"documentation":{"id":33649,"nodeType":"StructuredDocumentation","src":"40697:24:89","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40735:16:89","parameters":{"id":33656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33651,"mutability":"mutable","name":"objectKey","nameLocation":"40768:9:89","nodeType":"VariableDeclaration","scope":33660,"src":"40752:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33650,"name":"string","nodeType":"ElementaryTypeName","src":"40752:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33653,"mutability":"mutable","name":"valueKey","nameLocation":"40795:8:89","nodeType":"VariableDeclaration","scope":33660,"src":"40779:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33652,"name":"string","nodeType":"ElementaryTypeName","src":"40779:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33655,"mutability":"mutable","name":"value","nameLocation":"40813:5:89","nodeType":"VariableDeclaration","scope":33660,"src":"40805:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":33654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40805:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40751:68:89"},"returnParameters":{"id":33659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33658,"mutability":"mutable","name":"json","nameLocation":"40868:4:89","nodeType":"VariableDeclaration","scope":33660,"src":"40854:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33657,"name":"string","nodeType":"ElementaryTypeName","src":"40854:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40853:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33673,"nodeType":"FunctionDefinition","src":"40909:160:89","nodes":[],"documentation":{"id":33661,"nodeType":"StructuredDocumentation","src":"40880:24:89","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40918:16:89","parameters":{"id":33669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33663,"mutability":"mutable","name":"objectKey","nameLocation":"40951:9:89","nodeType":"VariableDeclaration","scope":33673,"src":"40935:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33662,"name":"string","nodeType":"ElementaryTypeName","src":"40935:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33665,"mutability":"mutable","name":"valueKey","nameLocation":"40978:8:89","nodeType":"VariableDeclaration","scope":33673,"src":"40962:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33664,"name":"string","nodeType":"ElementaryTypeName","src":"40962:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33668,"mutability":"mutable","name":"values","nameLocation":"41007:6:89","nodeType":"VariableDeclaration","scope":33673,"src":"40988:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":33666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40988:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":33667,"nodeType":"ArrayTypeName","src":"40988:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"40934:80:89"},"returnParameters":{"id":33672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33671,"mutability":"mutable","name":"json","nameLocation":"41063:4:89","nodeType":"VariableDeclaration","scope":33673,"src":"41049:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33670,"name":"string","nodeType":"ElementaryTypeName","src":"41049:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41048:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33685,"nodeType":"FunctionDefinition","src":"41104:153:89","nodes":[],"documentation":{"id":33674,"nodeType":"StructuredDocumentation","src":"41075:24:89","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"41113:14:89","parameters":{"id":33681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33676,"mutability":"mutable","name":"objectKey","nameLocation":"41144:9:89","nodeType":"VariableDeclaration","scope":33685,"src":"41128:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33675,"name":"string","nodeType":"ElementaryTypeName","src":"41128:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33678,"mutability":"mutable","name":"valueKey","nameLocation":"41171:8:89","nodeType":"VariableDeclaration","scope":33685,"src":"41155:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33677,"name":"string","nodeType":"ElementaryTypeName","src":"41155:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33680,"mutability":"mutable","name":"value","nameLocation":"41196:5:89","nodeType":"VariableDeclaration","scope":33685,"src":"41181:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33679,"name":"bytes","nodeType":"ElementaryTypeName","src":"41181:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41127:75:89"},"returnParameters":{"id":33684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33683,"mutability":"mutable","name":"json","nameLocation":"41251:4:89","nodeType":"VariableDeclaration","scope":33685,"src":"41237:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33682,"name":"string","nodeType":"ElementaryTypeName","src":"41237:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41236:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33698,"nodeType":"FunctionDefinition","src":"41292:156:89","nodes":[],"documentation":{"id":33686,"nodeType":"StructuredDocumentation","src":"41263:24:89","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"41301:14:89","parameters":{"id":33694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33688,"mutability":"mutable","name":"objectKey","nameLocation":"41332:9:89","nodeType":"VariableDeclaration","scope":33698,"src":"41316:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33687,"name":"string","nodeType":"ElementaryTypeName","src":"41316:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33690,"mutability":"mutable","name":"valueKey","nameLocation":"41359:8:89","nodeType":"VariableDeclaration","scope":33698,"src":"41343:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33689,"name":"string","nodeType":"ElementaryTypeName","src":"41343:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33693,"mutability":"mutable","name":"values","nameLocation":"41386:6:89","nodeType":"VariableDeclaration","scope":33698,"src":"41369:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":33691,"name":"bytes","nodeType":"ElementaryTypeName","src":"41369:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":33692,"nodeType":"ArrayTypeName","src":"41369:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"41315:78:89"},"returnParameters":{"id":33697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33696,"mutability":"mutable","name":"json","nameLocation":"41442:4:89","nodeType":"VariableDeclaration","scope":33698,"src":"41428:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33695,"name":"string","nodeType":"ElementaryTypeName","src":"41428:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41427:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33710,"nodeType":"FunctionDefinition","src":"41483:143:89","nodes":[],"documentation":{"id":33699,"nodeType":"StructuredDocumentation","src":"41454:24:89","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41492:12:89","parameters":{"id":33706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33701,"mutability":"mutable","name":"objectKey","nameLocation":"41521:9:89","nodeType":"VariableDeclaration","scope":33710,"src":"41505:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33700,"name":"string","nodeType":"ElementaryTypeName","src":"41505:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33703,"mutability":"mutable","name":"valueKey","nameLocation":"41548:8:89","nodeType":"VariableDeclaration","scope":33710,"src":"41532:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33702,"name":"string","nodeType":"ElementaryTypeName","src":"41532:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33705,"mutability":"mutable","name":"value","nameLocation":"41565:5:89","nodeType":"VariableDeclaration","scope":33710,"src":"41558:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":33704,"name":"int256","nodeType":"ElementaryTypeName","src":"41558:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41504:67:89"},"returnParameters":{"id":33709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33708,"mutability":"mutable","name":"json","nameLocation":"41620:4:89","nodeType":"VariableDeclaration","scope":33710,"src":"41606:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33707,"name":"string","nodeType":"ElementaryTypeName","src":"41606:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41605:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33723,"nodeType":"FunctionDefinition","src":"41661:155:89","nodes":[],"documentation":{"id":33711,"nodeType":"StructuredDocumentation","src":"41632:24:89","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41670:12:89","parameters":{"id":33719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33713,"mutability":"mutable","name":"objectKey","nameLocation":"41699:9:89","nodeType":"VariableDeclaration","scope":33723,"src":"41683:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33712,"name":"string","nodeType":"ElementaryTypeName","src":"41683:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33715,"mutability":"mutable","name":"valueKey","nameLocation":"41726:8:89","nodeType":"VariableDeclaration","scope":33723,"src":"41710:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33714,"name":"string","nodeType":"ElementaryTypeName","src":"41710:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33718,"mutability":"mutable","name":"values","nameLocation":"41754:6:89","nodeType":"VariableDeclaration","scope":33723,"src":"41736:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":33716,"name":"int256","nodeType":"ElementaryTypeName","src":"41736:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":33717,"nodeType":"ArrayTypeName","src":"41736:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"41682:79:89"},"returnParameters":{"id":33722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33721,"mutability":"mutable","name":"json","nameLocation":"41810:4:89","nodeType":"VariableDeclaration","scope":33723,"src":"41796:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33720,"name":"string","nodeType":"ElementaryTypeName","src":"41796:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41795:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33733,"nodeType":"FunctionDefinition","src":"42013:111:89","nodes":[],"documentation":{"id":33724,"nodeType":"StructuredDocumentation","src":"41822:186:89","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"42022:13:89","parameters":{"id":33729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33726,"mutability":"mutable","name":"objectKey","nameLocation":"42052:9:89","nodeType":"VariableDeclaration","scope":33733,"src":"42036:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33725,"name":"string","nodeType":"ElementaryTypeName","src":"42036:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33728,"mutability":"mutable","name":"value","nameLocation":"42079:5:89","nodeType":"VariableDeclaration","scope":33733,"src":"42063:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33727,"name":"string","nodeType":"ElementaryTypeName","src":"42063:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42035:50:89"},"returnParameters":{"id":33732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33731,"mutability":"mutable","name":"json","nameLocation":"42118:4:89","nodeType":"VariableDeclaration","scope":33733,"src":"42104:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33730,"name":"string","nodeType":"ElementaryTypeName","src":"42104:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42103:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33743,"nodeType":"FunctionDefinition","src":"42159:149:89","nodes":[],"documentation":{"id":33734,"nodeType":"StructuredDocumentation","src":"42130:24:89","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"42168:17:89","parameters":{"id":33739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33736,"mutability":"mutable","name":"typeDescription","nameLocation":"42202:15:89","nodeType":"VariableDeclaration","scope":33743,"src":"42186:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33735,"name":"string","nodeType":"ElementaryTypeName","src":"42186:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33738,"mutability":"mutable","name":"value","nameLocation":"42234:5:89","nodeType":"VariableDeclaration","scope":33743,"src":"42219:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33737,"name":"bytes","nodeType":"ElementaryTypeName","src":"42219:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42185:55:89"},"returnParameters":{"id":33742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33741,"mutability":"mutable","name":"json","nameLocation":"42302:4:89","nodeType":"VariableDeclaration","scope":33743,"src":"42288:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33740,"name":"string","nodeType":"ElementaryTypeName","src":"42288:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42287:20:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33757,"nodeType":"FunctionDefinition","src":"42343:211:89","nodes":[],"documentation":{"id":33744,"nodeType":"StructuredDocumentation","src":"42314:24:89","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"42352:17:89","parameters":{"id":33753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33746,"mutability":"mutable","name":"objectKey","nameLocation":"42395:9:89","nodeType":"VariableDeclaration","scope":33757,"src":"42379:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33745,"name":"string","nodeType":"ElementaryTypeName","src":"42379:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33748,"mutability":"mutable","name":"valueKey","nameLocation":"42430:8:89","nodeType":"VariableDeclaration","scope":33757,"src":"42414:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33747,"name":"string","nodeType":"ElementaryTypeName","src":"42414:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33750,"mutability":"mutable","name":"typeDescription","nameLocation":"42464:15:89","nodeType":"VariableDeclaration","scope":33757,"src":"42448:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33749,"name":"string","nodeType":"ElementaryTypeName","src":"42448:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33752,"mutability":"mutable","name":"value","nameLocation":"42504:5:89","nodeType":"VariableDeclaration","scope":33757,"src":"42489:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33751,"name":"bytes","nodeType":"ElementaryTypeName","src":"42489:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42369:146:89"},"returnParameters":{"id":33756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33755,"mutability":"mutable","name":"json","nameLocation":"42548:4:89","nodeType":"VariableDeclaration","scope":33757,"src":"42534:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33754,"name":"string","nodeType":"ElementaryTypeName","src":"42534:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42533:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33769,"nodeType":"FunctionDefinition","src":"42589:155:89","nodes":[],"documentation":{"id":33758,"nodeType":"StructuredDocumentation","src":"42560:24:89","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42598:15:89","parameters":{"id":33765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33760,"mutability":"mutable","name":"objectKey","nameLocation":"42630:9:89","nodeType":"VariableDeclaration","scope":33769,"src":"42614:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33759,"name":"string","nodeType":"ElementaryTypeName","src":"42614:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33762,"mutability":"mutable","name":"valueKey","nameLocation":"42657:8:89","nodeType":"VariableDeclaration","scope":33769,"src":"42641:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33761,"name":"string","nodeType":"ElementaryTypeName","src":"42641:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33764,"mutability":"mutable","name":"value","nameLocation":"42683:5:89","nodeType":"VariableDeclaration","scope":33769,"src":"42667:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33763,"name":"string","nodeType":"ElementaryTypeName","src":"42667:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42613:76:89"},"returnParameters":{"id":33768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33767,"mutability":"mutable","name":"json","nameLocation":"42738:4:89","nodeType":"VariableDeclaration","scope":33769,"src":"42724:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33766,"name":"string","nodeType":"ElementaryTypeName","src":"42724:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42723:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33782,"nodeType":"FunctionDefinition","src":"42779:158:89","nodes":[],"documentation":{"id":33770,"nodeType":"StructuredDocumentation","src":"42750:24:89","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42788:15:89","parameters":{"id":33778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33772,"mutability":"mutable","name":"objectKey","nameLocation":"42820:9:89","nodeType":"VariableDeclaration","scope":33782,"src":"42804:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33771,"name":"string","nodeType":"ElementaryTypeName","src":"42804:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33774,"mutability":"mutable","name":"valueKey","nameLocation":"42847:8:89","nodeType":"VariableDeclaration","scope":33782,"src":"42831:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33773,"name":"string","nodeType":"ElementaryTypeName","src":"42831:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33777,"mutability":"mutable","name":"values","nameLocation":"42875:6:89","nodeType":"VariableDeclaration","scope":33782,"src":"42857:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":33775,"name":"string","nodeType":"ElementaryTypeName","src":"42857:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":33776,"nodeType":"ArrayTypeName","src":"42857:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"42803:79:89"},"returnParameters":{"id":33781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33780,"mutability":"mutable","name":"json","nameLocation":"42931:4:89","nodeType":"VariableDeclaration","scope":33782,"src":"42917:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33779,"name":"string","nodeType":"ElementaryTypeName","src":"42917:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42916:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33794,"nodeType":"FunctionDefinition","src":"42972:150:89","nodes":[],"documentation":{"id":33783,"nodeType":"StructuredDocumentation","src":"42943:24:89","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"42981:18:89","parameters":{"id":33790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33785,"mutability":"mutable","name":"objectKey","nameLocation":"43016:9:89","nodeType":"VariableDeclaration","scope":33794,"src":"43000:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33784,"name":"string","nodeType":"ElementaryTypeName","src":"43000:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33787,"mutability":"mutable","name":"valueKey","nameLocation":"43043:8:89","nodeType":"VariableDeclaration","scope":33794,"src":"43027:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33786,"name":"string","nodeType":"ElementaryTypeName","src":"43027:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33789,"mutability":"mutable","name":"value","nameLocation":"43061:5:89","nodeType":"VariableDeclaration","scope":33794,"src":"43053:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33788,"name":"uint256","nodeType":"ElementaryTypeName","src":"43053:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42999:68:89"},"returnParameters":{"id":33793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33792,"mutability":"mutable","name":"json","nameLocation":"43116:4:89","nodeType":"VariableDeclaration","scope":33794,"src":"43102:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33791,"name":"string","nodeType":"ElementaryTypeName","src":"43102:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43101:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33806,"nodeType":"FunctionDefinition","src":"43157:145:89","nodes":[],"documentation":{"id":33795,"nodeType":"StructuredDocumentation","src":"43128:24:89","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"43166:13:89","parameters":{"id":33802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33797,"mutability":"mutable","name":"objectKey","nameLocation":"43196:9:89","nodeType":"VariableDeclaration","scope":33806,"src":"43180:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33796,"name":"string","nodeType":"ElementaryTypeName","src":"43180:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33799,"mutability":"mutable","name":"valueKey","nameLocation":"43223:8:89","nodeType":"VariableDeclaration","scope":33806,"src":"43207:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33798,"name":"string","nodeType":"ElementaryTypeName","src":"43207:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33801,"mutability":"mutable","name":"value","nameLocation":"43241:5:89","nodeType":"VariableDeclaration","scope":33806,"src":"43233:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33800,"name":"uint256","nodeType":"ElementaryTypeName","src":"43233:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43179:68:89"},"returnParameters":{"id":33805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33804,"mutability":"mutable","name":"json","nameLocation":"43296:4:89","nodeType":"VariableDeclaration","scope":33806,"src":"43282:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33803,"name":"string","nodeType":"ElementaryTypeName","src":"43282:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43281:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33819,"nodeType":"FunctionDefinition","src":"43337:157:89","nodes":[],"documentation":{"id":33807,"nodeType":"StructuredDocumentation","src":"43308:24:89","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"43346:13:89","parameters":{"id":33815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33809,"mutability":"mutable","name":"objectKey","nameLocation":"43376:9:89","nodeType":"VariableDeclaration","scope":33819,"src":"43360:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33808,"name":"string","nodeType":"ElementaryTypeName","src":"43360:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33811,"mutability":"mutable","name":"valueKey","nameLocation":"43403:8:89","nodeType":"VariableDeclaration","scope":33819,"src":"43387:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33810,"name":"string","nodeType":"ElementaryTypeName","src":"43387:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33814,"mutability":"mutable","name":"values","nameLocation":"43432:6:89","nodeType":"VariableDeclaration","scope":33819,"src":"43413:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33812,"name":"uint256","nodeType":"ElementaryTypeName","src":"43413:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":33813,"nodeType":"ArrayTypeName","src":"43413:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"43359:80:89"},"returnParameters":{"id":33818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33817,"mutability":"mutable","name":"json","nameLocation":"43488:4:89","nodeType":"VariableDeclaration","scope":33819,"src":"43474:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33816,"name":"string","nodeType":"ElementaryTypeName","src":"43474:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43473:20:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33827,"nodeType":"FunctionDefinition","src":"43594:72:89","nodes":[],"documentation":{"id":33820,"nodeType":"StructuredDocumentation","src":"43500:89:89","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43603:9:89","parameters":{"id":33825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33822,"mutability":"mutable","name":"json","nameLocation":"43629:4:89","nodeType":"VariableDeclaration","scope":33827,"src":"43613:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33821,"name":"string","nodeType":"ElementaryTypeName","src":"43613:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33824,"mutability":"mutable","name":"path","nameLocation":"43651:4:89","nodeType":"VariableDeclaration","scope":33827,"src":"43635:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33823,"name":"string","nodeType":"ElementaryTypeName","src":"43635:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43612:44:89"},"returnParameters":{"id":33826,"nodeType":"ParameterList","parameters":[],"src":"43665:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33837,"nodeType":"FunctionDefinition","src":"43892:98:89","nodes":[],"documentation":{"id":33828,"nodeType":"StructuredDocumentation","src":"43672:215:89","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43901:9:89","parameters":{"id":33835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33830,"mutability":"mutable","name":"json","nameLocation":"43927:4:89","nodeType":"VariableDeclaration","scope":33837,"src":"43911:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33829,"name":"string","nodeType":"ElementaryTypeName","src":"43911:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33832,"mutability":"mutable","name":"path","nameLocation":"43949:4:89","nodeType":"VariableDeclaration","scope":33837,"src":"43933:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33831,"name":"string","nodeType":"ElementaryTypeName","src":"43933:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33834,"mutability":"mutable","name":"valueKey","nameLocation":"43971:8:89","nodeType":"VariableDeclaration","scope":33837,"src":"43955:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33833,"name":"string","nodeType":"ElementaryTypeName","src":"43955:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43910:70:89"},"returnParameters":{"id":33836,"nodeType":"ParameterList","parameters":[],"src":"43989:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33847,"nodeType":"FunctionDefinition","src":"44152:91:89","nodes":[],"documentation":{"id":33838,"nodeType":"StructuredDocumentation","src":"43996:151:89","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"44161:9:89","parameters":{"id":33843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33840,"mutability":"mutable","name":"json","nameLocation":"44187:4:89","nodeType":"VariableDeclaration","scope":33847,"src":"44171:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33839,"name":"string","nodeType":"ElementaryTypeName","src":"44171:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33842,"mutability":"mutable","name":"key","nameLocation":"44209:3:89","nodeType":"VariableDeclaration","scope":33847,"src":"44193:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33841,"name":"string","nodeType":"ElementaryTypeName","src":"44193:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44170:43:89"},"returnParameters":{"id":33846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33847,"src":"44237:4:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33844,"name":"bool","nodeType":"ElementaryTypeName","src":"44237:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"44236:6:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33853,"nodeType":"FunctionDefinition","src":"44354:63:89","nodes":[],"documentation":{"id":33848,"nodeType":"StructuredDocumentation","src":"44285:64:89","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"44363:23:89","parameters":{"id":33851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33850,"mutability":"mutable","name":"data","nameLocation":"44402:4:89","nodeType":"VariableDeclaration","scope":33853,"src":"44387:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33849,"name":"bytes","nodeType":"ElementaryTypeName","src":"44387:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44386:21:89"},"returnParameters":{"id":33852,"nodeType":"ParameterList","parameters":[],"src":"44416:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33857,"nodeType":"FunctionDefinition","src":"44920:30:89","nodes":[],"documentation":{"id":33854,"nodeType":"StructuredDocumentation","src":"44423:492:89","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44929:9:89","parameters":{"id":33855,"nodeType":"ParameterList","parameters":[],"src":"44938:2:89"},"returnParameters":{"id":33856,"nodeType":"ParameterList","parameters":[],"src":"44949:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33863,"nodeType":"FunctionDefinition","src":"45120:44:89","nodes":[],"documentation":{"id":33858,"nodeType":"StructuredDocumentation","src":"44956:159:89","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"45129:9:89","parameters":{"id":33861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33860,"mutability":"mutable","name":"signer","nameLocation":"45147:6:89","nodeType":"VariableDeclaration","scope":33863,"src":"45139:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33859,"name":"address","nodeType":"ElementaryTypeName","src":"45139:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"45138:16:89"},"returnParameters":{"id":33862,"nodeType":"ParameterList","parameters":[],"src":"45163:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33869,"nodeType":"FunctionDefinition","src":"45338:48:89","nodes":[],"documentation":{"id":33864,"nodeType":"StructuredDocumentation","src":"45170:163:89","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"45347:9:89","parameters":{"id":33867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33866,"mutability":"mutable","name":"privateKey","nameLocation":"45365:10:89","nodeType":"VariableDeclaration","scope":33869,"src":"45357:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33865,"name":"uint256","nodeType":"ElementaryTypeName","src":"45357:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45356:20:89"},"returnParameters":{"id":33868,"nodeType":"ParameterList","parameters":[],"src":"45385:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33873,"nodeType":"FunctionDefinition","src":"45896:35:89","nodes":[],"documentation":{"id":33870,"nodeType":"StructuredDocumentation","src":"45392:499:89","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45905:14:89","parameters":{"id":33871,"nodeType":"ParameterList","parameters":[],"src":"45919:2:89"},"returnParameters":{"id":33872,"nodeType":"ParameterList","parameters":[],"src":"45930:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33879,"nodeType":"FunctionDefinition","src":"46093:49:89","nodes":[],"documentation":{"id":33874,"nodeType":"StructuredDocumentation","src":"45937:151:89","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"46102:14:89","parameters":{"id":33877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33876,"mutability":"mutable","name":"signer","nameLocation":"46125:6:89","nodeType":"VariableDeclaration","scope":33879,"src":"46117:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33875,"name":"address","nodeType":"ElementaryTypeName","src":"46117:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46116:16:89"},"returnParameters":{"id":33878,"nodeType":"ParameterList","parameters":[],"src":"46141:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33885,"nodeType":"FunctionDefinition","src":"46308:53:89","nodes":[],"documentation":{"id":33880,"nodeType":"StructuredDocumentation","src":"46148:155:89","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"46317:14:89","parameters":{"id":33883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33882,"mutability":"mutable","name":"privateKey","nameLocation":"46340:10:89","nodeType":"VariableDeclaration","scope":33885,"src":"46332:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33881,"name":"uint256","nodeType":"ElementaryTypeName","src":"46332:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46331:20:89"},"returnParameters":{"id":33884,"nodeType":"ParameterList","parameters":[],"src":"46360:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33889,"nodeType":"FunctionDefinition","src":"46414:34:89","nodes":[],"documentation":{"id":33886,"nodeType":"StructuredDocumentation","src":"46367:42:89","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"46423:13:89","parameters":{"id":33887,"nodeType":"ParameterList","parameters":[],"src":"46436:2:89"},"returnParameters":{"id":33888,"nodeType":"ParameterList","parameters":[],"src":"46447:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33899,"nodeType":"FunctionDefinition","src":"46697:93:89","nodes":[],"documentation":{"id":33890,"nodeType":"StructuredDocumentation","src":"46487:205:89","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"46706:7:89","parameters":{"id":33895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33892,"mutability":"mutable","name":"input","nameLocation":"46730:5:89","nodeType":"VariableDeclaration","scope":33899,"src":"46714:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33891,"name":"string","nodeType":"ElementaryTypeName","src":"46714:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33894,"mutability":"mutable","name":"key","nameLocation":"46753:3:89","nodeType":"VariableDeclaration","scope":33899,"src":"46737:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33893,"name":"string","nodeType":"ElementaryTypeName","src":"46737:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46713:44:89"},"returnParameters":{"id":33898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33899,"src":"46781:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33896,"name":"uint256","nodeType":"ElementaryTypeName","src":"46781:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46780:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33907,"nodeType":"FunctionDefinition","src":"46849:100:89","nodes":[],"documentation":{"id":33900,"nodeType":"StructuredDocumentation","src":"46796:48:89","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"46858:12:89","parameters":{"id":33903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33902,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46887:16:89","nodeType":"VariableDeclaration","scope":33907,"src":"46871:32:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33901,"name":"string","nodeType":"ElementaryTypeName","src":"46871:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46870:34:89"},"returnParameters":{"id":33906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33905,"mutability":"mutable","name":"parsedValue","nameLocation":"46936:11:89","nodeType":"VariableDeclaration","scope":33907,"src":"46928:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33904,"name":"address","nodeType":"ElementaryTypeName","src":"46928:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46927:21:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33915,"nodeType":"FunctionDefinition","src":"47004:94:89","nodes":[],"documentation":{"id":33908,"nodeType":"StructuredDocumentation","src":"46955:44:89","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"47013:9:89","parameters":{"id":33911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33910,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47039:16:89","nodeType":"VariableDeclaration","scope":33915,"src":"47023:32:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33909,"name":"string","nodeType":"ElementaryTypeName","src":"47023:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47022:34:89"},"returnParameters":{"id":33914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33913,"mutability":"mutable","name":"parsedValue","nameLocation":"47085:11:89","nodeType":"VariableDeclaration","scope":33915,"src":"47080:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33912,"name":"bool","nodeType":"ElementaryTypeName","src":"47080:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"47079:18:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33923,"nodeType":"FunctionDefinition","src":"47152:103:89","nodes":[],"documentation":{"id":33916,"nodeType":"StructuredDocumentation","src":"47104:43:89","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"47161:10:89","parameters":{"id":33919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33918,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47188:16:89","nodeType":"VariableDeclaration","scope":33923,"src":"47172:32:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33917,"name":"string","nodeType":"ElementaryTypeName","src":"47172:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47171:34:89"},"returnParameters":{"id":33922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33921,"mutability":"mutable","name":"parsedValue","nameLocation":"47242:11:89","nodeType":"VariableDeclaration","scope":33923,"src":"47229:24:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33920,"name":"bytes","nodeType":"ElementaryTypeName","src":"47229:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47228:26:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33931,"nodeType":"FunctionDefinition","src":"47313:100:89","nodes":[],"documentation":{"id":33924,"nodeType":"StructuredDocumentation","src":"47261:47:89","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"47322:12:89","parameters":{"id":33927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33926,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47351:16:89","nodeType":"VariableDeclaration","scope":33931,"src":"47335:32:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33925,"name":"string","nodeType":"ElementaryTypeName","src":"47335:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47334:34:89"},"returnParameters":{"id":33930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33929,"mutability":"mutable","name":"parsedValue","nameLocation":"47400:11:89","nodeType":"VariableDeclaration","scope":33931,"src":"47392:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":33928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47392:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47391:21:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33939,"nodeType":"FunctionDefinition","src":"47470:95:89","nodes":[],"documentation":{"id":33932,"nodeType":"StructuredDocumentation","src":"47419:46:89","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"47479:8:89","parameters":{"id":33935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33934,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47504:16:89","nodeType":"VariableDeclaration","scope":33939,"src":"47488:32:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33933,"name":"string","nodeType":"ElementaryTypeName","src":"47488:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47487:34:89"},"returnParameters":{"id":33938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33937,"mutability":"mutable","name":"parsedValue","nameLocation":"47552:11:89","nodeType":"VariableDeclaration","scope":33939,"src":"47545:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":33936,"name":"int256","nodeType":"ElementaryTypeName","src":"47545:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"47544:20:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33947,"nodeType":"FunctionDefinition","src":"47623:97:89","nodes":[],"documentation":{"id":33940,"nodeType":"StructuredDocumentation","src":"47571:47:89","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"47632:9:89","parameters":{"id":33943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33942,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47658:16:89","nodeType":"VariableDeclaration","scope":33947,"src":"47642:32:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33941,"name":"string","nodeType":"ElementaryTypeName","src":"47642:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47641:34:89"},"returnParameters":{"id":33946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33945,"mutability":"mutable","name":"parsedValue","nameLocation":"47707:11:89","nodeType":"VariableDeclaration","scope":33947,"src":"47699:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33944,"name":"uint256","nodeType":"ElementaryTypeName","src":"47699:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47698:21:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33959,"nodeType":"FunctionDefinition","src":"47798:151:89","nodes":[],"documentation":{"id":33948,"nodeType":"StructuredDocumentation","src":"47726:67:89","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"47807:7:89","parameters":{"id":33955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33950,"mutability":"mutable","name":"input","nameLocation":"47831:5:89","nodeType":"VariableDeclaration","scope":33959,"src":"47815:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33949,"name":"string","nodeType":"ElementaryTypeName","src":"47815:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33952,"mutability":"mutable","name":"from","nameLocation":"47854:4:89","nodeType":"VariableDeclaration","scope":33959,"src":"47838:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33951,"name":"string","nodeType":"ElementaryTypeName","src":"47838:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33954,"mutability":"mutable","name":"to","nameLocation":"47876:2:89","nodeType":"VariableDeclaration","scope":33959,"src":"47860:18:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33953,"name":"string","nodeType":"ElementaryTypeName","src":"47860:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47814:65:89"},"returnParameters":{"id":33958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33957,"mutability":"mutable","name":"output","nameLocation":"47941:6:89","nodeType":"VariableDeclaration","scope":33959,"src":"47927:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33956,"name":"string","nodeType":"ElementaryTypeName","src":"47927:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47926:22:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33970,"nodeType":"FunctionDefinition","src":"48042:113:89","nodes":[],"documentation":{"id":33960,"nodeType":"StructuredDocumentation","src":"47955:82:89","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"48051:5:89","parameters":{"id":33965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33962,"mutability":"mutable","name":"input","nameLocation":"48073:5:89","nodeType":"VariableDeclaration","scope":33970,"src":"48057:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33961,"name":"string","nodeType":"ElementaryTypeName","src":"48057:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33964,"mutability":"mutable","name":"delimiter","nameLocation":"48096:9:89","nodeType":"VariableDeclaration","scope":33970,"src":"48080:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33963,"name":"string","nodeType":"ElementaryTypeName","src":"48080:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48056:50:89"},"returnParameters":{"id":33969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33968,"mutability":"mutable","name":"outputs","nameLocation":"48146:7:89","nodeType":"VariableDeclaration","scope":33970,"src":"48130:23:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":33966,"name":"string","nodeType":"ElementaryTypeName","src":"48130:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":33967,"nodeType":"ArrayTypeName","src":"48130:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"48129:25:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33978,"nodeType":"FunctionDefinition","src":"48217:89:89","nodes":[],"documentation":{"id":33971,"nodeType":"StructuredDocumentation","src":"48161:51:89","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"48226:11:89","parameters":{"id":33974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33973,"mutability":"mutable","name":"input","nameLocation":"48254:5:89","nodeType":"VariableDeclaration","scope":33978,"src":"48238:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33972,"name":"string","nodeType":"ElementaryTypeName","src":"48238:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48237:23:89"},"returnParameters":{"id":33977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33976,"mutability":"mutable","name":"output","nameLocation":"48298:6:89","nodeType":"VariableDeclaration","scope":33978,"src":"48284:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33975,"name":"string","nodeType":"ElementaryTypeName","src":"48284:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48283:22:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33986,"nodeType":"FunctionDefinition","src":"48360:88:89","nodes":[],"documentation":{"id":33979,"nodeType":"StructuredDocumentation","src":"48312:43:89","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48369:8:89","parameters":{"id":33982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33981,"mutability":"mutable","name":"value","nameLocation":"48386:5:89","nodeType":"VariableDeclaration","scope":33986,"src":"48378:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33980,"name":"address","nodeType":"ElementaryTypeName","src":"48378:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"48377:15:89"},"returnParameters":{"id":33985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33984,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48430:16:89","nodeType":"VariableDeclaration","scope":33986,"src":"48416:30:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33983,"name":"string","nodeType":"ElementaryTypeName","src":"48416:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48415:32:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":33994,"nodeType":"FunctionDefinition","src":"48502:95:89","nodes":[],"documentation":{"id":33987,"nodeType":"StructuredDocumentation","src":"48454:43:89","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48511:8:89","parameters":{"id":33990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33989,"mutability":"mutable","name":"value","nameLocation":"48535:5:89","nodeType":"VariableDeclaration","scope":33994,"src":"48520:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33988,"name":"bytes","nodeType":"ElementaryTypeName","src":"48520:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48519:22:89"},"returnParameters":{"id":33993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33992,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48579:16:89","nodeType":"VariableDeclaration","scope":33994,"src":"48565:30:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33991,"name":"string","nodeType":"ElementaryTypeName","src":"48565:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48564:32:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34002,"nodeType":"FunctionDefinition","src":"48651:88:89","nodes":[],"documentation":{"id":33995,"nodeType":"StructuredDocumentation","src":"48603:43:89","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48660:8:89","parameters":{"id":33998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33997,"mutability":"mutable","name":"value","nameLocation":"48677:5:89","nodeType":"VariableDeclaration","scope":34002,"src":"48669:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":33996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48669:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48668:15:89"},"returnParameters":{"id":34001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34000,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48721:16:89","nodeType":"VariableDeclaration","scope":34002,"src":"48707:30:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33999,"name":"string","nodeType":"ElementaryTypeName","src":"48707:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48706:32:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34010,"nodeType":"FunctionDefinition","src":"48793:85:89","nodes":[],"documentation":{"id":34003,"nodeType":"StructuredDocumentation","src":"48745:43:89","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48802:8:89","parameters":{"id":34006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34005,"mutability":"mutable","name":"value","nameLocation":"48816:5:89","nodeType":"VariableDeclaration","scope":34010,"src":"48811:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34004,"name":"bool","nodeType":"ElementaryTypeName","src":"48811:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48810:12:89"},"returnParameters":{"id":34009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34008,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48860:16:89","nodeType":"VariableDeclaration","scope":34010,"src":"48846:30:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34007,"name":"string","nodeType":"ElementaryTypeName","src":"48846:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48845:32:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34018,"nodeType":"FunctionDefinition","src":"48932:88:89","nodes":[],"documentation":{"id":34011,"nodeType":"StructuredDocumentation","src":"48884:43:89","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48941:8:89","parameters":{"id":34014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34013,"mutability":"mutable","name":"value","nameLocation":"48958:5:89","nodeType":"VariableDeclaration","scope":34018,"src":"48950:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34012,"name":"uint256","nodeType":"ElementaryTypeName","src":"48950:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48949:15:89"},"returnParameters":{"id":34017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34016,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49002:16:89","nodeType":"VariableDeclaration","scope":34018,"src":"48988:30:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34015,"name":"string","nodeType":"ElementaryTypeName","src":"48988:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48987:32:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34026,"nodeType":"FunctionDefinition","src":"49074:87:89","nodes":[],"documentation":{"id":34019,"nodeType":"StructuredDocumentation","src":"49026:43:89","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"49083:8:89","parameters":{"id":34022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34021,"mutability":"mutable","name":"value","nameLocation":"49099:5:89","nodeType":"VariableDeclaration","scope":34026,"src":"49092:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34020,"name":"int256","nodeType":"ElementaryTypeName","src":"49092:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"49091:14:89"},"returnParameters":{"id":34025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34024,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49143:16:89","nodeType":"VariableDeclaration","scope":34026,"src":"49129:30:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34023,"name":"string","nodeType":"ElementaryTypeName","src":"49129:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49128:32:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34034,"nodeType":"FunctionDefinition","src":"49223:89:89","nodes":[],"documentation":{"id":34027,"nodeType":"StructuredDocumentation","src":"49167:51:89","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"49232:11:89","parameters":{"id":34030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34029,"mutability":"mutable","name":"input","nameLocation":"49260:5:89","nodeType":"VariableDeclaration","scope":34034,"src":"49244:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34028,"name":"string","nodeType":"ElementaryTypeName","src":"49244:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49243:23:89"},"returnParameters":{"id":34033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34032,"mutability":"mutable","name":"output","nameLocation":"49304:6:89","nodeType":"VariableDeclaration","scope":34034,"src":"49290:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34031,"name":"string","nodeType":"ElementaryTypeName","src":"49290:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49289:22:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34042,"nodeType":"FunctionDefinition","src":"49395:82:89","nodes":[],"documentation":{"id":34035,"nodeType":"StructuredDocumentation","src":"49318:72:89","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"49404:4:89","parameters":{"id":34038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34037,"mutability":"mutable","name":"input","nameLocation":"49425:5:89","nodeType":"VariableDeclaration","scope":34042,"src":"49409:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34036,"name":"string","nodeType":"ElementaryTypeName","src":"49409:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49408:23:89"},"returnParameters":{"id":34041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34040,"mutability":"mutable","name":"output","nameLocation":"49469:6:89","nodeType":"VariableDeclaration","scope":34042,"src":"49455:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34039,"name":"string","nodeType":"ElementaryTypeName","src":"49455:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49454:22:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34054,"nodeType":"FunctionDefinition","src":"49672:113:89","nodes":[],"documentation":{"id":34043,"nodeType":"StructuredDocumentation","src":"49517:150:89","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49681:24:89","parameters":{"id":34052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34045,"mutability":"mutable","name":"left","nameLocation":"49714:4:89","nodeType":"VariableDeclaration","scope":34054,"src":"49706:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34044,"name":"uint256","nodeType":"ElementaryTypeName","src":"49706:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34047,"mutability":"mutable","name":"right","nameLocation":"49728:5:89","nodeType":"VariableDeclaration","scope":34054,"src":"49720:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34046,"name":"uint256","nodeType":"ElementaryTypeName","src":"49720:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34049,"mutability":"mutable","name":"maxDelta","nameLocation":"49743:8:89","nodeType":"VariableDeclaration","scope":34054,"src":"49735:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34048,"name":"uint256","nodeType":"ElementaryTypeName","src":"49735:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34051,"mutability":"mutable","name":"decimals","nameLocation":"49761:8:89","nodeType":"VariableDeclaration","scope":34054,"src":"49753:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34050,"name":"uint256","nodeType":"ElementaryTypeName","src":"49753:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49705:65:89"},"returnParameters":{"id":34053,"nodeType":"ParameterList","parameters":[],"src":"49784:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34068,"nodeType":"FunctionDefinition","src":"50000:182:89","nodes":[],"documentation":{"id":34055,"nodeType":"StructuredDocumentation","src":"49791:204:89","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50009:24:89","parameters":{"id":34066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34057,"mutability":"mutable","name":"left","nameLocation":"50051:4:89","nodeType":"VariableDeclaration","scope":34068,"src":"50043:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34056,"name":"uint256","nodeType":"ElementaryTypeName","src":"50043:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34059,"mutability":"mutable","name":"right","nameLocation":"50073:5:89","nodeType":"VariableDeclaration","scope":34068,"src":"50065:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34058,"name":"uint256","nodeType":"ElementaryTypeName","src":"50065:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34061,"mutability":"mutable","name":"maxDelta","nameLocation":"50096:8:89","nodeType":"VariableDeclaration","scope":34068,"src":"50088:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34060,"name":"uint256","nodeType":"ElementaryTypeName","src":"50088:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34063,"mutability":"mutable","name":"decimals","nameLocation":"50122:8:89","nodeType":"VariableDeclaration","scope":34068,"src":"50114:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34062,"name":"uint256","nodeType":"ElementaryTypeName","src":"50114:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34065,"mutability":"mutable","name":"error","nameLocation":"50156:5:89","nodeType":"VariableDeclaration","scope":34068,"src":"50140:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34064,"name":"string","nodeType":"ElementaryTypeName","src":"50140:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50033:134:89"},"returnParameters":{"id":34067,"nodeType":"ParameterList","parameters":[],"src":"50181:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34080,"nodeType":"FunctionDefinition","src":"50342:111:89","nodes":[],"documentation":{"id":34069,"nodeType":"StructuredDocumentation","src":"50188:149:89","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50351:24:89","parameters":{"id":34078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34071,"mutability":"mutable","name":"left","nameLocation":"50383:4:89","nodeType":"VariableDeclaration","scope":34080,"src":"50376:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34070,"name":"int256","nodeType":"ElementaryTypeName","src":"50376:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34073,"mutability":"mutable","name":"right","nameLocation":"50396:5:89","nodeType":"VariableDeclaration","scope":34080,"src":"50389:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34072,"name":"int256","nodeType":"ElementaryTypeName","src":"50389:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34075,"mutability":"mutable","name":"maxDelta","nameLocation":"50411:8:89","nodeType":"VariableDeclaration","scope":34080,"src":"50403:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34074,"name":"uint256","nodeType":"ElementaryTypeName","src":"50403:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34077,"mutability":"mutable","name":"decimals","nameLocation":"50429:8:89","nodeType":"VariableDeclaration","scope":34080,"src":"50421:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34076,"name":"uint256","nodeType":"ElementaryTypeName","src":"50421:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50375:63:89"},"returnParameters":{"id":34079,"nodeType":"ParameterList","parameters":[],"src":"50452:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34094,"nodeType":"FunctionDefinition","src":"50667:180:89","nodes":[],"documentation":{"id":34081,"nodeType":"StructuredDocumentation","src":"50459:203:89","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50676:24:89","parameters":{"id":34092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34083,"mutability":"mutable","name":"left","nameLocation":"50717:4:89","nodeType":"VariableDeclaration","scope":34094,"src":"50710:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34082,"name":"int256","nodeType":"ElementaryTypeName","src":"50710:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34085,"mutability":"mutable","name":"right","nameLocation":"50738:5:89","nodeType":"VariableDeclaration","scope":34094,"src":"50731:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34084,"name":"int256","nodeType":"ElementaryTypeName","src":"50731:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34087,"mutability":"mutable","name":"maxDelta","nameLocation":"50761:8:89","nodeType":"VariableDeclaration","scope":34094,"src":"50753:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34086,"name":"uint256","nodeType":"ElementaryTypeName","src":"50753:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34089,"mutability":"mutable","name":"decimals","nameLocation":"50787:8:89","nodeType":"VariableDeclaration","scope":34094,"src":"50779:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34088,"name":"uint256","nodeType":"ElementaryTypeName","src":"50779:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34091,"mutability":"mutable","name":"error","nameLocation":"50821:5:89","nodeType":"VariableDeclaration","scope":34094,"src":"50805:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34090,"name":"string","nodeType":"ElementaryTypeName","src":"50805:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50700:132:89"},"returnParameters":{"id":34093,"nodeType":"ParameterList","parameters":[],"src":"50846:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34104,"nodeType":"FunctionDefinition","src":"50951:88:89","nodes":[],"documentation":{"id":34095,"nodeType":"StructuredDocumentation","src":"50853:93:89","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50960:17:89","parameters":{"id":34102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34097,"mutability":"mutable","name":"left","nameLocation":"50986:4:89","nodeType":"VariableDeclaration","scope":34104,"src":"50978:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34096,"name":"uint256","nodeType":"ElementaryTypeName","src":"50978:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34099,"mutability":"mutable","name":"right","nameLocation":"51000:5:89","nodeType":"VariableDeclaration","scope":34104,"src":"50992:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34098,"name":"uint256","nodeType":"ElementaryTypeName","src":"50992:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34101,"mutability":"mutable","name":"maxDelta","nameLocation":"51015:8:89","nodeType":"VariableDeclaration","scope":34104,"src":"51007:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34100,"name":"uint256","nodeType":"ElementaryTypeName","src":"51007:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50977:47:89"},"returnParameters":{"id":34103,"nodeType":"ParameterList","parameters":[],"src":"51038:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34116,"nodeType":"FunctionDefinition","src":"51205:111:89","nodes":[],"documentation":{"id":34105,"nodeType":"StructuredDocumentation","src":"51045:155:89","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51214:17:89","parameters":{"id":34114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34107,"mutability":"mutable","name":"left","nameLocation":"51240:4:89","nodeType":"VariableDeclaration","scope":34116,"src":"51232:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34106,"name":"uint256","nodeType":"ElementaryTypeName","src":"51232:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34109,"mutability":"mutable","name":"right","nameLocation":"51254:5:89","nodeType":"VariableDeclaration","scope":34116,"src":"51246:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34108,"name":"uint256","nodeType":"ElementaryTypeName","src":"51246:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34111,"mutability":"mutable","name":"maxDelta","nameLocation":"51269:8:89","nodeType":"VariableDeclaration","scope":34116,"src":"51261:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34110,"name":"uint256","nodeType":"ElementaryTypeName","src":"51261:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34113,"mutability":"mutable","name":"error","nameLocation":"51295:5:89","nodeType":"VariableDeclaration","scope":34116,"src":"51279:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34112,"name":"string","nodeType":"ElementaryTypeName","src":"51279:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51231:70:89"},"returnParameters":{"id":34115,"nodeType":"ParameterList","parameters":[],"src":"51315:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34126,"nodeType":"FunctionDefinition","src":"51419:86:89","nodes":[],"documentation":{"id":34117,"nodeType":"StructuredDocumentation","src":"51322:92:89","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51428:17:89","parameters":{"id":34124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34119,"mutability":"mutable","name":"left","nameLocation":"51453:4:89","nodeType":"VariableDeclaration","scope":34126,"src":"51446:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34118,"name":"int256","nodeType":"ElementaryTypeName","src":"51446:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34121,"mutability":"mutable","name":"right","nameLocation":"51466:5:89","nodeType":"VariableDeclaration","scope":34126,"src":"51459:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34120,"name":"int256","nodeType":"ElementaryTypeName","src":"51459:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34123,"mutability":"mutable","name":"maxDelta","nameLocation":"51481:8:89","nodeType":"VariableDeclaration","scope":34126,"src":"51473:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34122,"name":"uint256","nodeType":"ElementaryTypeName","src":"51473:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51445:45:89"},"returnParameters":{"id":34125,"nodeType":"ParameterList","parameters":[],"src":"51504:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34138,"nodeType":"FunctionDefinition","src":"51670:109:89","nodes":[],"documentation":{"id":34127,"nodeType":"StructuredDocumentation","src":"51511:154:89","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51679:17:89","parameters":{"id":34136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34129,"mutability":"mutable","name":"left","nameLocation":"51704:4:89","nodeType":"VariableDeclaration","scope":34138,"src":"51697:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34128,"name":"int256","nodeType":"ElementaryTypeName","src":"51697:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34131,"mutability":"mutable","name":"right","nameLocation":"51717:5:89","nodeType":"VariableDeclaration","scope":34138,"src":"51710:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34130,"name":"int256","nodeType":"ElementaryTypeName","src":"51710:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34133,"mutability":"mutable","name":"maxDelta","nameLocation":"51732:8:89","nodeType":"VariableDeclaration","scope":34138,"src":"51724:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34132,"name":"uint256","nodeType":"ElementaryTypeName","src":"51724:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34135,"mutability":"mutable","name":"error","nameLocation":"51758:5:89","nodeType":"VariableDeclaration","scope":34138,"src":"51742:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34134,"name":"string","nodeType":"ElementaryTypeName","src":"51742:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51696:68:89"},"returnParameters":{"id":34137,"nodeType":"ParameterList","parameters":[],"src":"51778:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34150,"nodeType":"FunctionDefinition","src":"52050:136:89","nodes":[],"documentation":{"id":34139,"nodeType":"StructuredDocumentation","src":"51785:260:89","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52059:24:89","parameters":{"id":34148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34141,"mutability":"mutable","name":"left","nameLocation":"52092:4:89","nodeType":"VariableDeclaration","scope":34150,"src":"52084:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34140,"name":"uint256","nodeType":"ElementaryTypeName","src":"52084:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34143,"mutability":"mutable","name":"right","nameLocation":"52106:5:89","nodeType":"VariableDeclaration","scope":34150,"src":"52098:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34142,"name":"uint256","nodeType":"ElementaryTypeName","src":"52098:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34145,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52121:15:89","nodeType":"VariableDeclaration","scope":34150,"src":"52113:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34144,"name":"uint256","nodeType":"ElementaryTypeName","src":"52113:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34147,"mutability":"mutable","name":"decimals","nameLocation":"52146:8:89","nodeType":"VariableDeclaration","scope":34150,"src":"52138:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34146,"name":"uint256","nodeType":"ElementaryTypeName","src":"52138:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52083:72:89"},"returnParameters":{"id":34149,"nodeType":"ParameterList","parameters":[],"src":"52185:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34164,"nodeType":"FunctionDefinition","src":"52511:189:89","nodes":[],"documentation":{"id":34151,"nodeType":"StructuredDocumentation","src":"52192:314:89","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52520:24:89","parameters":{"id":34162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34153,"mutability":"mutable","name":"left","nameLocation":"52562:4:89","nodeType":"VariableDeclaration","scope":34164,"src":"52554:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34152,"name":"uint256","nodeType":"ElementaryTypeName","src":"52554:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34155,"mutability":"mutable","name":"right","nameLocation":"52584:5:89","nodeType":"VariableDeclaration","scope":34164,"src":"52576:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34154,"name":"uint256","nodeType":"ElementaryTypeName","src":"52576:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34157,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52607:15:89","nodeType":"VariableDeclaration","scope":34164,"src":"52599:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34156,"name":"uint256","nodeType":"ElementaryTypeName","src":"52599:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34159,"mutability":"mutable","name":"decimals","nameLocation":"52640:8:89","nodeType":"VariableDeclaration","scope":34164,"src":"52632:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34158,"name":"uint256","nodeType":"ElementaryTypeName","src":"52632:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34161,"mutability":"mutable","name":"error","nameLocation":"52674:5:89","nodeType":"VariableDeclaration","scope":34164,"src":"52658:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34160,"name":"string","nodeType":"ElementaryTypeName","src":"52658:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52544:141:89"},"returnParameters":{"id":34163,"nodeType":"ParameterList","parameters":[],"src":"52699:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34176,"nodeType":"FunctionDefinition","src":"52970:134:89","nodes":[],"documentation":{"id":34165,"nodeType":"StructuredDocumentation","src":"52706:259:89","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52979:24:89","parameters":{"id":34174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34167,"mutability":"mutable","name":"left","nameLocation":"53011:4:89","nodeType":"VariableDeclaration","scope":34176,"src":"53004:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34166,"name":"int256","nodeType":"ElementaryTypeName","src":"53004:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34169,"mutability":"mutable","name":"right","nameLocation":"53024:5:89","nodeType":"VariableDeclaration","scope":34176,"src":"53017:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34168,"name":"int256","nodeType":"ElementaryTypeName","src":"53017:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34171,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53039:15:89","nodeType":"VariableDeclaration","scope":34176,"src":"53031:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34170,"name":"uint256","nodeType":"ElementaryTypeName","src":"53031:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34173,"mutability":"mutable","name":"decimals","nameLocation":"53064:8:89","nodeType":"VariableDeclaration","scope":34176,"src":"53056:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34172,"name":"uint256","nodeType":"ElementaryTypeName","src":"53056:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53003:70:89"},"returnParameters":{"id":34175,"nodeType":"ParameterList","parameters":[],"src":"53103:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34190,"nodeType":"FunctionDefinition","src":"53428:187:89","nodes":[],"documentation":{"id":34177,"nodeType":"StructuredDocumentation","src":"53110:313:89","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"53437:24:89","parameters":{"id":34188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34179,"mutability":"mutable","name":"left","nameLocation":"53478:4:89","nodeType":"VariableDeclaration","scope":34190,"src":"53471:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34178,"name":"int256","nodeType":"ElementaryTypeName","src":"53471:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34181,"mutability":"mutable","name":"right","nameLocation":"53499:5:89","nodeType":"VariableDeclaration","scope":34190,"src":"53492:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34180,"name":"int256","nodeType":"ElementaryTypeName","src":"53492:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34183,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53522:15:89","nodeType":"VariableDeclaration","scope":34190,"src":"53514:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34182,"name":"uint256","nodeType":"ElementaryTypeName","src":"53514:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34185,"mutability":"mutable","name":"decimals","nameLocation":"53555:8:89","nodeType":"VariableDeclaration","scope":34190,"src":"53547:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34184,"name":"uint256","nodeType":"ElementaryTypeName","src":"53547:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34187,"mutability":"mutable","name":"error","nameLocation":"53589:5:89","nodeType":"VariableDeclaration","scope":34190,"src":"53573:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34186,"name":"string","nodeType":"ElementaryTypeName","src":"53573:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53461:139:89"},"returnParameters":{"id":34189,"nodeType":"ParameterList","parameters":[],"src":"53614:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34200,"nodeType":"FunctionDefinition","src":"53829:95:89","nodes":[],"documentation":{"id":34191,"nodeType":"StructuredDocumentation","src":"53621:203:89","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53838:17:89","parameters":{"id":34198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34193,"mutability":"mutable","name":"left","nameLocation":"53864:4:89","nodeType":"VariableDeclaration","scope":34200,"src":"53856:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34192,"name":"uint256","nodeType":"ElementaryTypeName","src":"53856:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34195,"mutability":"mutable","name":"right","nameLocation":"53878:5:89","nodeType":"VariableDeclaration","scope":34200,"src":"53870:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34194,"name":"uint256","nodeType":"ElementaryTypeName","src":"53870:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34197,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53893:15:89","nodeType":"VariableDeclaration","scope":34200,"src":"53885:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34196,"name":"uint256","nodeType":"ElementaryTypeName","src":"53885:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53855:54:89"},"returnParameters":{"id":34199,"nodeType":"ParameterList","parameters":[],"src":"53923:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34212,"nodeType":"FunctionDefinition","src":"54200:134:89","nodes":[],"documentation":{"id":34201,"nodeType":"StructuredDocumentation","src":"53930:265:89","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54209:17:89","parameters":{"id":34210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34203,"mutability":"mutable","name":"left","nameLocation":"54235:4:89","nodeType":"VariableDeclaration","scope":34212,"src":"54227:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34202,"name":"uint256","nodeType":"ElementaryTypeName","src":"54227:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34205,"mutability":"mutable","name":"right","nameLocation":"54249:5:89","nodeType":"VariableDeclaration","scope":34212,"src":"54241:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34204,"name":"uint256","nodeType":"ElementaryTypeName","src":"54241:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34207,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54264:15:89","nodeType":"VariableDeclaration","scope":34212,"src":"54256:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34206,"name":"uint256","nodeType":"ElementaryTypeName","src":"54256:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34209,"mutability":"mutable","name":"error","nameLocation":"54297:5:89","nodeType":"VariableDeclaration","scope":34212,"src":"54281:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34208,"name":"string","nodeType":"ElementaryTypeName","src":"54281:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54226:77:89"},"returnParameters":{"id":34211,"nodeType":"ParameterList","parameters":[],"src":"54333:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34222,"nodeType":"FunctionDefinition","src":"54547:93:89","nodes":[],"documentation":{"id":34213,"nodeType":"StructuredDocumentation","src":"54340:202:89","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54556:17:89","parameters":{"id":34220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34215,"mutability":"mutable","name":"left","nameLocation":"54581:4:89","nodeType":"VariableDeclaration","scope":34222,"src":"54574:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34214,"name":"int256","nodeType":"ElementaryTypeName","src":"54574:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34217,"mutability":"mutable","name":"right","nameLocation":"54594:5:89","nodeType":"VariableDeclaration","scope":34222,"src":"54587:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34216,"name":"int256","nodeType":"ElementaryTypeName","src":"54587:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34219,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54609:15:89","nodeType":"VariableDeclaration","scope":34222,"src":"54601:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34218,"name":"uint256","nodeType":"ElementaryTypeName","src":"54601:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54573:52:89"},"returnParameters":{"id":34221,"nodeType":"ParameterList","parameters":[],"src":"54639:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34234,"nodeType":"FunctionDefinition","src":"54915:132:89","nodes":[],"documentation":{"id":34223,"nodeType":"StructuredDocumentation","src":"54646:264:89","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54924:17:89","parameters":{"id":34232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34225,"mutability":"mutable","name":"left","nameLocation":"54949:4:89","nodeType":"VariableDeclaration","scope":34234,"src":"54942:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34224,"name":"int256","nodeType":"ElementaryTypeName","src":"54942:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34227,"mutability":"mutable","name":"right","nameLocation":"54962:5:89","nodeType":"VariableDeclaration","scope":34234,"src":"54955:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34226,"name":"int256","nodeType":"ElementaryTypeName","src":"54955:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34229,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54977:15:89","nodeType":"VariableDeclaration","scope":34234,"src":"54969:23:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34228,"name":"uint256","nodeType":"ElementaryTypeName","src":"54969:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34231,"mutability":"mutable","name":"error","nameLocation":"55010:5:89","nodeType":"VariableDeclaration","scope":34234,"src":"54994:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34230,"name":"string","nodeType":"ElementaryTypeName","src":"54994:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54941:75:89"},"returnParameters":{"id":34233,"nodeType":"ParameterList","parameters":[],"src":"55046:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34244,"nodeType":"FunctionDefinition","src":"55156:86:89","nodes":[],"documentation":{"id":34235,"nodeType":"StructuredDocumentation","src":"55053:98:89","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55165:15:89","parameters":{"id":34242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34237,"mutability":"mutable","name":"left","nameLocation":"55189:4:89","nodeType":"VariableDeclaration","scope":34244,"src":"55181:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34236,"name":"uint256","nodeType":"ElementaryTypeName","src":"55181:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34239,"mutability":"mutable","name":"right","nameLocation":"55203:5:89","nodeType":"VariableDeclaration","scope":34244,"src":"55195:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34238,"name":"uint256","nodeType":"ElementaryTypeName","src":"55195:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34241,"mutability":"mutable","name":"decimals","nameLocation":"55218:8:89","nodeType":"VariableDeclaration","scope":34244,"src":"55210:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34240,"name":"uint256","nodeType":"ElementaryTypeName","src":"55210:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55180:47:89"},"returnParameters":{"id":34243,"nodeType":"ParameterList","parameters":[],"src":"55241:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34256,"nodeType":"FunctionDefinition","src":"55413:109:89","nodes":[],"documentation":{"id":34245,"nodeType":"StructuredDocumentation","src":"55248:160:89","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55422:15:89","parameters":{"id":34254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34247,"mutability":"mutable","name":"left","nameLocation":"55446:4:89","nodeType":"VariableDeclaration","scope":34256,"src":"55438:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34246,"name":"uint256","nodeType":"ElementaryTypeName","src":"55438:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34249,"mutability":"mutable","name":"right","nameLocation":"55460:5:89","nodeType":"VariableDeclaration","scope":34256,"src":"55452:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34248,"name":"uint256","nodeType":"ElementaryTypeName","src":"55452:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34251,"mutability":"mutable","name":"decimals","nameLocation":"55475:8:89","nodeType":"VariableDeclaration","scope":34256,"src":"55467:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34250,"name":"uint256","nodeType":"ElementaryTypeName","src":"55467:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34253,"mutability":"mutable","name":"error","nameLocation":"55501:5:89","nodeType":"VariableDeclaration","scope":34256,"src":"55485:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34252,"name":"string","nodeType":"ElementaryTypeName","src":"55485:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55437:70:89"},"returnParameters":{"id":34255,"nodeType":"ParameterList","parameters":[],"src":"55521:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34266,"nodeType":"FunctionDefinition","src":"55630:84:89","nodes":[],"documentation":{"id":34257,"nodeType":"StructuredDocumentation","src":"55528:97:89","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55639:15:89","parameters":{"id":34264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34259,"mutability":"mutable","name":"left","nameLocation":"55662:4:89","nodeType":"VariableDeclaration","scope":34266,"src":"55655:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34258,"name":"int256","nodeType":"ElementaryTypeName","src":"55655:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34261,"mutability":"mutable","name":"right","nameLocation":"55675:5:89","nodeType":"VariableDeclaration","scope":34266,"src":"55668:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34260,"name":"int256","nodeType":"ElementaryTypeName","src":"55668:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34263,"mutability":"mutable","name":"decimals","nameLocation":"55690:8:89","nodeType":"VariableDeclaration","scope":34266,"src":"55682:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34262,"name":"uint256","nodeType":"ElementaryTypeName","src":"55682:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55654:45:89"},"returnParameters":{"id":34265,"nodeType":"ParameterList","parameters":[],"src":"55713:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34278,"nodeType":"FunctionDefinition","src":"55884:107:89","nodes":[],"documentation":{"id":34267,"nodeType":"StructuredDocumentation","src":"55720:159:89","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55893:15:89","parameters":{"id":34276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34269,"mutability":"mutable","name":"left","nameLocation":"55916:4:89","nodeType":"VariableDeclaration","scope":34278,"src":"55909:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34268,"name":"int256","nodeType":"ElementaryTypeName","src":"55909:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34271,"mutability":"mutable","name":"right","nameLocation":"55929:5:89","nodeType":"VariableDeclaration","scope":34278,"src":"55922:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34270,"name":"int256","nodeType":"ElementaryTypeName","src":"55922:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34273,"mutability":"mutable","name":"decimals","nameLocation":"55944:8:89","nodeType":"VariableDeclaration","scope":34278,"src":"55936:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34272,"name":"uint256","nodeType":"ElementaryTypeName","src":"55936:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34275,"mutability":"mutable","name":"error","nameLocation":"55970:5:89","nodeType":"VariableDeclaration","scope":34278,"src":"55954:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34274,"name":"string","nodeType":"ElementaryTypeName","src":"55954:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55908:68:89"},"returnParameters":{"id":34277,"nodeType":"ParameterList","parameters":[],"src":"55990:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34286,"nodeType":"FunctionDefinition","src":"56047:55:89","nodes":[],"documentation":{"id":34279,"nodeType":"StructuredDocumentation","src":"55997:45:89","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56056:8:89","parameters":{"id":34284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34281,"mutability":"mutable","name":"left","nameLocation":"56070:4:89","nodeType":"VariableDeclaration","scope":34286,"src":"56065:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34280,"name":"bool","nodeType":"ElementaryTypeName","src":"56065:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34283,"mutability":"mutable","name":"right","nameLocation":"56081:5:89","nodeType":"VariableDeclaration","scope":34286,"src":"56076:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34282,"name":"bool","nodeType":"ElementaryTypeName","src":"56076:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"56064:23:89"},"returnParameters":{"id":34285,"nodeType":"ParameterList","parameters":[],"src":"56101:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34296,"nodeType":"FunctionDefinition","src":"56215:78:89","nodes":[],"documentation":{"id":34287,"nodeType":"StructuredDocumentation","src":"56108:102:89","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56224:8:89","parameters":{"id":34294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34289,"mutability":"mutable","name":"left","nameLocation":"56238:4:89","nodeType":"VariableDeclaration","scope":34296,"src":"56233:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34288,"name":"bool","nodeType":"ElementaryTypeName","src":"56233:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34291,"mutability":"mutable","name":"right","nameLocation":"56249:5:89","nodeType":"VariableDeclaration","scope":34296,"src":"56244:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34290,"name":"bool","nodeType":"ElementaryTypeName","src":"56244:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34293,"mutability":"mutable","name":"error","nameLocation":"56272:5:89","nodeType":"VariableDeclaration","scope":34296,"src":"56256:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34292,"name":"string","nodeType":"ElementaryTypeName","src":"56256:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56232:46:89"},"returnParameters":{"id":34295,"nodeType":"ParameterList","parameters":[],"src":"56292:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34304,"nodeType":"FunctionDefinition","src":"56351:77:89","nodes":[],"documentation":{"id":34297,"nodeType":"StructuredDocumentation","src":"56299:47:89","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56360:8:89","parameters":{"id":34302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34299,"mutability":"mutable","name":"left","nameLocation":"56385:4:89","nodeType":"VariableDeclaration","scope":34304,"src":"56369:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34298,"name":"string","nodeType":"ElementaryTypeName","src":"56369:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":34301,"mutability":"mutable","name":"right","nameLocation":"56407:5:89","nodeType":"VariableDeclaration","scope":34304,"src":"56391:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34300,"name":"string","nodeType":"ElementaryTypeName","src":"56391:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56368:45:89"},"returnParameters":{"id":34303,"nodeType":"ParameterList","parameters":[],"src":"56427:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34314,"nodeType":"FunctionDefinition","src":"56543:100:89","nodes":[],"documentation":{"id":34305,"nodeType":"StructuredDocumentation","src":"56434:104:89","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56552:8:89","parameters":{"id":34312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34307,"mutability":"mutable","name":"left","nameLocation":"56577:4:89","nodeType":"VariableDeclaration","scope":34314,"src":"56561:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34306,"name":"string","nodeType":"ElementaryTypeName","src":"56561:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":34309,"mutability":"mutable","name":"right","nameLocation":"56599:5:89","nodeType":"VariableDeclaration","scope":34314,"src":"56583:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34308,"name":"string","nodeType":"ElementaryTypeName","src":"56583:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":34311,"mutability":"mutable","name":"error","nameLocation":"56622:5:89","nodeType":"VariableDeclaration","scope":34314,"src":"56606:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34310,"name":"string","nodeType":"ElementaryTypeName","src":"56606:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56560:68:89"},"returnParameters":{"id":34313,"nodeType":"ParameterList","parameters":[],"src":"56642:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34322,"nodeType":"FunctionDefinition","src":"56700:75:89","nodes":[],"documentation":{"id":34315,"nodeType":"StructuredDocumentation","src":"56649:46:89","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56709:8:89","parameters":{"id":34320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34317,"mutability":"mutable","name":"left","nameLocation":"56733:4:89","nodeType":"VariableDeclaration","scope":34322,"src":"56718:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34316,"name":"bytes","nodeType":"ElementaryTypeName","src":"56718:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":34319,"mutability":"mutable","name":"right","nameLocation":"56754:5:89","nodeType":"VariableDeclaration","scope":34322,"src":"56739:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34318,"name":"bytes","nodeType":"ElementaryTypeName","src":"56739:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56717:43:89"},"returnParameters":{"id":34321,"nodeType":"ParameterList","parameters":[],"src":"56774:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34332,"nodeType":"FunctionDefinition","src":"56889:98:89","nodes":[],"documentation":{"id":34323,"nodeType":"StructuredDocumentation","src":"56781:103:89","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56898:8:89","parameters":{"id":34330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34325,"mutability":"mutable","name":"left","nameLocation":"56922:4:89","nodeType":"VariableDeclaration","scope":34332,"src":"56907:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34324,"name":"bytes","nodeType":"ElementaryTypeName","src":"56907:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":34327,"mutability":"mutable","name":"right","nameLocation":"56943:5:89","nodeType":"VariableDeclaration","scope":34332,"src":"56928:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34326,"name":"bytes","nodeType":"ElementaryTypeName","src":"56928:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":34329,"mutability":"mutable","name":"error","nameLocation":"56966:5:89","nodeType":"VariableDeclaration","scope":34332,"src":"56950:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34328,"name":"string","nodeType":"ElementaryTypeName","src":"56950:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56906:66:89"},"returnParameters":{"id":34331,"nodeType":"ParameterList","parameters":[],"src":"56986:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34342,"nodeType":"FunctionDefinition","src":"57053:77:89","nodes":[],"documentation":{"id":34333,"nodeType":"StructuredDocumentation","src":"56993:55:89","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57062:8:89","parameters":{"id":34340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34336,"mutability":"mutable","name":"left","nameLocation":"57087:4:89","nodeType":"VariableDeclaration","scope":34342,"src":"57071:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":34334,"name":"bool","nodeType":"ElementaryTypeName","src":"57071:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34335,"nodeType":"ArrayTypeName","src":"57071:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":34339,"mutability":"mutable","name":"right","nameLocation":"57109:5:89","nodeType":"VariableDeclaration","scope":34342,"src":"57093:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":34337,"name":"bool","nodeType":"ElementaryTypeName","src":"57093:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34338,"nodeType":"ArrayTypeName","src":"57093:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"57070:45:89"},"returnParameters":{"id":34341,"nodeType":"ParameterList","parameters":[],"src":"57129:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34354,"nodeType":"FunctionDefinition","src":"57253:100:89","nodes":[],"documentation":{"id":34343,"nodeType":"StructuredDocumentation","src":"57136:112:89","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57262:8:89","parameters":{"id":34352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34346,"mutability":"mutable","name":"left","nameLocation":"57287:4:89","nodeType":"VariableDeclaration","scope":34354,"src":"57271:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":34344,"name":"bool","nodeType":"ElementaryTypeName","src":"57271:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34345,"nodeType":"ArrayTypeName","src":"57271:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":34349,"mutability":"mutable","name":"right","nameLocation":"57309:5:89","nodeType":"VariableDeclaration","scope":34354,"src":"57293:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":34347,"name":"bool","nodeType":"ElementaryTypeName","src":"57293:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34348,"nodeType":"ArrayTypeName","src":"57293:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":34351,"mutability":"mutable","name":"error","nameLocation":"57332:5:89","nodeType":"VariableDeclaration","scope":34354,"src":"57316:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34350,"name":"string","nodeType":"ElementaryTypeName","src":"57316:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57270:68:89"},"returnParameters":{"id":34353,"nodeType":"ParameterList","parameters":[],"src":"57352:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34364,"nodeType":"FunctionDefinition","src":"57421:83:89","nodes":[],"documentation":{"id":34355,"nodeType":"StructuredDocumentation","src":"57359:57:89","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57430:8:89","parameters":{"id":34362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34358,"mutability":"mutable","name":"left","nameLocation":"57458:4:89","nodeType":"VariableDeclaration","scope":34364,"src":"57439:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":34356,"name":"uint256","nodeType":"ElementaryTypeName","src":"57439:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34357,"nodeType":"ArrayTypeName","src":"57439:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":34361,"mutability":"mutable","name":"right","nameLocation":"57483:5:89","nodeType":"VariableDeclaration","scope":34364,"src":"57464:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":34359,"name":"uint256","nodeType":"ElementaryTypeName","src":"57464:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34360,"nodeType":"ArrayTypeName","src":"57464:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"57438:51:89"},"returnParameters":{"id":34363,"nodeType":"ParameterList","parameters":[],"src":"57503:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34376,"nodeType":"FunctionDefinition","src":"57630:106:89","nodes":[],"documentation":{"id":34365,"nodeType":"StructuredDocumentation","src":"57510:115:89","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57639:8:89","parameters":{"id":34374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34368,"mutability":"mutable","name":"left","nameLocation":"57667:4:89","nodeType":"VariableDeclaration","scope":34376,"src":"57648:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":34366,"name":"uint256","nodeType":"ElementaryTypeName","src":"57648:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34367,"nodeType":"ArrayTypeName","src":"57648:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":34371,"mutability":"mutable","name":"right","nameLocation":"57692:5:89","nodeType":"VariableDeclaration","scope":34376,"src":"57673:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":34369,"name":"uint256","nodeType":"ElementaryTypeName","src":"57673:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34370,"nodeType":"ArrayTypeName","src":"57673:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":34373,"mutability":"mutable","name":"error","nameLocation":"57715:5:89","nodeType":"VariableDeclaration","scope":34376,"src":"57699:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34372,"name":"string","nodeType":"ElementaryTypeName","src":"57699:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57647:74:89"},"returnParameters":{"id":34375,"nodeType":"ParameterList","parameters":[],"src":"57735:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34386,"nodeType":"FunctionDefinition","src":"57804:81:89","nodes":[],"documentation":{"id":34377,"nodeType":"StructuredDocumentation","src":"57742:57:89","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57813:8:89","parameters":{"id":34384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34380,"mutability":"mutable","name":"left","nameLocation":"57840:4:89","nodeType":"VariableDeclaration","scope":34386,"src":"57822:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":34378,"name":"int256","nodeType":"ElementaryTypeName","src":"57822:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":34379,"nodeType":"ArrayTypeName","src":"57822:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":34383,"mutability":"mutable","name":"right","nameLocation":"57864:5:89","nodeType":"VariableDeclaration","scope":34386,"src":"57846:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":34381,"name":"int256","nodeType":"ElementaryTypeName","src":"57846:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":34382,"nodeType":"ArrayTypeName","src":"57846:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"57821:49:89"},"returnParameters":{"id":34385,"nodeType":"ParameterList","parameters":[],"src":"57884:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34398,"nodeType":"FunctionDefinition","src":"58010:104:89","nodes":[],"documentation":{"id":34387,"nodeType":"StructuredDocumentation","src":"57891:114:89","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58019:8:89","parameters":{"id":34396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34390,"mutability":"mutable","name":"left","nameLocation":"58046:4:89","nodeType":"VariableDeclaration","scope":34398,"src":"58028:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":34388,"name":"int256","nodeType":"ElementaryTypeName","src":"58028:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":34389,"nodeType":"ArrayTypeName","src":"58028:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":34393,"mutability":"mutable","name":"right","nameLocation":"58070:5:89","nodeType":"VariableDeclaration","scope":34398,"src":"58052:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":34391,"name":"int256","nodeType":"ElementaryTypeName","src":"58052:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":34392,"nodeType":"ArrayTypeName","src":"58052:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":34395,"mutability":"mutable","name":"error","nameLocation":"58093:5:89","nodeType":"VariableDeclaration","scope":34398,"src":"58077:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34394,"name":"string","nodeType":"ElementaryTypeName","src":"58077:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58027:72:89"},"returnParameters":{"id":34397,"nodeType":"ParameterList","parameters":[],"src":"58113:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34406,"nodeType":"FunctionDefinition","src":"58173:61:89","nodes":[],"documentation":{"id":34399,"nodeType":"StructuredDocumentation","src":"58120:48:89","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58182:8:89","parameters":{"id":34404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34401,"mutability":"mutable","name":"left","nameLocation":"58199:4:89","nodeType":"VariableDeclaration","scope":34406,"src":"58191:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34400,"name":"uint256","nodeType":"ElementaryTypeName","src":"58191:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34403,"mutability":"mutable","name":"right","nameLocation":"58213:5:89","nodeType":"VariableDeclaration","scope":34406,"src":"58205:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34402,"name":"uint256","nodeType":"ElementaryTypeName","src":"58205:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58190:29:89"},"returnParameters":{"id":34405,"nodeType":"ParameterList","parameters":[],"src":"58233:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34416,"nodeType":"FunctionDefinition","src":"58303:83:89","nodes":[],"documentation":{"id":34407,"nodeType":"StructuredDocumentation","src":"58240:58:89","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58312:8:89","parameters":{"id":34414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34410,"mutability":"mutable","name":"left","nameLocation":"58340:4:89","nodeType":"VariableDeclaration","scope":34416,"src":"58321:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":34408,"name":"address","nodeType":"ElementaryTypeName","src":"58321:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":34409,"nodeType":"ArrayTypeName","src":"58321:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":34413,"mutability":"mutable","name":"right","nameLocation":"58365:5:89","nodeType":"VariableDeclaration","scope":34416,"src":"58346:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":34411,"name":"address","nodeType":"ElementaryTypeName","src":"58346:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":34412,"nodeType":"ArrayTypeName","src":"58346:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"58320:51:89"},"returnParameters":{"id":34415,"nodeType":"ParameterList","parameters":[],"src":"58385:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34428,"nodeType":"FunctionDefinition","src":"58512:106:89","nodes":[],"documentation":{"id":34417,"nodeType":"StructuredDocumentation","src":"58392:115:89","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58521:8:89","parameters":{"id":34426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34420,"mutability":"mutable","name":"left","nameLocation":"58549:4:89","nodeType":"VariableDeclaration","scope":34428,"src":"58530:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":34418,"name":"address","nodeType":"ElementaryTypeName","src":"58530:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":34419,"nodeType":"ArrayTypeName","src":"58530:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":34423,"mutability":"mutable","name":"right","nameLocation":"58574:5:89","nodeType":"VariableDeclaration","scope":34428,"src":"58555:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":34421,"name":"address","nodeType":"ElementaryTypeName","src":"58555:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":34422,"nodeType":"ArrayTypeName","src":"58555:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":34425,"mutability":"mutable","name":"error","nameLocation":"58597:5:89","nodeType":"VariableDeclaration","scope":34428,"src":"58581:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34424,"name":"string","nodeType":"ElementaryTypeName","src":"58581:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58529:74:89"},"returnParameters":{"id":34427,"nodeType":"ParameterList","parameters":[],"src":"58617:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34438,"nodeType":"FunctionDefinition","src":"58687:83:89","nodes":[],"documentation":{"id":34429,"nodeType":"StructuredDocumentation","src":"58624:58:89","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58696:8:89","parameters":{"id":34436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34432,"mutability":"mutable","name":"left","nameLocation":"58724:4:89","nodeType":"VariableDeclaration","scope":34438,"src":"58705:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":34430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58705:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":34431,"nodeType":"ArrayTypeName","src":"58705:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":34435,"mutability":"mutable","name":"right","nameLocation":"58749:5:89","nodeType":"VariableDeclaration","scope":34438,"src":"58730:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":34433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58730:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":34434,"nodeType":"ArrayTypeName","src":"58730:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"58704:51:89"},"returnParameters":{"id":34437,"nodeType":"ParameterList","parameters":[],"src":"58769:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34450,"nodeType":"FunctionDefinition","src":"58896:106:89","nodes":[],"documentation":{"id":34439,"nodeType":"StructuredDocumentation","src":"58776:115:89","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58905:8:89","parameters":{"id":34448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34442,"mutability":"mutable","name":"left","nameLocation":"58933:4:89","nodeType":"VariableDeclaration","scope":34450,"src":"58914:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":34440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58914:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":34441,"nodeType":"ArrayTypeName","src":"58914:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":34445,"mutability":"mutable","name":"right","nameLocation":"58958:5:89","nodeType":"VariableDeclaration","scope":34450,"src":"58939:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":34443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58939:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":34444,"nodeType":"ArrayTypeName","src":"58939:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":34447,"mutability":"mutable","name":"error","nameLocation":"58981:5:89","nodeType":"VariableDeclaration","scope":34450,"src":"58965:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34446,"name":"string","nodeType":"ElementaryTypeName","src":"58965:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58913:74:89"},"returnParameters":{"id":34449,"nodeType":"ParameterList","parameters":[],"src":"59001:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34460,"nodeType":"FunctionDefinition","src":"59070:81:89","nodes":[],"documentation":{"id":34451,"nodeType":"StructuredDocumentation","src":"59008:57:89","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59079:8:89","parameters":{"id":34458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34454,"mutability":"mutable","name":"left","nameLocation":"59106:4:89","nodeType":"VariableDeclaration","scope":34460,"src":"59088:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":34452,"name":"string","nodeType":"ElementaryTypeName","src":"59088:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":34453,"nodeType":"ArrayTypeName","src":"59088:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":34457,"mutability":"mutable","name":"right","nameLocation":"59130:5:89","nodeType":"VariableDeclaration","scope":34460,"src":"59112:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":34455,"name":"string","nodeType":"ElementaryTypeName","src":"59112:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":34456,"nodeType":"ArrayTypeName","src":"59112:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"59087:49:89"},"returnParameters":{"id":34459,"nodeType":"ParameterList","parameters":[],"src":"59150:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34472,"nodeType":"FunctionDefinition","src":"59276:104:89","nodes":[],"documentation":{"id":34461,"nodeType":"StructuredDocumentation","src":"59157:114:89","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59285:8:89","parameters":{"id":34470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34464,"mutability":"mutable","name":"left","nameLocation":"59312:4:89","nodeType":"VariableDeclaration","scope":34472,"src":"59294:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":34462,"name":"string","nodeType":"ElementaryTypeName","src":"59294:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":34463,"nodeType":"ArrayTypeName","src":"59294:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":34467,"mutability":"mutable","name":"right","nameLocation":"59336:5:89","nodeType":"VariableDeclaration","scope":34472,"src":"59318:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":34465,"name":"string","nodeType":"ElementaryTypeName","src":"59318:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":34466,"nodeType":"ArrayTypeName","src":"59318:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":34469,"mutability":"mutable","name":"error","nameLocation":"59359:5:89","nodeType":"VariableDeclaration","scope":34472,"src":"59343:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34468,"name":"string","nodeType":"ElementaryTypeName","src":"59343:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59293:72:89"},"returnParameters":{"id":34471,"nodeType":"ParameterList","parameters":[],"src":"59379:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34482,"nodeType":"FunctionDefinition","src":"59447:79:89","nodes":[],"documentation":{"id":34473,"nodeType":"StructuredDocumentation","src":"59386:56:89","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59456:8:89","parameters":{"id":34480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34476,"mutability":"mutable","name":"left","nameLocation":"59482:4:89","nodeType":"VariableDeclaration","scope":34482,"src":"59465:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":34474,"name":"bytes","nodeType":"ElementaryTypeName","src":"59465:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":34475,"nodeType":"ArrayTypeName","src":"59465:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":34479,"mutability":"mutable","name":"right","nameLocation":"59505:5:89","nodeType":"VariableDeclaration","scope":34482,"src":"59488:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":34477,"name":"bytes","nodeType":"ElementaryTypeName","src":"59488:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":34478,"nodeType":"ArrayTypeName","src":"59488:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"59464:47:89"},"returnParameters":{"id":34481,"nodeType":"ParameterList","parameters":[],"src":"59525:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34494,"nodeType":"FunctionDefinition","src":"59650:102:89","nodes":[],"documentation":{"id":34483,"nodeType":"StructuredDocumentation","src":"59532:113:89","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59659:8:89","parameters":{"id":34492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34486,"mutability":"mutable","name":"left","nameLocation":"59685:4:89","nodeType":"VariableDeclaration","scope":34494,"src":"59668:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":34484,"name":"bytes","nodeType":"ElementaryTypeName","src":"59668:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":34485,"nodeType":"ArrayTypeName","src":"59668:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":34489,"mutability":"mutable","name":"right","nameLocation":"59708:5:89","nodeType":"VariableDeclaration","scope":34494,"src":"59691:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":34487,"name":"bytes","nodeType":"ElementaryTypeName","src":"59691:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":34488,"nodeType":"ArrayTypeName","src":"59691:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":34491,"mutability":"mutable","name":"error","nameLocation":"59731:5:89","nodeType":"VariableDeclaration","scope":34494,"src":"59715:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34490,"name":"string","nodeType":"ElementaryTypeName","src":"59715:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59667:70:89"},"returnParameters":{"id":34493,"nodeType":"ParameterList","parameters":[],"src":"59751:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34504,"nodeType":"FunctionDefinition","src":"59868:84:89","nodes":[],"documentation":{"id":34495,"nodeType":"StructuredDocumentation","src":"59758:105:89","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59877:8:89","parameters":{"id":34502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34497,"mutability":"mutable","name":"left","nameLocation":"59894:4:89","nodeType":"VariableDeclaration","scope":34504,"src":"59886:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34496,"name":"uint256","nodeType":"ElementaryTypeName","src":"59886:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34499,"mutability":"mutable","name":"right","nameLocation":"59908:5:89","nodeType":"VariableDeclaration","scope":34504,"src":"59900:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34498,"name":"uint256","nodeType":"ElementaryTypeName","src":"59900:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34501,"mutability":"mutable","name":"error","nameLocation":"59931:5:89","nodeType":"VariableDeclaration","scope":34504,"src":"59915:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34500,"name":"string","nodeType":"ElementaryTypeName","src":"59915:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59885:52:89"},"returnParameters":{"id":34503,"nodeType":"ParameterList","parameters":[],"src":"59951:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34512,"nodeType":"FunctionDefinition","src":"60010:59:89","nodes":[],"documentation":{"id":34505,"nodeType":"StructuredDocumentation","src":"59958:47:89","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60019:8:89","parameters":{"id":34510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34507,"mutability":"mutable","name":"left","nameLocation":"60035:4:89","nodeType":"VariableDeclaration","scope":34512,"src":"60028:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34506,"name":"int256","nodeType":"ElementaryTypeName","src":"60028:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34509,"mutability":"mutable","name":"right","nameLocation":"60048:5:89","nodeType":"VariableDeclaration","scope":34512,"src":"60041:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34508,"name":"int256","nodeType":"ElementaryTypeName","src":"60041:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60027:27:89"},"returnParameters":{"id":34511,"nodeType":"ParameterList","parameters":[],"src":"60068:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34522,"nodeType":"FunctionDefinition","src":"60184:82:89","nodes":[],"documentation":{"id":34513,"nodeType":"StructuredDocumentation","src":"60075:104:89","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60193:8:89","parameters":{"id":34520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34515,"mutability":"mutable","name":"left","nameLocation":"60209:4:89","nodeType":"VariableDeclaration","scope":34522,"src":"60202:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34514,"name":"int256","nodeType":"ElementaryTypeName","src":"60202:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34517,"mutability":"mutable","name":"right","nameLocation":"60222:5:89","nodeType":"VariableDeclaration","scope":34522,"src":"60215:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34516,"name":"int256","nodeType":"ElementaryTypeName","src":"60215:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34519,"mutability":"mutable","name":"error","nameLocation":"60245:5:89","nodeType":"VariableDeclaration","scope":34522,"src":"60229:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34518,"name":"string","nodeType":"ElementaryTypeName","src":"60229:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60201:50:89"},"returnParameters":{"id":34521,"nodeType":"ParameterList","parameters":[],"src":"60265:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34530,"nodeType":"FunctionDefinition","src":"60325:61:89","nodes":[],"documentation":{"id":34523,"nodeType":"StructuredDocumentation","src":"60272:48:89","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60334:8:89","parameters":{"id":34528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34525,"mutability":"mutable","name":"left","nameLocation":"60351:4:89","nodeType":"VariableDeclaration","scope":34530,"src":"60343:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34524,"name":"address","nodeType":"ElementaryTypeName","src":"60343:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":34527,"mutability":"mutable","name":"right","nameLocation":"60365:5:89","nodeType":"VariableDeclaration","scope":34530,"src":"60357:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34526,"name":"address","nodeType":"ElementaryTypeName","src":"60357:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"60342:29:89"},"returnParameters":{"id":34529,"nodeType":"ParameterList","parameters":[],"src":"60385:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34540,"nodeType":"FunctionDefinition","src":"60502:84:89","nodes":[],"documentation":{"id":34531,"nodeType":"StructuredDocumentation","src":"60392:105:89","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60511:8:89","parameters":{"id":34538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34533,"mutability":"mutable","name":"left","nameLocation":"60528:4:89","nodeType":"VariableDeclaration","scope":34540,"src":"60520:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34532,"name":"address","nodeType":"ElementaryTypeName","src":"60520:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":34535,"mutability":"mutable","name":"right","nameLocation":"60542:5:89","nodeType":"VariableDeclaration","scope":34540,"src":"60534:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34534,"name":"address","nodeType":"ElementaryTypeName","src":"60534:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":34537,"mutability":"mutable","name":"error","nameLocation":"60565:5:89","nodeType":"VariableDeclaration","scope":34540,"src":"60549:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34536,"name":"string","nodeType":"ElementaryTypeName","src":"60549:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60519:52:89"},"returnParameters":{"id":34539,"nodeType":"ParameterList","parameters":[],"src":"60585:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34548,"nodeType":"FunctionDefinition","src":"60645:61:89","nodes":[],"documentation":{"id":34541,"nodeType":"StructuredDocumentation","src":"60592:48:89","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60654:8:89","parameters":{"id":34546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34543,"mutability":"mutable","name":"left","nameLocation":"60671:4:89","nodeType":"VariableDeclaration","scope":34548,"src":"60663:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":34542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60663:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":34545,"mutability":"mutable","name":"right","nameLocation":"60685:5:89","nodeType":"VariableDeclaration","scope":34548,"src":"60677:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":34544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60677:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"60662:29:89"},"returnParameters":{"id":34547,"nodeType":"ParameterList","parameters":[],"src":"60705:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34558,"nodeType":"FunctionDefinition","src":"60822:84:89","nodes":[],"documentation":{"id":34549,"nodeType":"StructuredDocumentation","src":"60712:105:89","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60831:8:89","parameters":{"id":34556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34551,"mutability":"mutable","name":"left","nameLocation":"60848:4:89","nodeType":"VariableDeclaration","scope":34558,"src":"60840:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":34550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60840:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":34553,"mutability":"mutable","name":"right","nameLocation":"60862:5:89","nodeType":"VariableDeclaration","scope":34558,"src":"60854:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":34552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60854:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":34555,"mutability":"mutable","name":"error","nameLocation":"60885:5:89","nodeType":"VariableDeclaration","scope":34558,"src":"60869:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34554,"name":"string","nodeType":"ElementaryTypeName","src":"60869:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60839:52:89"},"returnParameters":{"id":34557,"nodeType":"ParameterList","parameters":[],"src":"60905:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34564,"nodeType":"FunctionDefinition","src":"60963:51:89","nodes":[],"documentation":{"id":34559,"nodeType":"StructuredDocumentation","src":"60912:46:89","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60972:11:89","parameters":{"id":34562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34561,"mutability":"mutable","name":"condition","nameLocation":"60989:9:89","nodeType":"VariableDeclaration","scope":34564,"src":"60984:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34560,"name":"bool","nodeType":"ElementaryTypeName","src":"60984:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"60983:16:89"},"returnParameters":{"id":34563,"nodeType":"ParameterList","parameters":[],"src":"61013:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34572,"nodeType":"FunctionDefinition","src":"61128:74:89","nodes":[],"documentation":{"id":34565,"nodeType":"StructuredDocumentation","src":"61020:103:89","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"61137:11:89","parameters":{"id":34570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34567,"mutability":"mutable","name":"condition","nameLocation":"61154:9:89","nodeType":"VariableDeclaration","scope":34572,"src":"61149:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34566,"name":"bool","nodeType":"ElementaryTypeName","src":"61149:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34569,"mutability":"mutable","name":"error","nameLocation":"61181:5:89","nodeType":"VariableDeclaration","scope":34572,"src":"61165:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34568,"name":"string","nodeType":"ElementaryTypeName","src":"61165:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61148:39:89"},"returnParameters":{"id":34571,"nodeType":"ParameterList","parameters":[],"src":"61201:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34582,"nodeType":"FunctionDefinition","src":"61363:86:89","nodes":[],"documentation":{"id":34573,"nodeType":"StructuredDocumentation","src":"61208:150:89","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61372:15:89","parameters":{"id":34580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34575,"mutability":"mutable","name":"left","nameLocation":"61396:4:89","nodeType":"VariableDeclaration","scope":34582,"src":"61388:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34574,"name":"uint256","nodeType":"ElementaryTypeName","src":"61388:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34577,"mutability":"mutable","name":"right","nameLocation":"61410:5:89","nodeType":"VariableDeclaration","scope":34582,"src":"61402:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34576,"name":"uint256","nodeType":"ElementaryTypeName","src":"61402:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34579,"mutability":"mutable","name":"decimals","nameLocation":"61425:8:89","nodeType":"VariableDeclaration","scope":34582,"src":"61417:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34578,"name":"uint256","nodeType":"ElementaryTypeName","src":"61417:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61387:47:89"},"returnParameters":{"id":34581,"nodeType":"ParameterList","parameters":[],"src":"61448:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34594,"nodeType":"FunctionDefinition","src":"61664:109:89","nodes":[],"documentation":{"id":34583,"nodeType":"StructuredDocumentation","src":"61455:204:89","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61673:15:89","parameters":{"id":34592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34585,"mutability":"mutable","name":"left","nameLocation":"61697:4:89","nodeType":"VariableDeclaration","scope":34594,"src":"61689:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34584,"name":"uint256","nodeType":"ElementaryTypeName","src":"61689:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34587,"mutability":"mutable","name":"right","nameLocation":"61711:5:89","nodeType":"VariableDeclaration","scope":34594,"src":"61703:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34586,"name":"uint256","nodeType":"ElementaryTypeName","src":"61703:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34589,"mutability":"mutable","name":"decimals","nameLocation":"61726:8:89","nodeType":"VariableDeclaration","scope":34594,"src":"61718:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34588,"name":"uint256","nodeType":"ElementaryTypeName","src":"61718:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34591,"mutability":"mutable","name":"error","nameLocation":"61752:5:89","nodeType":"VariableDeclaration","scope":34594,"src":"61736:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34590,"name":"string","nodeType":"ElementaryTypeName","src":"61736:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61688:70:89"},"returnParameters":{"id":34593,"nodeType":"ParameterList","parameters":[],"src":"61772:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34604,"nodeType":"FunctionDefinition","src":"61933:84:89","nodes":[],"documentation":{"id":34595,"nodeType":"StructuredDocumentation","src":"61779:149:89","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61942:15:89","parameters":{"id":34602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34597,"mutability":"mutable","name":"left","nameLocation":"61965:4:89","nodeType":"VariableDeclaration","scope":34604,"src":"61958:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34596,"name":"int256","nodeType":"ElementaryTypeName","src":"61958:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34599,"mutability":"mutable","name":"right","nameLocation":"61978:5:89","nodeType":"VariableDeclaration","scope":34604,"src":"61971:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34598,"name":"int256","nodeType":"ElementaryTypeName","src":"61971:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34601,"mutability":"mutable","name":"decimals","nameLocation":"61993:8:89","nodeType":"VariableDeclaration","scope":34604,"src":"61985:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34600,"name":"uint256","nodeType":"ElementaryTypeName","src":"61985:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61957:45:89"},"returnParameters":{"id":34603,"nodeType":"ParameterList","parameters":[],"src":"62016:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34616,"nodeType":"FunctionDefinition","src":"62231:107:89","nodes":[],"documentation":{"id":34605,"nodeType":"StructuredDocumentation","src":"62023:203:89","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"62240:15:89","parameters":{"id":34614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34607,"mutability":"mutable","name":"left","nameLocation":"62263:4:89","nodeType":"VariableDeclaration","scope":34616,"src":"62256:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34606,"name":"int256","nodeType":"ElementaryTypeName","src":"62256:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34609,"mutability":"mutable","name":"right","nameLocation":"62276:5:89","nodeType":"VariableDeclaration","scope":34616,"src":"62269:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34608,"name":"int256","nodeType":"ElementaryTypeName","src":"62269:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34611,"mutability":"mutable","name":"decimals","nameLocation":"62291:8:89","nodeType":"VariableDeclaration","scope":34616,"src":"62283:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34610,"name":"uint256","nodeType":"ElementaryTypeName","src":"62283:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34613,"mutability":"mutable","name":"error","nameLocation":"62317:5:89","nodeType":"VariableDeclaration","scope":34616,"src":"62301:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34612,"name":"string","nodeType":"ElementaryTypeName","src":"62301:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62255:68:89"},"returnParameters":{"id":34615,"nodeType":"ParameterList","parameters":[],"src":"62337:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34624,"nodeType":"FunctionDefinition","src":"62442:61:89","nodes":[],"documentation":{"id":34617,"nodeType":"StructuredDocumentation","src":"62344:93:89","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62451:8:89","parameters":{"id":34622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34619,"mutability":"mutable","name":"left","nameLocation":"62468:4:89","nodeType":"VariableDeclaration","scope":34624,"src":"62460:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34618,"name":"uint256","nodeType":"ElementaryTypeName","src":"62460:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34621,"mutability":"mutable","name":"right","nameLocation":"62482:5:89","nodeType":"VariableDeclaration","scope":34624,"src":"62474:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34620,"name":"uint256","nodeType":"ElementaryTypeName","src":"62474:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62459:29:89"},"returnParameters":{"id":34623,"nodeType":"ParameterList","parameters":[],"src":"62502:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34634,"nodeType":"FunctionDefinition","src":"62669:84:89","nodes":[],"documentation":{"id":34625,"nodeType":"StructuredDocumentation","src":"62509:155:89","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62678:8:89","parameters":{"id":34632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34627,"mutability":"mutable","name":"left","nameLocation":"62695:4:89","nodeType":"VariableDeclaration","scope":34634,"src":"62687:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34626,"name":"uint256","nodeType":"ElementaryTypeName","src":"62687:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34629,"mutability":"mutable","name":"right","nameLocation":"62709:5:89","nodeType":"VariableDeclaration","scope":34634,"src":"62701:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34628,"name":"uint256","nodeType":"ElementaryTypeName","src":"62701:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34631,"mutability":"mutable","name":"error","nameLocation":"62732:5:89","nodeType":"VariableDeclaration","scope":34634,"src":"62716:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34630,"name":"string","nodeType":"ElementaryTypeName","src":"62716:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62686:52:89"},"returnParameters":{"id":34633,"nodeType":"ParameterList","parameters":[],"src":"62752:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34642,"nodeType":"FunctionDefinition","src":"62856:59:89","nodes":[],"documentation":{"id":34635,"nodeType":"StructuredDocumentation","src":"62759:92:89","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62865:8:89","parameters":{"id":34640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34637,"mutability":"mutable","name":"left","nameLocation":"62881:4:89","nodeType":"VariableDeclaration","scope":34642,"src":"62874:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34636,"name":"int256","nodeType":"ElementaryTypeName","src":"62874:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34639,"mutability":"mutable","name":"right","nameLocation":"62894:5:89","nodeType":"VariableDeclaration","scope":34642,"src":"62887:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34638,"name":"int256","nodeType":"ElementaryTypeName","src":"62887:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62873:27:89"},"returnParameters":{"id":34641,"nodeType":"ParameterList","parameters":[],"src":"62914:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34652,"nodeType":"FunctionDefinition","src":"63080:82:89","nodes":[],"documentation":{"id":34643,"nodeType":"StructuredDocumentation","src":"62921:154:89","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"63089:8:89","parameters":{"id":34650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34645,"mutability":"mutable","name":"left","nameLocation":"63105:4:89","nodeType":"VariableDeclaration","scope":34652,"src":"63098:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34644,"name":"int256","nodeType":"ElementaryTypeName","src":"63098:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34647,"mutability":"mutable","name":"right","nameLocation":"63118:5:89","nodeType":"VariableDeclaration","scope":34652,"src":"63111:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34646,"name":"int256","nodeType":"ElementaryTypeName","src":"63111:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34649,"mutability":"mutable","name":"error","nameLocation":"63141:5:89","nodeType":"VariableDeclaration","scope":34652,"src":"63125:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34648,"name":"string","nodeType":"ElementaryTypeName","src":"63125:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63097:50:89"},"returnParameters":{"id":34651,"nodeType":"ParameterList","parameters":[],"src":"63161:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34662,"nodeType":"FunctionDefinition","src":"63311:86:89","nodes":[],"documentation":{"id":34653,"nodeType":"StructuredDocumentation","src":"63168:138:89","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63320:15:89","parameters":{"id":34660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34655,"mutability":"mutable","name":"left","nameLocation":"63344:4:89","nodeType":"VariableDeclaration","scope":34662,"src":"63336:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34654,"name":"uint256","nodeType":"ElementaryTypeName","src":"63336:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34657,"mutability":"mutable","name":"right","nameLocation":"63358:5:89","nodeType":"VariableDeclaration","scope":34662,"src":"63350:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34656,"name":"uint256","nodeType":"ElementaryTypeName","src":"63350:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34659,"mutability":"mutable","name":"decimals","nameLocation":"63373:8:89","nodeType":"VariableDeclaration","scope":34662,"src":"63365:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34658,"name":"uint256","nodeType":"ElementaryTypeName","src":"63365:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63335:47:89"},"returnParameters":{"id":34661,"nodeType":"ParameterList","parameters":[],"src":"63396:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34674,"nodeType":"FunctionDefinition","src":"63600:109:89","nodes":[],"documentation":{"id":34663,"nodeType":"StructuredDocumentation","src":"63403:192:89","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63609:15:89","parameters":{"id":34672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34665,"mutability":"mutable","name":"left","nameLocation":"63633:4:89","nodeType":"VariableDeclaration","scope":34674,"src":"63625:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34664,"name":"uint256","nodeType":"ElementaryTypeName","src":"63625:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34667,"mutability":"mutable","name":"right","nameLocation":"63647:5:89","nodeType":"VariableDeclaration","scope":34674,"src":"63639:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34666,"name":"uint256","nodeType":"ElementaryTypeName","src":"63639:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34669,"mutability":"mutable","name":"decimals","nameLocation":"63662:8:89","nodeType":"VariableDeclaration","scope":34674,"src":"63654:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34668,"name":"uint256","nodeType":"ElementaryTypeName","src":"63654:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34671,"mutability":"mutable","name":"error","nameLocation":"63688:5:89","nodeType":"VariableDeclaration","scope":34674,"src":"63672:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34670,"name":"string","nodeType":"ElementaryTypeName","src":"63672:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63624:70:89"},"returnParameters":{"id":34673,"nodeType":"ParameterList","parameters":[],"src":"63708:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34684,"nodeType":"FunctionDefinition","src":"63857:84:89","nodes":[],"documentation":{"id":34675,"nodeType":"StructuredDocumentation","src":"63715:137:89","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63866:15:89","parameters":{"id":34682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34677,"mutability":"mutable","name":"left","nameLocation":"63889:4:89","nodeType":"VariableDeclaration","scope":34684,"src":"63882:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34676,"name":"int256","nodeType":"ElementaryTypeName","src":"63882:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34679,"mutability":"mutable","name":"right","nameLocation":"63902:5:89","nodeType":"VariableDeclaration","scope":34684,"src":"63895:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34678,"name":"int256","nodeType":"ElementaryTypeName","src":"63895:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34681,"mutability":"mutable","name":"decimals","nameLocation":"63917:8:89","nodeType":"VariableDeclaration","scope":34684,"src":"63909:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34680,"name":"uint256","nodeType":"ElementaryTypeName","src":"63909:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63881:45:89"},"returnParameters":{"id":34683,"nodeType":"ParameterList","parameters":[],"src":"63940:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34696,"nodeType":"FunctionDefinition","src":"64143:107:89","nodes":[],"documentation":{"id":34685,"nodeType":"StructuredDocumentation","src":"63947:191:89","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"64152:15:89","parameters":{"id":34694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34687,"mutability":"mutable","name":"left","nameLocation":"64175:4:89","nodeType":"VariableDeclaration","scope":34696,"src":"64168:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34686,"name":"int256","nodeType":"ElementaryTypeName","src":"64168:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34689,"mutability":"mutable","name":"right","nameLocation":"64188:5:89","nodeType":"VariableDeclaration","scope":34696,"src":"64181:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34688,"name":"int256","nodeType":"ElementaryTypeName","src":"64181:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34691,"mutability":"mutable","name":"decimals","nameLocation":"64203:8:89","nodeType":"VariableDeclaration","scope":34696,"src":"64195:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34690,"name":"uint256","nodeType":"ElementaryTypeName","src":"64195:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34693,"mutability":"mutable","name":"error","nameLocation":"64229:5:89","nodeType":"VariableDeclaration","scope":34696,"src":"64213:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34692,"name":"string","nodeType":"ElementaryTypeName","src":"64213:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64167:68:89"},"returnParameters":{"id":34695,"nodeType":"ParameterList","parameters":[],"src":"64249:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34704,"nodeType":"FunctionDefinition","src":"64342:61:89","nodes":[],"documentation":{"id":34697,"nodeType":"StructuredDocumentation","src":"64256:81:89","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64351:8:89","parameters":{"id":34702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34699,"mutability":"mutable","name":"left","nameLocation":"64368:4:89","nodeType":"VariableDeclaration","scope":34704,"src":"64360:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34698,"name":"uint256","nodeType":"ElementaryTypeName","src":"64360:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34701,"mutability":"mutable","name":"right","nameLocation":"64382:5:89","nodeType":"VariableDeclaration","scope":34704,"src":"64374:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34700,"name":"uint256","nodeType":"ElementaryTypeName","src":"64374:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64359:29:89"},"returnParameters":{"id":34703,"nodeType":"ParameterList","parameters":[],"src":"64402:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34714,"nodeType":"FunctionDefinition","src":"64557:84:89","nodes":[],"documentation":{"id":34705,"nodeType":"StructuredDocumentation","src":"64409:143:89","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64566:8:89","parameters":{"id":34712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34707,"mutability":"mutable","name":"left","nameLocation":"64583:4:89","nodeType":"VariableDeclaration","scope":34714,"src":"64575:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34706,"name":"uint256","nodeType":"ElementaryTypeName","src":"64575:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34709,"mutability":"mutable","name":"right","nameLocation":"64597:5:89","nodeType":"VariableDeclaration","scope":34714,"src":"64589:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34708,"name":"uint256","nodeType":"ElementaryTypeName","src":"64589:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34711,"mutability":"mutable","name":"error","nameLocation":"64620:5:89","nodeType":"VariableDeclaration","scope":34714,"src":"64604:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34710,"name":"string","nodeType":"ElementaryTypeName","src":"64604:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64574:52:89"},"returnParameters":{"id":34713,"nodeType":"ParameterList","parameters":[],"src":"64640:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34722,"nodeType":"FunctionDefinition","src":"64732:59:89","nodes":[],"documentation":{"id":34715,"nodeType":"StructuredDocumentation","src":"64647:80:89","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64741:8:89","parameters":{"id":34720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34717,"mutability":"mutable","name":"left","nameLocation":"64757:4:89","nodeType":"VariableDeclaration","scope":34722,"src":"64750:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34716,"name":"int256","nodeType":"ElementaryTypeName","src":"64750:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34719,"mutability":"mutable","name":"right","nameLocation":"64770:5:89","nodeType":"VariableDeclaration","scope":34722,"src":"64763:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34718,"name":"int256","nodeType":"ElementaryTypeName","src":"64763:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"64749:27:89"},"returnParameters":{"id":34721,"nodeType":"ParameterList","parameters":[],"src":"64790:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34732,"nodeType":"FunctionDefinition","src":"64944:82:89","nodes":[],"documentation":{"id":34723,"nodeType":"StructuredDocumentation","src":"64797:142:89","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64953:8:89","parameters":{"id":34730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34725,"mutability":"mutable","name":"left","nameLocation":"64969:4:89","nodeType":"VariableDeclaration","scope":34732,"src":"64962:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34724,"name":"int256","nodeType":"ElementaryTypeName","src":"64962:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34727,"mutability":"mutable","name":"right","nameLocation":"64982:5:89","nodeType":"VariableDeclaration","scope":34732,"src":"64975:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34726,"name":"int256","nodeType":"ElementaryTypeName","src":"64975:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34729,"mutability":"mutable","name":"error","nameLocation":"65005:5:89","nodeType":"VariableDeclaration","scope":34732,"src":"64989:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34728,"name":"string","nodeType":"ElementaryTypeName","src":"64989:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64961:50:89"},"returnParameters":{"id":34731,"nodeType":"ParameterList","parameters":[],"src":"65025:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34742,"nodeType":"FunctionDefinition","src":"65184:86:89","nodes":[],"documentation":{"id":34733,"nodeType":"StructuredDocumentation","src":"65032:147:89","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65193:15:89","parameters":{"id":34740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34735,"mutability":"mutable","name":"left","nameLocation":"65217:4:89","nodeType":"VariableDeclaration","scope":34742,"src":"65209:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34734,"name":"uint256","nodeType":"ElementaryTypeName","src":"65209:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34737,"mutability":"mutable","name":"right","nameLocation":"65231:5:89","nodeType":"VariableDeclaration","scope":34742,"src":"65223:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34736,"name":"uint256","nodeType":"ElementaryTypeName","src":"65223:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34739,"mutability":"mutable","name":"decimals","nameLocation":"65246:8:89","nodeType":"VariableDeclaration","scope":34742,"src":"65238:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34738,"name":"uint256","nodeType":"ElementaryTypeName","src":"65238:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65208:47:89"},"returnParameters":{"id":34741,"nodeType":"ParameterList","parameters":[],"src":"65269:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34754,"nodeType":"FunctionDefinition","src":"65482:109:89","nodes":[],"documentation":{"id":34743,"nodeType":"StructuredDocumentation","src":"65276:201:89","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65491:15:89","parameters":{"id":34752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34745,"mutability":"mutable","name":"left","nameLocation":"65515:4:89","nodeType":"VariableDeclaration","scope":34754,"src":"65507:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34744,"name":"uint256","nodeType":"ElementaryTypeName","src":"65507:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34747,"mutability":"mutable","name":"right","nameLocation":"65529:5:89","nodeType":"VariableDeclaration","scope":34754,"src":"65521:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34746,"name":"uint256","nodeType":"ElementaryTypeName","src":"65521:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34749,"mutability":"mutable","name":"decimals","nameLocation":"65544:8:89","nodeType":"VariableDeclaration","scope":34754,"src":"65536:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34748,"name":"uint256","nodeType":"ElementaryTypeName","src":"65536:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34751,"mutability":"mutable","name":"error","nameLocation":"65570:5:89","nodeType":"VariableDeclaration","scope":34754,"src":"65554:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34750,"name":"string","nodeType":"ElementaryTypeName","src":"65554:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65506:70:89"},"returnParameters":{"id":34753,"nodeType":"ParameterList","parameters":[],"src":"65590:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34764,"nodeType":"FunctionDefinition","src":"65748:84:89","nodes":[],"documentation":{"id":34755,"nodeType":"StructuredDocumentation","src":"65597:146:89","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65757:15:89","parameters":{"id":34762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34757,"mutability":"mutable","name":"left","nameLocation":"65780:4:89","nodeType":"VariableDeclaration","scope":34764,"src":"65773:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34756,"name":"int256","nodeType":"ElementaryTypeName","src":"65773:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34759,"mutability":"mutable","name":"right","nameLocation":"65793:5:89","nodeType":"VariableDeclaration","scope":34764,"src":"65786:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34758,"name":"int256","nodeType":"ElementaryTypeName","src":"65786:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34761,"mutability":"mutable","name":"decimals","nameLocation":"65808:8:89","nodeType":"VariableDeclaration","scope":34764,"src":"65800:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34760,"name":"uint256","nodeType":"ElementaryTypeName","src":"65800:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65772:45:89"},"returnParameters":{"id":34763,"nodeType":"ParameterList","parameters":[],"src":"65831:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34776,"nodeType":"FunctionDefinition","src":"66043:107:89","nodes":[],"documentation":{"id":34765,"nodeType":"StructuredDocumentation","src":"65838:200:89","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"66052:15:89","parameters":{"id":34774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34767,"mutability":"mutable","name":"left","nameLocation":"66075:4:89","nodeType":"VariableDeclaration","scope":34776,"src":"66068:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34766,"name":"int256","nodeType":"ElementaryTypeName","src":"66068:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34769,"mutability":"mutable","name":"right","nameLocation":"66088:5:89","nodeType":"VariableDeclaration","scope":34776,"src":"66081:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34768,"name":"int256","nodeType":"ElementaryTypeName","src":"66081:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34771,"mutability":"mutable","name":"decimals","nameLocation":"66103:8:89","nodeType":"VariableDeclaration","scope":34776,"src":"66095:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34770,"name":"uint256","nodeType":"ElementaryTypeName","src":"66095:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34773,"mutability":"mutable","name":"error","nameLocation":"66129:5:89","nodeType":"VariableDeclaration","scope":34776,"src":"66113:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34772,"name":"string","nodeType":"ElementaryTypeName","src":"66113:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66067:68:89"},"returnParameters":{"id":34775,"nodeType":"ParameterList","parameters":[],"src":"66149:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34784,"nodeType":"FunctionDefinition","src":"66251:61:89","nodes":[],"documentation":{"id":34777,"nodeType":"StructuredDocumentation","src":"66156:90:89","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66260:8:89","parameters":{"id":34782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34779,"mutability":"mutable","name":"left","nameLocation":"66277:4:89","nodeType":"VariableDeclaration","scope":34784,"src":"66269:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34778,"name":"uint256","nodeType":"ElementaryTypeName","src":"66269:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34781,"mutability":"mutable","name":"right","nameLocation":"66291:5:89","nodeType":"VariableDeclaration","scope":34784,"src":"66283:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34780,"name":"uint256","nodeType":"ElementaryTypeName","src":"66283:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66268:29:89"},"returnParameters":{"id":34783,"nodeType":"ParameterList","parameters":[],"src":"66311:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34794,"nodeType":"FunctionDefinition","src":"66475:84:89","nodes":[],"documentation":{"id":34785,"nodeType":"StructuredDocumentation","src":"66318:152:89","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66484:8:89","parameters":{"id":34792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34787,"mutability":"mutable","name":"left","nameLocation":"66501:4:89","nodeType":"VariableDeclaration","scope":34794,"src":"66493:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34786,"name":"uint256","nodeType":"ElementaryTypeName","src":"66493:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34789,"mutability":"mutable","name":"right","nameLocation":"66515:5:89","nodeType":"VariableDeclaration","scope":34794,"src":"66507:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34788,"name":"uint256","nodeType":"ElementaryTypeName","src":"66507:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34791,"mutability":"mutable","name":"error","nameLocation":"66538:5:89","nodeType":"VariableDeclaration","scope":34794,"src":"66522:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34790,"name":"string","nodeType":"ElementaryTypeName","src":"66522:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66492:52:89"},"returnParameters":{"id":34793,"nodeType":"ParameterList","parameters":[],"src":"66558:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34802,"nodeType":"FunctionDefinition","src":"66659:59:89","nodes":[],"documentation":{"id":34795,"nodeType":"StructuredDocumentation","src":"66565:89:89","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66668:8:89","parameters":{"id":34800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34797,"mutability":"mutable","name":"left","nameLocation":"66684:4:89","nodeType":"VariableDeclaration","scope":34802,"src":"66677:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34796,"name":"int256","nodeType":"ElementaryTypeName","src":"66677:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34799,"mutability":"mutable","name":"right","nameLocation":"66697:5:89","nodeType":"VariableDeclaration","scope":34802,"src":"66690:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34798,"name":"int256","nodeType":"ElementaryTypeName","src":"66690:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66676:27:89"},"returnParameters":{"id":34801,"nodeType":"ParameterList","parameters":[],"src":"66717:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34812,"nodeType":"FunctionDefinition","src":"66880:82:89","nodes":[],"documentation":{"id":34803,"nodeType":"StructuredDocumentation","src":"66724:151:89","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66889:8:89","parameters":{"id":34810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34805,"mutability":"mutable","name":"left","nameLocation":"66905:4:89","nodeType":"VariableDeclaration","scope":34812,"src":"66898:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34804,"name":"int256","nodeType":"ElementaryTypeName","src":"66898:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34807,"mutability":"mutable","name":"right","nameLocation":"66918:5:89","nodeType":"VariableDeclaration","scope":34812,"src":"66911:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34806,"name":"int256","nodeType":"ElementaryTypeName","src":"66911:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34809,"mutability":"mutable","name":"error","nameLocation":"66941:5:89","nodeType":"VariableDeclaration","scope":34812,"src":"66925:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34808,"name":"string","nodeType":"ElementaryTypeName","src":"66925:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66897:50:89"},"returnParameters":{"id":34811,"nodeType":"ParameterList","parameters":[],"src":"66961:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34822,"nodeType":"FunctionDefinition","src":"67108:86:89","nodes":[],"documentation":{"id":34813,"nodeType":"StructuredDocumentation","src":"66968:135:89","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67117:15:89","parameters":{"id":34820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34815,"mutability":"mutable","name":"left","nameLocation":"67141:4:89","nodeType":"VariableDeclaration","scope":34822,"src":"67133:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34814,"name":"uint256","nodeType":"ElementaryTypeName","src":"67133:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34817,"mutability":"mutable","name":"right","nameLocation":"67155:5:89","nodeType":"VariableDeclaration","scope":34822,"src":"67147:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34816,"name":"uint256","nodeType":"ElementaryTypeName","src":"67147:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34819,"mutability":"mutable","name":"decimals","nameLocation":"67170:8:89","nodeType":"VariableDeclaration","scope":34822,"src":"67162:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34818,"name":"uint256","nodeType":"ElementaryTypeName","src":"67162:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67132:47:89"},"returnParameters":{"id":34821,"nodeType":"ParameterList","parameters":[],"src":"67193:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34834,"nodeType":"FunctionDefinition","src":"67394:109:89","nodes":[],"documentation":{"id":34823,"nodeType":"StructuredDocumentation","src":"67200:189:89","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67403:15:89","parameters":{"id":34832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34825,"mutability":"mutable","name":"left","nameLocation":"67427:4:89","nodeType":"VariableDeclaration","scope":34834,"src":"67419:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34824,"name":"uint256","nodeType":"ElementaryTypeName","src":"67419:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34827,"mutability":"mutable","name":"right","nameLocation":"67441:5:89","nodeType":"VariableDeclaration","scope":34834,"src":"67433:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34826,"name":"uint256","nodeType":"ElementaryTypeName","src":"67433:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34829,"mutability":"mutable","name":"decimals","nameLocation":"67456:8:89","nodeType":"VariableDeclaration","scope":34834,"src":"67448:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34828,"name":"uint256","nodeType":"ElementaryTypeName","src":"67448:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34831,"mutability":"mutable","name":"error","nameLocation":"67482:5:89","nodeType":"VariableDeclaration","scope":34834,"src":"67466:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34830,"name":"string","nodeType":"ElementaryTypeName","src":"67466:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67418:70:89"},"returnParameters":{"id":34833,"nodeType":"ParameterList","parameters":[],"src":"67502:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34844,"nodeType":"FunctionDefinition","src":"67648:84:89","nodes":[],"documentation":{"id":34835,"nodeType":"StructuredDocumentation","src":"67509:134:89","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67657:15:89","parameters":{"id":34842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34837,"mutability":"mutable","name":"left","nameLocation":"67680:4:89","nodeType":"VariableDeclaration","scope":34844,"src":"67673:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34836,"name":"int256","nodeType":"ElementaryTypeName","src":"67673:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34839,"mutability":"mutable","name":"right","nameLocation":"67693:5:89","nodeType":"VariableDeclaration","scope":34844,"src":"67686:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34838,"name":"int256","nodeType":"ElementaryTypeName","src":"67686:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34841,"mutability":"mutable","name":"decimals","nameLocation":"67708:8:89","nodeType":"VariableDeclaration","scope":34844,"src":"67700:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34840,"name":"uint256","nodeType":"ElementaryTypeName","src":"67700:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67672:45:89"},"returnParameters":{"id":34843,"nodeType":"ParameterList","parameters":[],"src":"67731:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34856,"nodeType":"FunctionDefinition","src":"67931:107:89","nodes":[],"documentation":{"id":34845,"nodeType":"StructuredDocumentation","src":"67738:188:89","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67940:15:89","parameters":{"id":34854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34847,"mutability":"mutable","name":"left","nameLocation":"67963:4:89","nodeType":"VariableDeclaration","scope":34856,"src":"67956:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34846,"name":"int256","nodeType":"ElementaryTypeName","src":"67956:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34849,"mutability":"mutable","name":"right","nameLocation":"67976:5:89","nodeType":"VariableDeclaration","scope":34856,"src":"67969:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34848,"name":"int256","nodeType":"ElementaryTypeName","src":"67969:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34851,"mutability":"mutable","name":"decimals","nameLocation":"67991:8:89","nodeType":"VariableDeclaration","scope":34856,"src":"67983:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34850,"name":"uint256","nodeType":"ElementaryTypeName","src":"67983:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34853,"mutability":"mutable","name":"error","nameLocation":"68017:5:89","nodeType":"VariableDeclaration","scope":34856,"src":"68001:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34852,"name":"string","nodeType":"ElementaryTypeName","src":"68001:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67955:68:89"},"returnParameters":{"id":34855,"nodeType":"ParameterList","parameters":[],"src":"68037:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34864,"nodeType":"FunctionDefinition","src":"68127:61:89","nodes":[],"documentation":{"id":34857,"nodeType":"StructuredDocumentation","src":"68044:78:89","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68136:8:89","parameters":{"id":34862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34859,"mutability":"mutable","name":"left","nameLocation":"68153:4:89","nodeType":"VariableDeclaration","scope":34864,"src":"68145:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34858,"name":"uint256","nodeType":"ElementaryTypeName","src":"68145:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34861,"mutability":"mutable","name":"right","nameLocation":"68167:5:89","nodeType":"VariableDeclaration","scope":34864,"src":"68159:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34860,"name":"uint256","nodeType":"ElementaryTypeName","src":"68159:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68144:29:89"},"returnParameters":{"id":34863,"nodeType":"ParameterList","parameters":[],"src":"68187:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34874,"nodeType":"FunctionDefinition","src":"68339:84:89","nodes":[],"documentation":{"id":34865,"nodeType":"StructuredDocumentation","src":"68194:140:89","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68348:8:89","parameters":{"id":34872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34867,"mutability":"mutable","name":"left","nameLocation":"68365:4:89","nodeType":"VariableDeclaration","scope":34874,"src":"68357:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34866,"name":"uint256","nodeType":"ElementaryTypeName","src":"68357:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34869,"mutability":"mutable","name":"right","nameLocation":"68379:5:89","nodeType":"VariableDeclaration","scope":34874,"src":"68371:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34868,"name":"uint256","nodeType":"ElementaryTypeName","src":"68371:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34871,"mutability":"mutable","name":"error","nameLocation":"68402:5:89","nodeType":"VariableDeclaration","scope":34874,"src":"68386:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34870,"name":"string","nodeType":"ElementaryTypeName","src":"68386:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68356:52:89"},"returnParameters":{"id":34873,"nodeType":"ParameterList","parameters":[],"src":"68422:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34882,"nodeType":"FunctionDefinition","src":"68511:59:89","nodes":[],"documentation":{"id":34875,"nodeType":"StructuredDocumentation","src":"68429:77:89","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68520:8:89","parameters":{"id":34880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34877,"mutability":"mutable","name":"left","nameLocation":"68536:4:89","nodeType":"VariableDeclaration","scope":34882,"src":"68529:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34876,"name":"int256","nodeType":"ElementaryTypeName","src":"68529:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34879,"mutability":"mutable","name":"right","nameLocation":"68549:5:89","nodeType":"VariableDeclaration","scope":34882,"src":"68542:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34878,"name":"int256","nodeType":"ElementaryTypeName","src":"68542:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"68528:27:89"},"returnParameters":{"id":34881,"nodeType":"ParameterList","parameters":[],"src":"68569:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34892,"nodeType":"FunctionDefinition","src":"68720:82:89","nodes":[],"documentation":{"id":34883,"nodeType":"StructuredDocumentation","src":"68576:139:89","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68729:8:89","parameters":{"id":34890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34885,"mutability":"mutable","name":"left","nameLocation":"68745:4:89","nodeType":"VariableDeclaration","scope":34892,"src":"68738:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34884,"name":"int256","nodeType":"ElementaryTypeName","src":"68738:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34887,"mutability":"mutable","name":"right","nameLocation":"68758:5:89","nodeType":"VariableDeclaration","scope":34892,"src":"68751:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34886,"name":"int256","nodeType":"ElementaryTypeName","src":"68751:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34889,"mutability":"mutable","name":"error","nameLocation":"68781:5:89","nodeType":"VariableDeclaration","scope":34892,"src":"68765:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34888,"name":"string","nodeType":"ElementaryTypeName","src":"68765:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68737:50:89"},"returnParameters":{"id":34891,"nodeType":"ParameterList","parameters":[],"src":"68801:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34902,"nodeType":"FunctionDefinition","src":"68915:89:89","nodes":[],"documentation":{"id":34893,"nodeType":"StructuredDocumentation","src":"68808:102:89","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68924:18:89","parameters":{"id":34900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34895,"mutability":"mutable","name":"left","nameLocation":"68951:4:89","nodeType":"VariableDeclaration","scope":34902,"src":"68943:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34894,"name":"uint256","nodeType":"ElementaryTypeName","src":"68943:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34897,"mutability":"mutable","name":"right","nameLocation":"68965:5:89","nodeType":"VariableDeclaration","scope":34902,"src":"68957:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34896,"name":"uint256","nodeType":"ElementaryTypeName","src":"68957:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34899,"mutability":"mutable","name":"decimals","nameLocation":"68980:8:89","nodeType":"VariableDeclaration","scope":34902,"src":"68972:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34898,"name":"uint256","nodeType":"ElementaryTypeName","src":"68972:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68942:47:89"},"returnParameters":{"id":34901,"nodeType":"ParameterList","parameters":[],"src":"69003:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34914,"nodeType":"FunctionDefinition","src":"69179:112:89","nodes":[],"documentation":{"id":34903,"nodeType":"StructuredDocumentation","src":"69010:164:89","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69188:18:89","parameters":{"id":34912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34905,"mutability":"mutable","name":"left","nameLocation":"69215:4:89","nodeType":"VariableDeclaration","scope":34914,"src":"69207:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34904,"name":"uint256","nodeType":"ElementaryTypeName","src":"69207:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34907,"mutability":"mutable","name":"right","nameLocation":"69229:5:89","nodeType":"VariableDeclaration","scope":34914,"src":"69221:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34906,"name":"uint256","nodeType":"ElementaryTypeName","src":"69221:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34909,"mutability":"mutable","name":"decimals","nameLocation":"69244:8:89","nodeType":"VariableDeclaration","scope":34914,"src":"69236:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34908,"name":"uint256","nodeType":"ElementaryTypeName","src":"69236:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34911,"mutability":"mutable","name":"error","nameLocation":"69270:5:89","nodeType":"VariableDeclaration","scope":34914,"src":"69254:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34910,"name":"string","nodeType":"ElementaryTypeName","src":"69254:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69206:70:89"},"returnParameters":{"id":34913,"nodeType":"ParameterList","parameters":[],"src":"69290:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34924,"nodeType":"FunctionDefinition","src":"69403:87:89","nodes":[],"documentation":{"id":34915,"nodeType":"StructuredDocumentation","src":"69297:101:89","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69412:18:89","parameters":{"id":34922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34917,"mutability":"mutable","name":"left","nameLocation":"69438:4:89","nodeType":"VariableDeclaration","scope":34924,"src":"69431:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34916,"name":"int256","nodeType":"ElementaryTypeName","src":"69431:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34919,"mutability":"mutable","name":"right","nameLocation":"69451:5:89","nodeType":"VariableDeclaration","scope":34924,"src":"69444:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34918,"name":"int256","nodeType":"ElementaryTypeName","src":"69444:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34921,"mutability":"mutable","name":"decimals","nameLocation":"69466:8:89","nodeType":"VariableDeclaration","scope":34924,"src":"69458:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34920,"name":"uint256","nodeType":"ElementaryTypeName","src":"69458:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69430:45:89"},"returnParameters":{"id":34923,"nodeType":"ParameterList","parameters":[],"src":"69489:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34936,"nodeType":"FunctionDefinition","src":"69664:110:89","nodes":[],"documentation":{"id":34925,"nodeType":"StructuredDocumentation","src":"69496:163:89","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69673:18:89","parameters":{"id":34934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34927,"mutability":"mutable","name":"left","nameLocation":"69699:4:89","nodeType":"VariableDeclaration","scope":34936,"src":"69692:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34926,"name":"int256","nodeType":"ElementaryTypeName","src":"69692:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34929,"mutability":"mutable","name":"right","nameLocation":"69712:5:89","nodeType":"VariableDeclaration","scope":34936,"src":"69705:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34928,"name":"int256","nodeType":"ElementaryTypeName","src":"69705:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":34931,"mutability":"mutable","name":"decimals","nameLocation":"69727:8:89","nodeType":"VariableDeclaration","scope":34936,"src":"69719:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34930,"name":"uint256","nodeType":"ElementaryTypeName","src":"69719:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34933,"mutability":"mutable","name":"error","nameLocation":"69753:5:89","nodeType":"VariableDeclaration","scope":34936,"src":"69737:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34932,"name":"string","nodeType":"ElementaryTypeName","src":"69737:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69691:68:89"},"returnParameters":{"id":34935,"nodeType":"ParameterList","parameters":[],"src":"69773:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34944,"nodeType":"FunctionDefinition","src":"69834:58:89","nodes":[],"documentation":{"id":34937,"nodeType":"StructuredDocumentation","src":"69780:49:89","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69843:11:89","parameters":{"id":34942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34939,"mutability":"mutable","name":"left","nameLocation":"69860:4:89","nodeType":"VariableDeclaration","scope":34944,"src":"69855:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34938,"name":"bool","nodeType":"ElementaryTypeName","src":"69855:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34941,"mutability":"mutable","name":"right","nameLocation":"69871:5:89","nodeType":"VariableDeclaration","scope":34944,"src":"69866:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34940,"name":"bool","nodeType":"ElementaryTypeName","src":"69866:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69854:23:89"},"returnParameters":{"id":34943,"nodeType":"ParameterList","parameters":[],"src":"69891:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34954,"nodeType":"FunctionDefinition","src":"70009:81:89","nodes":[],"documentation":{"id":34945,"nodeType":"StructuredDocumentation","src":"69898:106:89","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70018:11:89","parameters":{"id":34952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34947,"mutability":"mutable","name":"left","nameLocation":"70035:4:89","nodeType":"VariableDeclaration","scope":34954,"src":"70030:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34946,"name":"bool","nodeType":"ElementaryTypeName","src":"70030:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34949,"mutability":"mutable","name":"right","nameLocation":"70046:5:89","nodeType":"VariableDeclaration","scope":34954,"src":"70041:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34948,"name":"bool","nodeType":"ElementaryTypeName","src":"70041:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34951,"mutability":"mutable","name":"error","nameLocation":"70069:5:89","nodeType":"VariableDeclaration","scope":34954,"src":"70053:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34950,"name":"string","nodeType":"ElementaryTypeName","src":"70053:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70029:46:89"},"returnParameters":{"id":34953,"nodeType":"ParameterList","parameters":[],"src":"70089:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34962,"nodeType":"FunctionDefinition","src":"70152:80:89","nodes":[],"documentation":{"id":34955,"nodeType":"StructuredDocumentation","src":"70096:51:89","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70161:11:89","parameters":{"id":34960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34957,"mutability":"mutable","name":"left","nameLocation":"70189:4:89","nodeType":"VariableDeclaration","scope":34962,"src":"70173:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34956,"name":"string","nodeType":"ElementaryTypeName","src":"70173:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":34959,"mutability":"mutable","name":"right","nameLocation":"70211:5:89","nodeType":"VariableDeclaration","scope":34962,"src":"70195:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34958,"name":"string","nodeType":"ElementaryTypeName","src":"70195:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70172:45:89"},"returnParameters":{"id":34961,"nodeType":"ParameterList","parameters":[],"src":"70231:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34972,"nodeType":"FunctionDefinition","src":"70351:103:89","nodes":[],"documentation":{"id":34963,"nodeType":"StructuredDocumentation","src":"70238:108:89","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70360:11:89","parameters":{"id":34970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34965,"mutability":"mutable","name":"left","nameLocation":"70388:4:89","nodeType":"VariableDeclaration","scope":34972,"src":"70372:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34964,"name":"string","nodeType":"ElementaryTypeName","src":"70372:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":34967,"mutability":"mutable","name":"right","nameLocation":"70410:5:89","nodeType":"VariableDeclaration","scope":34972,"src":"70394:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34966,"name":"string","nodeType":"ElementaryTypeName","src":"70394:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":34969,"mutability":"mutable","name":"error","nameLocation":"70433:5:89","nodeType":"VariableDeclaration","scope":34972,"src":"70417:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34968,"name":"string","nodeType":"ElementaryTypeName","src":"70417:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70371:68:89"},"returnParameters":{"id":34971,"nodeType":"ParameterList","parameters":[],"src":"70453:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34980,"nodeType":"FunctionDefinition","src":"70515:78:89","nodes":[],"documentation":{"id":34973,"nodeType":"StructuredDocumentation","src":"70460:50:89","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70524:11:89","parameters":{"id":34978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34975,"mutability":"mutable","name":"left","nameLocation":"70551:4:89","nodeType":"VariableDeclaration","scope":34980,"src":"70536:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34974,"name":"bytes","nodeType":"ElementaryTypeName","src":"70536:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":34977,"mutability":"mutable","name":"right","nameLocation":"70572:5:89","nodeType":"VariableDeclaration","scope":34980,"src":"70557:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34976,"name":"bytes","nodeType":"ElementaryTypeName","src":"70557:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"70535:43:89"},"returnParameters":{"id":34979,"nodeType":"ParameterList","parameters":[],"src":"70592:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":34990,"nodeType":"FunctionDefinition","src":"70711:101:89","nodes":[],"documentation":{"id":34981,"nodeType":"StructuredDocumentation","src":"70599:107:89","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70720:11:89","parameters":{"id":34988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34983,"mutability":"mutable","name":"left","nameLocation":"70747:4:89","nodeType":"VariableDeclaration","scope":34990,"src":"70732:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34982,"name":"bytes","nodeType":"ElementaryTypeName","src":"70732:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":34985,"mutability":"mutable","name":"right","nameLocation":"70768:5:89","nodeType":"VariableDeclaration","scope":34990,"src":"70753:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34984,"name":"bytes","nodeType":"ElementaryTypeName","src":"70753:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":34987,"mutability":"mutable","name":"error","nameLocation":"70791:5:89","nodeType":"VariableDeclaration","scope":34990,"src":"70775:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":34986,"name":"string","nodeType":"ElementaryTypeName","src":"70775:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70731:66:89"},"returnParameters":{"id":34989,"nodeType":"ParameterList","parameters":[],"src":"70811:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35000,"nodeType":"FunctionDefinition","src":"70882:80:89","nodes":[],"documentation":{"id":34991,"nodeType":"StructuredDocumentation","src":"70818:59:89","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70891:11:89","parameters":{"id":34998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34994,"mutability":"mutable","name":"left","nameLocation":"70919:4:89","nodeType":"VariableDeclaration","scope":35000,"src":"70903:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":34992,"name":"bool","nodeType":"ElementaryTypeName","src":"70903:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34993,"nodeType":"ArrayTypeName","src":"70903:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":34997,"mutability":"mutable","name":"right","nameLocation":"70941:5:89","nodeType":"VariableDeclaration","scope":35000,"src":"70925:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":34995,"name":"bool","nodeType":"ElementaryTypeName","src":"70925:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34996,"nodeType":"ArrayTypeName","src":"70925:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"70902:45:89"},"returnParameters":{"id":34999,"nodeType":"ParameterList","parameters":[],"src":"70961:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35012,"nodeType":"FunctionDefinition","src":"71089:103:89","nodes":[],"documentation":{"id":35001,"nodeType":"StructuredDocumentation","src":"70968:116:89","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71098:11:89","parameters":{"id":35010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35004,"mutability":"mutable","name":"left","nameLocation":"71126:4:89","nodeType":"VariableDeclaration","scope":35012,"src":"71110:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":35002,"name":"bool","nodeType":"ElementaryTypeName","src":"71110:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":35003,"nodeType":"ArrayTypeName","src":"71110:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":35007,"mutability":"mutable","name":"right","nameLocation":"71148:5:89","nodeType":"VariableDeclaration","scope":35012,"src":"71132:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":35005,"name":"bool","nodeType":"ElementaryTypeName","src":"71132:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":35006,"nodeType":"ArrayTypeName","src":"71132:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":35009,"mutability":"mutable","name":"error","nameLocation":"71171:5:89","nodeType":"VariableDeclaration","scope":35012,"src":"71155:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35008,"name":"string","nodeType":"ElementaryTypeName","src":"71155:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71109:68:89"},"returnParameters":{"id":35011,"nodeType":"ParameterList","parameters":[],"src":"71191:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35022,"nodeType":"FunctionDefinition","src":"71265:86:89","nodes":[],"documentation":{"id":35013,"nodeType":"StructuredDocumentation","src":"71198:62:89","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71274:11:89","parameters":{"id":35020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35016,"mutability":"mutable","name":"left","nameLocation":"71305:4:89","nodeType":"VariableDeclaration","scope":35022,"src":"71286:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":35014,"name":"uint256","nodeType":"ElementaryTypeName","src":"71286:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":35015,"nodeType":"ArrayTypeName","src":"71286:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":35019,"mutability":"mutable","name":"right","nameLocation":"71330:5:89","nodeType":"VariableDeclaration","scope":35022,"src":"71311:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":35017,"name":"uint256","nodeType":"ElementaryTypeName","src":"71311:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":35018,"nodeType":"ArrayTypeName","src":"71311:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71285:51:89"},"returnParameters":{"id":35021,"nodeType":"ParameterList","parameters":[],"src":"71350:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35034,"nodeType":"FunctionDefinition","src":"71481:109:89","nodes":[],"documentation":{"id":35023,"nodeType":"StructuredDocumentation","src":"71357:119:89","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71490:11:89","parameters":{"id":35032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35026,"mutability":"mutable","name":"left","nameLocation":"71521:4:89","nodeType":"VariableDeclaration","scope":35034,"src":"71502:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":35024,"name":"uint256","nodeType":"ElementaryTypeName","src":"71502:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":35025,"nodeType":"ArrayTypeName","src":"71502:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":35029,"mutability":"mutable","name":"right","nameLocation":"71546:5:89","nodeType":"VariableDeclaration","scope":35034,"src":"71527:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":35027,"name":"uint256","nodeType":"ElementaryTypeName","src":"71527:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":35028,"nodeType":"ArrayTypeName","src":"71527:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":35031,"mutability":"mutable","name":"error","nameLocation":"71569:5:89","nodeType":"VariableDeclaration","scope":35034,"src":"71553:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35030,"name":"string","nodeType":"ElementaryTypeName","src":"71553:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71501:74:89"},"returnParameters":{"id":35033,"nodeType":"ParameterList","parameters":[],"src":"71589:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35044,"nodeType":"FunctionDefinition","src":"71662:84:89","nodes":[],"documentation":{"id":35035,"nodeType":"StructuredDocumentation","src":"71596:61:89","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71671:11:89","parameters":{"id":35042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35038,"mutability":"mutable","name":"left","nameLocation":"71701:4:89","nodeType":"VariableDeclaration","scope":35044,"src":"71683:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":35036,"name":"int256","nodeType":"ElementaryTypeName","src":"71683:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":35037,"nodeType":"ArrayTypeName","src":"71683:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":35041,"mutability":"mutable","name":"right","nameLocation":"71725:5:89","nodeType":"VariableDeclaration","scope":35044,"src":"71707:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":35039,"name":"int256","nodeType":"ElementaryTypeName","src":"71707:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":35040,"nodeType":"ArrayTypeName","src":"71707:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"71682:49:89"},"returnParameters":{"id":35043,"nodeType":"ParameterList","parameters":[],"src":"71745:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35056,"nodeType":"FunctionDefinition","src":"71875:107:89","nodes":[],"documentation":{"id":35045,"nodeType":"StructuredDocumentation","src":"71752:118:89","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71884:11:89","parameters":{"id":35054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35048,"mutability":"mutable","name":"left","nameLocation":"71914:4:89","nodeType":"VariableDeclaration","scope":35056,"src":"71896:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":35046,"name":"int256","nodeType":"ElementaryTypeName","src":"71896:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":35047,"nodeType":"ArrayTypeName","src":"71896:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":35051,"mutability":"mutable","name":"right","nameLocation":"71938:5:89","nodeType":"VariableDeclaration","scope":35056,"src":"71920:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":35049,"name":"int256","nodeType":"ElementaryTypeName","src":"71920:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":35050,"nodeType":"ArrayTypeName","src":"71920:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":35053,"mutability":"mutable","name":"error","nameLocation":"71961:5:89","nodeType":"VariableDeclaration","scope":35056,"src":"71945:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35052,"name":"string","nodeType":"ElementaryTypeName","src":"71945:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71895:72:89"},"returnParameters":{"id":35055,"nodeType":"ParameterList","parameters":[],"src":"71981:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35064,"nodeType":"FunctionDefinition","src":"72045:64:89","nodes":[],"documentation":{"id":35057,"nodeType":"StructuredDocumentation","src":"71988:52:89","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72054:11:89","parameters":{"id":35062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35059,"mutability":"mutable","name":"left","nameLocation":"72074:4:89","nodeType":"VariableDeclaration","scope":35064,"src":"72066:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35058,"name":"uint256","nodeType":"ElementaryTypeName","src":"72066:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35061,"mutability":"mutable","name":"right","nameLocation":"72088:5:89","nodeType":"VariableDeclaration","scope":35064,"src":"72080:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35060,"name":"uint256","nodeType":"ElementaryTypeName","src":"72080:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72065:29:89"},"returnParameters":{"id":35063,"nodeType":"ParameterList","parameters":[],"src":"72108:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35074,"nodeType":"FunctionDefinition","src":"72182:86:89","nodes":[],"documentation":{"id":35065,"nodeType":"StructuredDocumentation","src":"72115:62:89","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72191:11:89","parameters":{"id":35072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35068,"mutability":"mutable","name":"left","nameLocation":"72222:4:89","nodeType":"VariableDeclaration","scope":35074,"src":"72203:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":35066,"name":"address","nodeType":"ElementaryTypeName","src":"72203:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":35067,"nodeType":"ArrayTypeName","src":"72203:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":35071,"mutability":"mutable","name":"right","nameLocation":"72247:5:89","nodeType":"VariableDeclaration","scope":35074,"src":"72228:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":35069,"name":"address","nodeType":"ElementaryTypeName","src":"72228:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":35070,"nodeType":"ArrayTypeName","src":"72228:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"72202:51:89"},"returnParameters":{"id":35073,"nodeType":"ParameterList","parameters":[],"src":"72267:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35086,"nodeType":"FunctionDefinition","src":"72398:109:89","nodes":[],"documentation":{"id":35075,"nodeType":"StructuredDocumentation","src":"72274:119:89","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72407:11:89","parameters":{"id":35084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35078,"mutability":"mutable","name":"left","nameLocation":"72438:4:89","nodeType":"VariableDeclaration","scope":35086,"src":"72419:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":35076,"name":"address","nodeType":"ElementaryTypeName","src":"72419:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":35077,"nodeType":"ArrayTypeName","src":"72419:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":35081,"mutability":"mutable","name":"right","nameLocation":"72463:5:89","nodeType":"VariableDeclaration","scope":35086,"src":"72444:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":35079,"name":"address","nodeType":"ElementaryTypeName","src":"72444:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":35080,"nodeType":"ArrayTypeName","src":"72444:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":35083,"mutability":"mutable","name":"error","nameLocation":"72486:5:89","nodeType":"VariableDeclaration","scope":35086,"src":"72470:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35082,"name":"string","nodeType":"ElementaryTypeName","src":"72470:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72418:74:89"},"returnParameters":{"id":35085,"nodeType":"ParameterList","parameters":[],"src":"72506:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35096,"nodeType":"FunctionDefinition","src":"72580:86:89","nodes":[],"documentation":{"id":35087,"nodeType":"StructuredDocumentation","src":"72513:62:89","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72589:11:89","parameters":{"id":35094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35090,"mutability":"mutable","name":"left","nameLocation":"72620:4:89","nodeType":"VariableDeclaration","scope":35096,"src":"72601:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":35088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72601:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":35089,"nodeType":"ArrayTypeName","src":"72601:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":35093,"mutability":"mutable","name":"right","nameLocation":"72645:5:89","nodeType":"VariableDeclaration","scope":35096,"src":"72626:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":35091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72626:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":35092,"nodeType":"ArrayTypeName","src":"72626:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"72600:51:89"},"returnParameters":{"id":35095,"nodeType":"ParameterList","parameters":[],"src":"72665:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35108,"nodeType":"FunctionDefinition","src":"72796:109:89","nodes":[],"documentation":{"id":35097,"nodeType":"StructuredDocumentation","src":"72672:119:89","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72805:11:89","parameters":{"id":35106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35100,"mutability":"mutable","name":"left","nameLocation":"72836:4:89","nodeType":"VariableDeclaration","scope":35108,"src":"72817:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":35098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72817:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":35099,"nodeType":"ArrayTypeName","src":"72817:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":35103,"mutability":"mutable","name":"right","nameLocation":"72861:5:89","nodeType":"VariableDeclaration","scope":35108,"src":"72842:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":35101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72842:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":35102,"nodeType":"ArrayTypeName","src":"72842:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":35105,"mutability":"mutable","name":"error","nameLocation":"72884:5:89","nodeType":"VariableDeclaration","scope":35108,"src":"72868:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35104,"name":"string","nodeType":"ElementaryTypeName","src":"72868:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72816:74:89"},"returnParameters":{"id":35107,"nodeType":"ParameterList","parameters":[],"src":"72904:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35118,"nodeType":"FunctionDefinition","src":"72977:84:89","nodes":[],"documentation":{"id":35109,"nodeType":"StructuredDocumentation","src":"72911:61:89","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72986:11:89","parameters":{"id":35116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35112,"mutability":"mutable","name":"left","nameLocation":"73016:4:89","nodeType":"VariableDeclaration","scope":35118,"src":"72998:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":35110,"name":"string","nodeType":"ElementaryTypeName","src":"72998:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":35111,"nodeType":"ArrayTypeName","src":"72998:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":35115,"mutability":"mutable","name":"right","nameLocation":"73040:5:89","nodeType":"VariableDeclaration","scope":35118,"src":"73022:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":35113,"name":"string","nodeType":"ElementaryTypeName","src":"73022:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":35114,"nodeType":"ArrayTypeName","src":"73022:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"72997:49:89"},"returnParameters":{"id":35117,"nodeType":"ParameterList","parameters":[],"src":"73060:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35130,"nodeType":"FunctionDefinition","src":"73190:107:89","nodes":[],"documentation":{"id":35119,"nodeType":"StructuredDocumentation","src":"73067:118:89","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73199:11:89","parameters":{"id":35128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35122,"mutability":"mutable","name":"left","nameLocation":"73229:4:89","nodeType":"VariableDeclaration","scope":35130,"src":"73211:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":35120,"name":"string","nodeType":"ElementaryTypeName","src":"73211:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":35121,"nodeType":"ArrayTypeName","src":"73211:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":35125,"mutability":"mutable","name":"right","nameLocation":"73253:5:89","nodeType":"VariableDeclaration","scope":35130,"src":"73235:23:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":35123,"name":"string","nodeType":"ElementaryTypeName","src":"73235:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":35124,"nodeType":"ArrayTypeName","src":"73235:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":35127,"mutability":"mutable","name":"error","nameLocation":"73276:5:89","nodeType":"VariableDeclaration","scope":35130,"src":"73260:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35126,"name":"string","nodeType":"ElementaryTypeName","src":"73260:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73210:72:89"},"returnParameters":{"id":35129,"nodeType":"ParameterList","parameters":[],"src":"73296:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35140,"nodeType":"FunctionDefinition","src":"73368:82:89","nodes":[],"documentation":{"id":35131,"nodeType":"StructuredDocumentation","src":"73303:60:89","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73377:11:89","parameters":{"id":35138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35134,"mutability":"mutable","name":"left","nameLocation":"73406:4:89","nodeType":"VariableDeclaration","scope":35140,"src":"73389:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":35132,"name":"bytes","nodeType":"ElementaryTypeName","src":"73389:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":35133,"nodeType":"ArrayTypeName","src":"73389:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":35137,"mutability":"mutable","name":"right","nameLocation":"73429:5:89","nodeType":"VariableDeclaration","scope":35140,"src":"73412:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":35135,"name":"bytes","nodeType":"ElementaryTypeName","src":"73412:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":35136,"nodeType":"ArrayTypeName","src":"73412:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"73388:47:89"},"returnParameters":{"id":35139,"nodeType":"ParameterList","parameters":[],"src":"73449:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35152,"nodeType":"FunctionDefinition","src":"73578:105:89","nodes":[],"documentation":{"id":35141,"nodeType":"StructuredDocumentation","src":"73456:117:89","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73587:11:89","parameters":{"id":35150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35144,"mutability":"mutable","name":"left","nameLocation":"73616:4:89","nodeType":"VariableDeclaration","scope":35152,"src":"73599:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":35142,"name":"bytes","nodeType":"ElementaryTypeName","src":"73599:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":35143,"nodeType":"ArrayTypeName","src":"73599:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":35147,"mutability":"mutable","name":"right","nameLocation":"73639:5:89","nodeType":"VariableDeclaration","scope":35152,"src":"73622:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":35145,"name":"bytes","nodeType":"ElementaryTypeName","src":"73622:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":35146,"nodeType":"ArrayTypeName","src":"73622:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":35149,"mutability":"mutable","name":"error","nameLocation":"73662:5:89","nodeType":"VariableDeclaration","scope":35152,"src":"73646:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35148,"name":"string","nodeType":"ElementaryTypeName","src":"73646:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73598:70:89"},"returnParameters":{"id":35151,"nodeType":"ParameterList","parameters":[],"src":"73682:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35162,"nodeType":"FunctionDefinition","src":"73803:87:89","nodes":[],"documentation":{"id":35153,"nodeType":"StructuredDocumentation","src":"73689:109:89","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73812:11:89","parameters":{"id":35160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35155,"mutability":"mutable","name":"left","nameLocation":"73832:4:89","nodeType":"VariableDeclaration","scope":35162,"src":"73824:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35154,"name":"uint256","nodeType":"ElementaryTypeName","src":"73824:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35157,"mutability":"mutable","name":"right","nameLocation":"73846:5:89","nodeType":"VariableDeclaration","scope":35162,"src":"73838:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35156,"name":"uint256","nodeType":"ElementaryTypeName","src":"73838:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35159,"mutability":"mutable","name":"error","nameLocation":"73869:5:89","nodeType":"VariableDeclaration","scope":35162,"src":"73853:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35158,"name":"string","nodeType":"ElementaryTypeName","src":"73853:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73823:52:89"},"returnParameters":{"id":35161,"nodeType":"ParameterList","parameters":[],"src":"73889:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35170,"nodeType":"FunctionDefinition","src":"73952:62:89","nodes":[],"documentation":{"id":35163,"nodeType":"StructuredDocumentation","src":"73896:51:89","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73961:11:89","parameters":{"id":35168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35165,"mutability":"mutable","name":"left","nameLocation":"73980:4:89","nodeType":"VariableDeclaration","scope":35170,"src":"73973:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35164,"name":"int256","nodeType":"ElementaryTypeName","src":"73973:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":35167,"mutability":"mutable","name":"right","nameLocation":"73993:5:89","nodeType":"VariableDeclaration","scope":35170,"src":"73986:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35166,"name":"int256","nodeType":"ElementaryTypeName","src":"73986:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"73972:27:89"},"returnParameters":{"id":35169,"nodeType":"ParameterList","parameters":[],"src":"74013:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35180,"nodeType":"FunctionDefinition","src":"74133:85:89","nodes":[],"documentation":{"id":35171,"nodeType":"StructuredDocumentation","src":"74020:108:89","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74142:11:89","parameters":{"id":35178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35173,"mutability":"mutable","name":"left","nameLocation":"74161:4:89","nodeType":"VariableDeclaration","scope":35180,"src":"74154:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35172,"name":"int256","nodeType":"ElementaryTypeName","src":"74154:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":35175,"mutability":"mutable","name":"right","nameLocation":"74174:5:89","nodeType":"VariableDeclaration","scope":35180,"src":"74167:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35174,"name":"int256","nodeType":"ElementaryTypeName","src":"74167:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":35177,"mutability":"mutable","name":"error","nameLocation":"74197:5:89","nodeType":"VariableDeclaration","scope":35180,"src":"74181:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35176,"name":"string","nodeType":"ElementaryTypeName","src":"74181:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74153:50:89"},"returnParameters":{"id":35179,"nodeType":"ParameterList","parameters":[],"src":"74217:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35188,"nodeType":"FunctionDefinition","src":"74281:64:89","nodes":[],"documentation":{"id":35181,"nodeType":"StructuredDocumentation","src":"74224:52:89","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74290:11:89","parameters":{"id":35186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35183,"mutability":"mutable","name":"left","nameLocation":"74310:4:89","nodeType":"VariableDeclaration","scope":35188,"src":"74302:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35182,"name":"address","nodeType":"ElementaryTypeName","src":"74302:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35185,"mutability":"mutable","name":"right","nameLocation":"74324:5:89","nodeType":"VariableDeclaration","scope":35188,"src":"74316:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35184,"name":"address","nodeType":"ElementaryTypeName","src":"74316:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"74301:29:89"},"returnParameters":{"id":35187,"nodeType":"ParameterList","parameters":[],"src":"74344:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35198,"nodeType":"FunctionDefinition","src":"74465:87:89","nodes":[],"documentation":{"id":35189,"nodeType":"StructuredDocumentation","src":"74351:109:89","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74474:11:89","parameters":{"id":35196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35191,"mutability":"mutable","name":"left","nameLocation":"74494:4:89","nodeType":"VariableDeclaration","scope":35198,"src":"74486:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35190,"name":"address","nodeType":"ElementaryTypeName","src":"74486:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35193,"mutability":"mutable","name":"right","nameLocation":"74508:5:89","nodeType":"VariableDeclaration","scope":35198,"src":"74500:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35192,"name":"address","nodeType":"ElementaryTypeName","src":"74500:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35195,"mutability":"mutable","name":"error","nameLocation":"74531:5:89","nodeType":"VariableDeclaration","scope":35198,"src":"74515:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35194,"name":"string","nodeType":"ElementaryTypeName","src":"74515:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74485:52:89"},"returnParameters":{"id":35197,"nodeType":"ParameterList","parameters":[],"src":"74551:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35206,"nodeType":"FunctionDefinition","src":"74615:64:89","nodes":[],"documentation":{"id":35199,"nodeType":"StructuredDocumentation","src":"74558:52:89","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74624:11:89","parameters":{"id":35204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35201,"mutability":"mutable","name":"left","nameLocation":"74644:4:89","nodeType":"VariableDeclaration","scope":35206,"src":"74636:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74636:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":35203,"mutability":"mutable","name":"right","nameLocation":"74658:5:89","nodeType":"VariableDeclaration","scope":35206,"src":"74650:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74650:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"74635:29:89"},"returnParameters":{"id":35205,"nodeType":"ParameterList","parameters":[],"src":"74678:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35216,"nodeType":"FunctionDefinition","src":"74799:87:89","nodes":[],"documentation":{"id":35207,"nodeType":"StructuredDocumentation","src":"74685:109:89","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74808:11:89","parameters":{"id":35214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35209,"mutability":"mutable","name":"left","nameLocation":"74828:4:89","nodeType":"VariableDeclaration","scope":35216,"src":"74820:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74820:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":35211,"mutability":"mutable","name":"right","nameLocation":"74842:5:89","nodeType":"VariableDeclaration","scope":35216,"src":"74834:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74834:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":35213,"mutability":"mutable","name":"error","nameLocation":"74865:5:89","nodeType":"VariableDeclaration","scope":35216,"src":"74849:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35212,"name":"string","nodeType":"ElementaryTypeName","src":"74849:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74819:52:89"},"returnParameters":{"id":35215,"nodeType":"ParameterList","parameters":[],"src":"74885:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35222,"nodeType":"FunctionDefinition","src":"74942:50:89","nodes":[],"documentation":{"id":35217,"nodeType":"StructuredDocumentation","src":"74892:45:89","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74951:10:89","parameters":{"id":35220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35219,"mutability":"mutable","name":"condition","nameLocation":"74967:9:89","nodeType":"VariableDeclaration","scope":35222,"src":"74962:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35218,"name":"bool","nodeType":"ElementaryTypeName","src":"74962:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74961:16:89"},"returnParameters":{"id":35221,"nodeType":"ParameterList","parameters":[],"src":"74991:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35230,"nodeType":"FunctionDefinition","src":"75105:73:89","nodes":[],"documentation":{"id":35223,"nodeType":"StructuredDocumentation","src":"74998:102:89","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"75114:10:89","parameters":{"id":35228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35225,"mutability":"mutable","name":"condition","nameLocation":"75130:9:89","nodeType":"VariableDeclaration","scope":35230,"src":"75125:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35224,"name":"bool","nodeType":"ElementaryTypeName","src":"75125:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":35227,"mutability":"mutable","name":"error","nameLocation":"75157:5:89","nodeType":"VariableDeclaration","scope":35230,"src":"75141:21:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35226,"name":"string","nodeType":"ElementaryTypeName","src":"75141:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75124:39:89"},"returnParameters":{"id":35229,"nodeType":"ParameterList","parameters":[],"src":"75177:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35236,"nodeType":"FunctionDefinition","src":"75273:46:89","nodes":[],"documentation":{"id":35231,"nodeType":"StructuredDocumentation","src":"75184:84:89","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"75282:6:89","parameters":{"id":35234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35233,"mutability":"mutable","name":"condition","nameLocation":"75294:9:89","nodeType":"VariableDeclaration","scope":35236,"src":"75289:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35232,"name":"bool","nodeType":"ElementaryTypeName","src":"75289:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"75288:16:89"},"returnParameters":{"id":35235,"nodeType":"ParameterList","parameters":[],"src":"75318:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35240,"nodeType":"FunctionDefinition","src":"75409:40:89","nodes":[],"documentation":{"id":35237,"nodeType":"StructuredDocumentation","src":"75325:79:89","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"75418:14:89","parameters":{"id":35238,"nodeType":"ParameterList","parameters":[],"src":"75432:2:89"},"returnParameters":{"id":35239,"nodeType":"ParameterList","parameters":[],"src":"75448:0:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35246,"nodeType":"FunctionDefinition","src":"75511:51:89","nodes":[],"documentation":{"id":35241,"nodeType":"StructuredDocumentation","src":"75455:51:89","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"75520:10:89","parameters":{"id":35244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35243,"mutability":"mutable","name":"char","nameLocation":"75547:4:89","nodeType":"VariableDeclaration","scope":35246,"src":"75531:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35242,"name":"string","nodeType":"ElementaryTypeName","src":"75531:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75530:22:89"},"returnParameters":{"id":35245,"nodeType":"ParameterList","parameters":[],"src":"75561:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35254,"nodeType":"FunctionDefinition","src":"75636:63:89","nodes":[],"documentation":{"id":35247,"nodeType":"StructuredDocumentation","src":"75568:63:89","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"75645:10:89","parameters":{"id":35252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35249,"mutability":"mutable","name":"char","nameLocation":"75672:4:89","nodeType":"VariableDeclaration","scope":35254,"src":"75656:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35248,"name":"string","nodeType":"ElementaryTypeName","src":"75656:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35251,"mutability":"mutable","name":"value","nameLocation":"75683:5:89","nodeType":"VariableDeclaration","scope":35254,"src":"75678:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35250,"name":"bool","nodeType":"ElementaryTypeName","src":"75678:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"75655:34:89"},"returnParameters":{"id":35253,"nodeType":"ParameterList","parameters":[],"src":"75698:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35260,"nodeType":"FunctionDefinition","src":"76104:75:89","nodes":[],"documentation":{"id":35255,"nodeType":"StructuredDocumentation","src":"75705:394:89","text":"Returns the Foundry version.\n Format: <cargo_version>+<git_sha>+<build_timestamp>\n Sample output: 0.2.0+faa94c384+202407110019\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"76113:17:89","parameters":{"id":35256,"nodeType":"ParameterList","parameters":[],"src":"76130:2:89"},"returnParameters":{"id":35259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35258,"mutability":"mutable","name":"version","nameLocation":"76170:7:89","nodeType":"VariableDeclaration","scope":35260,"src":"76156:21:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35257,"name":"string","nodeType":"ElementaryTypeName","src":"76156:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76155:23:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35268,"nodeType":"FunctionDefinition","src":"76234:85:89","nodes":[],"documentation":{"id":35261,"nodeType":"StructuredDocumentation","src":"76185:44:89","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"76243:6:89","parameters":{"id":35264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35263,"mutability":"mutable","name":"rpcAlias","nameLocation":"76266:8:89","nodeType":"VariableDeclaration","scope":35268,"src":"76250:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35262,"name":"string","nodeType":"ElementaryTypeName","src":"76250:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76249:26:89"},"returnParameters":{"id":35267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35266,"mutability":"mutable","name":"json","nameLocation":"76313:4:89","nodeType":"VariableDeclaration","scope":35268,"src":"76299:18:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35265,"name":"string","nodeType":"ElementaryTypeName","src":"76299:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76298:20:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35276,"nodeType":"FunctionDefinition","src":"76384:67:89","nodes":[],"documentation":{"id":35269,"nodeType":"StructuredDocumentation","src":"76325:54:89","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"76393:13:89","parameters":{"id":35270,"nodeType":"ParameterList","parameters":[],"src":"76406:2:89"},"returnParameters":{"id":35275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35274,"mutability":"mutable","name":"urls","nameLocation":"76445:4:89","nodeType":"VariableDeclaration","scope":35276,"src":"76432:17:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$32233_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":35272,"nodeType":"UserDefinedTypeName","pathNode":{"id":35271,"name":"Rpc","nameLocations":["76432:3:89"],"nodeType":"IdentifierPath","referencedDeclaration":32233,"src":"76432:3:89"},"referencedDeclaration":32233,"src":"76432:3:89","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$32233_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":35273,"nodeType":"ArrayTypeName","src":"76432:5:89","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$32233_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"76431:19:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35285,"nodeType":"FunctionDefinition","src":"76522:67:89","nodes":[],"documentation":{"id":35277,"nodeType":"StructuredDocumentation","src":"76457:60:89","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"76531:7:89","parameters":{"id":35278,"nodeType":"ParameterList","parameters":[],"src":"76538:2:89"},"returnParameters":{"id":35284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35283,"mutability":"mutable","name":"urls","nameLocation":"76583:4:89","nodeType":"VariableDeclaration","scope":35285,"src":"76564:23:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":35279,"name":"string","nodeType":"ElementaryTypeName","src":"76564:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":35281,"length":{"hexValue":"32","id":35280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"76571:1:89","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"76564:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":35282,"nodeType":"ArrayTypeName","src":"76564:11:89","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"76563:25:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35291,"nodeType":"FunctionDefinition","src":"76670:42:89","nodes":[],"documentation":{"id":35286,"nodeType":"StructuredDocumentation","src":"76595:70:89","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"76679:5:89","parameters":{"id":35289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35288,"mutability":"mutable","name":"duration","nameLocation":"76693:8:89","nodeType":"VariableDeclaration","scope":35291,"src":"76685:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35287,"name":"uint256","nodeType":"ElementaryTypeName","src":"76685:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76684:18:89"},"returnParameters":{"id":35290,"nodeType":"ParameterList","parameters":[],"src":"76711:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35301,"nodeType":"FunctionDefinition","src":"76797:95:89","nodes":[],"documentation":{"id":35292,"nodeType":"StructuredDocumentation","src":"76749:43:89","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"76806:13:89","parameters":{"id":35297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35294,"mutability":"mutable","name":"toml","nameLocation":"76836:4:89","nodeType":"VariableDeclaration","scope":35301,"src":"76820:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35293,"name":"string","nodeType":"ElementaryTypeName","src":"76820:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35296,"mutability":"mutable","name":"key","nameLocation":"76858:3:89","nodeType":"VariableDeclaration","scope":35301,"src":"76842:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35295,"name":"string","nodeType":"ElementaryTypeName","src":"76842:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76819:43:89"},"returnParameters":{"id":35300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35301,"src":"76886:4:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35298,"name":"bool","nodeType":"ElementaryTypeName","src":"76886:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76885:6:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35311,"nodeType":"FunctionDefinition","src":"76973:101:89","nodes":[],"documentation":{"id":35302,"nodeType":"StructuredDocumentation","src":"76898:70:89","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"76982:16:89","parameters":{"id":35307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35304,"mutability":"mutable","name":"toml","nameLocation":"77015:4:89","nodeType":"VariableDeclaration","scope":35311,"src":"76999:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35303,"name":"string","nodeType":"ElementaryTypeName","src":"76999:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35306,"mutability":"mutable","name":"key","nameLocation":"77037:3:89","nodeType":"VariableDeclaration","scope":35311,"src":"77021:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35305,"name":"string","nodeType":"ElementaryTypeName","src":"77021:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76998:43:89"},"returnParameters":{"id":35310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35311,"src":"77065:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35308,"name":"address","nodeType":"ElementaryTypeName","src":"77065:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77064:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35322,"nodeType":"FunctionDefinition","src":"77157:139:89","nodes":[],"documentation":{"id":35312,"nodeType":"StructuredDocumentation","src":"77080:72:89","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"77166:21:89","parameters":{"id":35317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35314,"mutability":"mutable","name":"toml","nameLocation":"77204:4:89","nodeType":"VariableDeclaration","scope":35322,"src":"77188:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35313,"name":"string","nodeType":"ElementaryTypeName","src":"77188:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35316,"mutability":"mutable","name":"key","nameLocation":"77226:3:89","nodeType":"VariableDeclaration","scope":35322,"src":"77210:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35315,"name":"string","nodeType":"ElementaryTypeName","src":"77210:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77187:43:89"},"returnParameters":{"id":35321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35322,"src":"77278:16:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":35318,"name":"address","nodeType":"ElementaryTypeName","src":"77278:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":35319,"nodeType":"ArrayTypeName","src":"77278:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"77277:18:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35332,"nodeType":"FunctionDefinition","src":"77374:95:89","nodes":[],"documentation":{"id":35323,"nodeType":"StructuredDocumentation","src":"77302:67:89","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"77383:13:89","parameters":{"id":35328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35325,"mutability":"mutable","name":"toml","nameLocation":"77413:4:89","nodeType":"VariableDeclaration","scope":35332,"src":"77397:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35324,"name":"string","nodeType":"ElementaryTypeName","src":"77397:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35327,"mutability":"mutable","name":"key","nameLocation":"77435:3:89","nodeType":"VariableDeclaration","scope":35332,"src":"77419:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35326,"name":"string","nodeType":"ElementaryTypeName","src":"77419:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77396:43:89"},"returnParameters":{"id":35331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35332,"src":"77463:4:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35329,"name":"bool","nodeType":"ElementaryTypeName","src":"77463:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77462:6:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35343,"nodeType":"FunctionDefinition","src":"77549:109:89","nodes":[],"documentation":{"id":35333,"nodeType":"StructuredDocumentation","src":"77475:69:89","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"77558:18:89","parameters":{"id":35338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35335,"mutability":"mutable","name":"toml","nameLocation":"77593:4:89","nodeType":"VariableDeclaration","scope":35343,"src":"77577:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35334,"name":"string","nodeType":"ElementaryTypeName","src":"77577:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35337,"mutability":"mutable","name":"key","nameLocation":"77615:3:89","nodeType":"VariableDeclaration","scope":35343,"src":"77599:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35336,"name":"string","nodeType":"ElementaryTypeName","src":"77599:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77576:43:89"},"returnParameters":{"id":35342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35343,"src":"77643:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":35339,"name":"bool","nodeType":"ElementaryTypeName","src":"77643:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":35340,"nodeType":"ArrayTypeName","src":"77643:6:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"77642:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35353,"nodeType":"FunctionDefinition","src":"77737:104:89","nodes":[],"documentation":{"id":35344,"nodeType":"StructuredDocumentation","src":"77664:68:89","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"77746:14:89","parameters":{"id":35349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35346,"mutability":"mutable","name":"toml","nameLocation":"77777:4:89","nodeType":"VariableDeclaration","scope":35353,"src":"77761:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35345,"name":"string","nodeType":"ElementaryTypeName","src":"77761:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35348,"mutability":"mutable","name":"key","nameLocation":"77799:3:89","nodeType":"VariableDeclaration","scope":35353,"src":"77783:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35347,"name":"string","nodeType":"ElementaryTypeName","src":"77783:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77760:43:89"},"returnParameters":{"id":35352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35353,"src":"77827:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35350,"name":"bytes","nodeType":"ElementaryTypeName","src":"77827:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"77826:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35363,"nodeType":"FunctionDefinition","src":"77922:101:89","nodes":[],"documentation":{"id":35354,"nodeType":"StructuredDocumentation","src":"77847:70:89","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"77931:16:89","parameters":{"id":35359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35356,"mutability":"mutable","name":"toml","nameLocation":"77964:4:89","nodeType":"VariableDeclaration","scope":35363,"src":"77948:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35355,"name":"string","nodeType":"ElementaryTypeName","src":"77948:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35358,"mutability":"mutable","name":"key","nameLocation":"77986:3:89","nodeType":"VariableDeclaration","scope":35363,"src":"77970:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35357,"name":"string","nodeType":"ElementaryTypeName","src":"77970:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77947:43:89"},"returnParameters":{"id":35362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35363,"src":"78014:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78014:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78013:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35374,"nodeType":"FunctionDefinition","src":"78106:139:89","nodes":[],"documentation":{"id":35364,"nodeType":"StructuredDocumentation","src":"78029:72:89","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"78115:21:89","parameters":{"id":35369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35366,"mutability":"mutable","name":"toml","nameLocation":"78153:4:89","nodeType":"VariableDeclaration","scope":35374,"src":"78137:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35365,"name":"string","nodeType":"ElementaryTypeName","src":"78137:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35368,"mutability":"mutable","name":"key","nameLocation":"78175:3:89","nodeType":"VariableDeclaration","scope":35374,"src":"78159:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35367,"name":"string","nodeType":"ElementaryTypeName","src":"78159:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78136:43:89"},"returnParameters":{"id":35373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35374,"src":"78227:16:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":35370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78227:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":35371,"nodeType":"ArrayTypeName","src":"78227:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"78226:18:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35385,"nodeType":"FunctionDefinition","src":"78326:111:89","nodes":[],"documentation":{"id":35375,"nodeType":"StructuredDocumentation","src":"78251:70:89","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"78335:19:89","parameters":{"id":35380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35377,"mutability":"mutable","name":"toml","nameLocation":"78371:4:89","nodeType":"VariableDeclaration","scope":35385,"src":"78355:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35376,"name":"string","nodeType":"ElementaryTypeName","src":"78355:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35379,"mutability":"mutable","name":"key","nameLocation":"78393:3:89","nodeType":"VariableDeclaration","scope":35385,"src":"78377:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35378,"name":"string","nodeType":"ElementaryTypeName","src":"78377:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78354:43:89"},"returnParameters":{"id":35384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35385,"src":"78421:14:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":35381,"name":"bytes","nodeType":"ElementaryTypeName","src":"78421:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":35382,"nodeType":"ArrayTypeName","src":"78421:7:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"78420:16:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35395,"nodeType":"FunctionDefinition","src":"78517:96:89","nodes":[],"documentation":{"id":35386,"nodeType":"StructuredDocumentation","src":"78443:69:89","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"78526:12:89","parameters":{"id":35391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35388,"mutability":"mutable","name":"toml","nameLocation":"78555:4:89","nodeType":"VariableDeclaration","scope":35395,"src":"78539:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35387,"name":"string","nodeType":"ElementaryTypeName","src":"78539:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35390,"mutability":"mutable","name":"key","nameLocation":"78577:3:89","nodeType":"VariableDeclaration","scope":35395,"src":"78561:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35389,"name":"string","nodeType":"ElementaryTypeName","src":"78561:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78538:43:89"},"returnParameters":{"id":35394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35395,"src":"78605:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35392,"name":"int256","nodeType":"ElementaryTypeName","src":"78605:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"78604:8:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35406,"nodeType":"FunctionDefinition","src":"78695:110:89","nodes":[],"documentation":{"id":35396,"nodeType":"StructuredDocumentation","src":"78619:71:89","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"78704:17:89","parameters":{"id":35401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35398,"mutability":"mutable","name":"toml","nameLocation":"78738:4:89","nodeType":"VariableDeclaration","scope":35406,"src":"78722:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35397,"name":"string","nodeType":"ElementaryTypeName","src":"78722:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35400,"mutability":"mutable","name":"key","nameLocation":"78760:3:89","nodeType":"VariableDeclaration","scope":35406,"src":"78744:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35399,"name":"string","nodeType":"ElementaryTypeName","src":"78744:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78721:43:89"},"returnParameters":{"id":35405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35406,"src":"78788:15:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":35402,"name":"int256","nodeType":"ElementaryTypeName","src":"78788:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":35403,"nodeType":"ArrayTypeName","src":"78788:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"78787:17:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35417,"nodeType":"FunctionDefinition","src":"78869:111:89","nodes":[],"documentation":{"id":35407,"nodeType":"StructuredDocumentation","src":"78811:53:89","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"78878:13:89","parameters":{"id":35412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35409,"mutability":"mutable","name":"toml","nameLocation":"78908:4:89","nodeType":"VariableDeclaration","scope":35417,"src":"78892:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35408,"name":"string","nodeType":"ElementaryTypeName","src":"78892:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35411,"mutability":"mutable","name":"key","nameLocation":"78930:3:89","nodeType":"VariableDeclaration","scope":35417,"src":"78914:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35410,"name":"string","nodeType":"ElementaryTypeName","src":"78914:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78891:43:89"},"returnParameters":{"id":35416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35415,"mutability":"mutable","name":"keys","nameLocation":"78974:4:89","nodeType":"VariableDeclaration","scope":35417,"src":"78958:20:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":35413,"name":"string","nodeType":"ElementaryTypeName","src":"78958:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":35414,"nodeType":"ArrayTypeName","src":"78958:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78957:22:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35427,"nodeType":"FunctionDefinition","src":"79060:106:89","nodes":[],"documentation":{"id":35418,"nodeType":"StructuredDocumentation","src":"78986:69:89","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"79069:15:89","parameters":{"id":35423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35420,"mutability":"mutable","name":"toml","nameLocation":"79101:4:89","nodeType":"VariableDeclaration","scope":35427,"src":"79085:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35419,"name":"string","nodeType":"ElementaryTypeName","src":"79085:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35422,"mutability":"mutable","name":"key","nameLocation":"79123:3:89","nodeType":"VariableDeclaration","scope":35427,"src":"79107:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35421,"name":"string","nodeType":"ElementaryTypeName","src":"79107:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79084:43:89"},"returnParameters":{"id":35426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35427,"src":"79151:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35424,"name":"string","nodeType":"ElementaryTypeName","src":"79151:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79150:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35438,"nodeType":"FunctionDefinition","src":"79248:113:89","nodes":[],"documentation":{"id":35428,"nodeType":"StructuredDocumentation","src":"79172:71:89","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"79257:20:89","parameters":{"id":35433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35430,"mutability":"mutable","name":"toml","nameLocation":"79294:4:89","nodeType":"VariableDeclaration","scope":35438,"src":"79278:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35429,"name":"string","nodeType":"ElementaryTypeName","src":"79278:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35432,"mutability":"mutable","name":"key","nameLocation":"79316:3:89","nodeType":"VariableDeclaration","scope":35438,"src":"79300:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35431,"name":"string","nodeType":"ElementaryTypeName","src":"79300:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79277:43:89"},"returnParameters":{"id":35437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35438,"src":"79344:15:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":35434,"name":"string","nodeType":"ElementaryTypeName","src":"79344:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":35435,"nodeType":"ArrayTypeName","src":"79344:8:89","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"79343:17:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35450,"nodeType":"FunctionDefinition","src":"79478:165:89","nodes":[],"documentation":{"id":35439,"nodeType":"StructuredDocumentation","src":"79367:106:89","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"79487:18:89","parameters":{"id":35446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35441,"mutability":"mutable","name":"toml","nameLocation":"79522:4:89","nodeType":"VariableDeclaration","scope":35450,"src":"79506:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35440,"name":"string","nodeType":"ElementaryTypeName","src":"79506:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35443,"mutability":"mutable","name":"key","nameLocation":"79544:3:89","nodeType":"VariableDeclaration","scope":35450,"src":"79528:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35442,"name":"string","nodeType":"ElementaryTypeName","src":"79528:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35445,"mutability":"mutable","name":"typeDescription","nameLocation":"79565:15:89","nodeType":"VariableDeclaration","scope":35450,"src":"79549:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35444,"name":"string","nodeType":"ElementaryTypeName","src":"79549:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79505:76:89"},"returnParameters":{"id":35449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35450,"src":"79629:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35447,"name":"bytes","nodeType":"ElementaryTypeName","src":"79629:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79628:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35460,"nodeType":"FunctionDefinition","src":"79745:139:89","nodes":[],"documentation":{"id":35451,"nodeType":"StructuredDocumentation","src":"79649:91:89","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"79754:13:89","parameters":{"id":35456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35453,"mutability":"mutable","name":"toml","nameLocation":"79784:4:89","nodeType":"VariableDeclaration","scope":35460,"src":"79768:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35452,"name":"string","nodeType":"ElementaryTypeName","src":"79768:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35455,"mutability":"mutable","name":"typeDescription","nameLocation":"79806:15:89","nodeType":"VariableDeclaration","scope":35460,"src":"79790:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35454,"name":"string","nodeType":"ElementaryTypeName","src":"79790:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79767:55:89"},"returnParameters":{"id":35459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35460,"src":"79870:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35457,"name":"bytes","nodeType":"ElementaryTypeName","src":"79870:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79869:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35472,"nodeType":"FunctionDefinition","src":"79995:160:89","nodes":[],"documentation":{"id":35461,"nodeType":"StructuredDocumentation","src":"79890:100:89","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"80004:13:89","parameters":{"id":35468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35463,"mutability":"mutable","name":"toml","nameLocation":"80034:4:89","nodeType":"VariableDeclaration","scope":35472,"src":"80018:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35462,"name":"string","nodeType":"ElementaryTypeName","src":"80018:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35465,"mutability":"mutable","name":"key","nameLocation":"80056:3:89","nodeType":"VariableDeclaration","scope":35472,"src":"80040:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35464,"name":"string","nodeType":"ElementaryTypeName","src":"80040:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35467,"mutability":"mutable","name":"typeDescription","nameLocation":"80077:15:89","nodeType":"VariableDeclaration","scope":35472,"src":"80061:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35466,"name":"string","nodeType":"ElementaryTypeName","src":"80061:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80017:76:89"},"returnParameters":{"id":35471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35472,"src":"80141:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35469,"name":"bytes","nodeType":"ElementaryTypeName","src":"80141:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80140:14:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35482,"nodeType":"FunctionDefinition","src":"80236:98:89","nodes":[],"documentation":{"id":35473,"nodeType":"StructuredDocumentation","src":"80161:70:89","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"80245:13:89","parameters":{"id":35478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35475,"mutability":"mutable","name":"toml","nameLocation":"80275:4:89","nodeType":"VariableDeclaration","scope":35482,"src":"80259:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35474,"name":"string","nodeType":"ElementaryTypeName","src":"80259:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35477,"mutability":"mutable","name":"key","nameLocation":"80297:3:89","nodeType":"VariableDeclaration","scope":35482,"src":"80281:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35476,"name":"string","nodeType":"ElementaryTypeName","src":"80281:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80258:43:89"},"returnParameters":{"id":35481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35482,"src":"80325:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35479,"name":"uint256","nodeType":"ElementaryTypeName","src":"80325:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80324:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35493,"nodeType":"FunctionDefinition","src":"80417:112:89","nodes":[],"documentation":{"id":35483,"nodeType":"StructuredDocumentation","src":"80340:72:89","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"80426:18:89","parameters":{"id":35488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35485,"mutability":"mutable","name":"toml","nameLocation":"80461:4:89","nodeType":"VariableDeclaration","scope":35493,"src":"80445:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35484,"name":"string","nodeType":"ElementaryTypeName","src":"80445:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35487,"mutability":"mutable","name":"key","nameLocation":"80483:3:89","nodeType":"VariableDeclaration","scope":35493,"src":"80467:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35486,"name":"string","nodeType":"ElementaryTypeName","src":"80467:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80444:43:89"},"returnParameters":{"id":35492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35493,"src":"80511:16:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":35489,"name":"uint256","nodeType":"ElementaryTypeName","src":"80511:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":35490,"nodeType":"ArrayTypeName","src":"80511:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"80510:18:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35501,"nodeType":"FunctionDefinition","src":"80569:93:89","nodes":[],"documentation":{"id":35494,"nodeType":"StructuredDocumentation","src":"80535:29:89","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"80578:9:89","parameters":{"id":35497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35496,"mutability":"mutable","name":"toml","nameLocation":"80604:4:89","nodeType":"VariableDeclaration","scope":35501,"src":"80588:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35495,"name":"string","nodeType":"ElementaryTypeName","src":"80588:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80587:22:89"},"returnParameters":{"id":35500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35499,"mutability":"mutable","name":"abiEncodedData","nameLocation":"80646:14:89","nodeType":"VariableDeclaration","scope":35501,"src":"80633:27:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35498,"name":"bytes","nodeType":"ElementaryTypeName","src":"80633:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80632:29:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35511,"nodeType":"FunctionDefinition","src":"80711:114:89","nodes":[],"documentation":{"id":35502,"nodeType":"StructuredDocumentation","src":"80668:38:89","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"80720:9:89","parameters":{"id":35507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35504,"mutability":"mutable","name":"toml","nameLocation":"80746:4:89","nodeType":"VariableDeclaration","scope":35511,"src":"80730:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35503,"name":"string","nodeType":"ElementaryTypeName","src":"80730:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35506,"mutability":"mutable","name":"key","nameLocation":"80768:3:89","nodeType":"VariableDeclaration","scope":35511,"src":"80752:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35505,"name":"string","nodeType":"ElementaryTypeName","src":"80752:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80729:43:89"},"returnParameters":{"id":35510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35509,"mutability":"mutable","name":"abiEncodedData","nameLocation":"80809:14:89","nodeType":"VariableDeclaration","scope":35511,"src":"80796:27:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35508,"name":"bytes","nodeType":"ElementaryTypeName","src":"80796:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80795:29:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35519,"nodeType":"FunctionDefinition","src":"80918:72:89","nodes":[],"documentation":{"id":35512,"nodeType":"StructuredDocumentation","src":"80831:82:89","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"80927:9:89","parameters":{"id":35517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35514,"mutability":"mutable","name":"json","nameLocation":"80953:4:89","nodeType":"VariableDeclaration","scope":35519,"src":"80937:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35513,"name":"string","nodeType":"ElementaryTypeName","src":"80937:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35516,"mutability":"mutable","name":"path","nameLocation":"80975:4:89","nodeType":"VariableDeclaration","scope":35519,"src":"80959:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35515,"name":"string","nodeType":"ElementaryTypeName","src":"80959:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80936:44:89"},"returnParameters":{"id":35518,"nodeType":"ParameterList","parameters":[],"src":"80989:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35529,"nodeType":"FunctionDefinition","src":"81259:98:89","nodes":[],"documentation":{"id":35520,"nodeType":"StructuredDocumentation","src":"80996:258:89","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"81268:9:89","parameters":{"id":35527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35522,"mutability":"mutable","name":"json","nameLocation":"81294:4:89","nodeType":"VariableDeclaration","scope":35529,"src":"81278:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35521,"name":"string","nodeType":"ElementaryTypeName","src":"81278:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35524,"mutability":"mutable","name":"path","nameLocation":"81316:4:89","nodeType":"VariableDeclaration","scope":35529,"src":"81300:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35523,"name":"string","nodeType":"ElementaryTypeName","src":"81300:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35526,"mutability":"mutable","name":"valueKey","nameLocation":"81338:8:89","nodeType":"VariableDeclaration","scope":35529,"src":"81322:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35525,"name":"string","nodeType":"ElementaryTypeName","src":"81322:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81277:70:89"},"returnParameters":{"id":35528,"nodeType":"ParameterList","parameters":[],"src":"81356:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35541,"nodeType":"FunctionDefinition","src":"81496:141:89","nodes":[],"documentation":{"id":35530,"nodeType":"StructuredDocumentation","src":"81399:92:89","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"81505:21:89","parameters":{"id":35537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35532,"mutability":"mutable","name":"salt","nameLocation":"81535:4:89","nodeType":"VariableDeclaration","scope":35541,"src":"81527:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81527:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":35534,"mutability":"mutable","name":"initCodeHash","nameLocation":"81549:12:89","nodeType":"VariableDeclaration","scope":35541,"src":"81541:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81541:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":35536,"mutability":"mutable","name":"deployer","nameLocation":"81571:8:89","nodeType":"VariableDeclaration","scope":35541,"src":"81563:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35535,"name":"address","nodeType":"ElementaryTypeName","src":"81563:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81526:54:89"},"returnParameters":{"id":35540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35541,"src":"81628:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35538,"name":"address","nodeType":"ElementaryTypeName","src":"81628:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81627:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35551,"nodeType":"FunctionDefinition","src":"81742:99:89","nodes":[],"documentation":{"id":35542,"nodeType":"StructuredDocumentation","src":"81643:94:89","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"81751:21:89","parameters":{"id":35547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35544,"mutability":"mutable","name":"salt","nameLocation":"81781:4:89","nodeType":"VariableDeclaration","scope":35551,"src":"81773:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81773:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":35546,"mutability":"mutable","name":"initCodeHash","nameLocation":"81795:12:89","nodeType":"VariableDeclaration","scope":35551,"src":"81787:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81787:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"81772:36:89"},"returnParameters":{"id":35550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35551,"src":"81832:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35548,"name":"address","nodeType":"ElementaryTypeName","src":"81832:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81831:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35561,"nodeType":"FunctionDefinition","src":"81946:95:89","nodes":[],"documentation":{"id":35552,"nodeType":"StructuredDocumentation","src":"81847:94:89","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"81955:20:89","parameters":{"id":35557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35554,"mutability":"mutable","name":"deployer","nameLocation":"81984:8:89","nodeType":"VariableDeclaration","scope":35561,"src":"81976:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35553,"name":"address","nodeType":"ElementaryTypeName","src":"81976:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35556,"mutability":"mutable","name":"nonce","nameLocation":"82002:5:89","nodeType":"VariableDeclaration","scope":35561,"src":"81994:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35555,"name":"uint256","nodeType":"ElementaryTypeName","src":"81994:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81975:33:89"},"returnParameters":{"id":35560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35561,"src":"82032:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35558,"name":"address","nodeType":"ElementaryTypeName","src":"82032:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82031:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35569,"nodeType":"FunctionDefinition","src":"82134:56:89","nodes":[],"documentation":{"id":35562,"nodeType":"StructuredDocumentation","src":"82047:82:89","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"82143:11:89","parameters":{"id":35567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35564,"mutability":"mutable","name":"from","nameLocation":"82163:4:89","nodeType":"VariableDeclaration","scope":35569,"src":"82155:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35563,"name":"address","nodeType":"ElementaryTypeName","src":"82155:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35566,"mutability":"mutable","name":"to","nameLocation":"82177:2:89","nodeType":"VariableDeclaration","scope":35569,"src":"82169:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35565,"name":"address","nodeType":"ElementaryTypeName","src":"82169:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82154:26:89"},"returnParameters":{"id":35568,"nodeType":"ParameterList","parameters":[],"src":"82189:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35577,"nodeType":"FunctionDefinition","src":"82246:75:89","nodes":[],"documentation":{"id":35570,"nodeType":"StructuredDocumentation","src":"82196:45:89","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"82255:11:89","parameters":{"id":35573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35572,"mutability":"mutable","name":"name","nameLocation":"82283:4:89","nodeType":"VariableDeclaration","scope":35577,"src":"82267:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35571,"name":"string","nodeType":"ElementaryTypeName","src":"82267:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82266:22:89"},"returnParameters":{"id":35576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35577,"src":"82312:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82312:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82311:9:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35585,"nodeType":"FunctionDefinition","src":"82377:86:89","nodes":[],"documentation":{"id":35578,"nodeType":"StructuredDocumentation","src":"82327:45:89","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"82386:8:89","parameters":{"id":35581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35580,"mutability":"mutable","name":"account","nameLocation":"82403:7:89","nodeType":"VariableDeclaration","scope":35585,"src":"82395:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35579,"name":"address","nodeType":"ElementaryTypeName","src":"82395:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82394:17:89"},"returnParameters":{"id":35584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35583,"mutability":"mutable","name":"currentLabel","nameLocation":"82449:12:89","nodeType":"VariableDeclaration","scope":35585,"src":"82435:26:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35582,"name":"string","nodeType":"ElementaryTypeName","src":"82435:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82434:28:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35593,"nodeType":"FunctionDefinition","src":"82511:67:89","nodes":[],"documentation":{"id":35586,"nodeType":"StructuredDocumentation","src":"82469:37:89","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"82520:5:89","parameters":{"id":35591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35588,"mutability":"mutable","name":"account","nameLocation":"82534:7:89","nodeType":"VariableDeclaration","scope":35593,"src":"82526:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35587,"name":"address","nodeType":"ElementaryTypeName","src":"82526:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35590,"mutability":"mutable","name":"newLabel","nameLocation":"82559:8:89","nodeType":"VariableDeclaration","scope":35593,"src":"82543:24:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35589,"name":"string","nodeType":"ElementaryTypeName","src":"82543:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82525:43:89"},"returnParameters":{"id":35592,"nodeType":"ParameterList","parameters":[],"src":"82577:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35597,"nodeType":"FunctionDefinition","src":"82733:38:89","nodes":[],"documentation":{"id":35594,"nodeType":"StructuredDocumentation","src":"82584:144:89","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"82742:12:89","parameters":{"id":35595,"nodeType":"ParameterList","parameters":[],"src":"82754:2:89"},"returnParameters":{"id":35596,"nodeType":"ParameterList","parameters":[],"src":"82770:0:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35603,"nodeType":"FunctionDefinition","src":"82813:52:89","nodes":[],"documentation":{"id":35598,"nodeType":"StructuredDocumentation","src":"82777:31:89","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"82822:13:89","parameters":{"id":35599,"nodeType":"ParameterList","parameters":[],"src":"82835:2:89"},"returnParameters":{"id":35602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35603,"src":"82856:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35600,"name":"address","nodeType":"ElementaryTypeName","src":"82856:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82855:9:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35609,"nodeType":"FunctionDefinition","src":"82905:51:89","nodes":[],"documentation":{"id":35604,"nodeType":"StructuredDocumentation","src":"82871:29:89","text":"Returns an random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"82914:10:89","parameters":{"id":35605,"nodeType":"ParameterList","parameters":[],"src":"82924:2:89"},"returnParameters":{"id":35608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35609,"src":"82950:4:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35606,"name":"bool","nodeType":"ElementaryTypeName","src":"82950:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82949:6:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35617,"nodeType":"FunctionDefinition","src":"83026:71:89","nodes":[],"documentation":{"id":35610,"nodeType":"StructuredDocumentation","src":"82962:59:89","text":"Returns an random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"83035:11:89","parameters":{"id":35613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35612,"mutability":"mutable","name":"len","nameLocation":"83055:3:89","nodeType":"VariableDeclaration","scope":35617,"src":"83047:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35611,"name":"uint256","nodeType":"ElementaryTypeName","src":"83047:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83046:13:89"},"returnParameters":{"id":35616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35617,"src":"83083:12:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":35614,"name":"bytes","nodeType":"ElementaryTypeName","src":"83083:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83082:14:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35623,"nodeType":"FunctionDefinition","src":"83145:52:89","nodes":[],"documentation":{"id":35618,"nodeType":"StructuredDocumentation","src":"83103:37:89","text":"Returns an random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"83154:9:89","parameters":{"id":35619,"nodeType":"ParameterList","parameters":[],"src":"83163:2:89"},"returnParameters":{"id":35622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35623,"src":"83189:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35620,"name":"int256","nodeType":"ElementaryTypeName","src":"83189:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"83188:8:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35631,"nodeType":"FunctionDefinition","src":"83259:64:89","nodes":[],"documentation":{"id":35624,"nodeType":"StructuredDocumentation","src":"83203:51:89","text":"Returns an random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"83268:9:89","parameters":{"id":35627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35626,"mutability":"mutable","name":"bits","nameLocation":"83286:4:89","nodeType":"VariableDeclaration","scope":35631,"src":"83278:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35625,"name":"uint256","nodeType":"ElementaryTypeName","src":"83278:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83277:14:89"},"returnParameters":{"id":35630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35631,"src":"83315:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35628,"name":"int256","nodeType":"ElementaryTypeName","src":"83315:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"83314:8:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35637,"nodeType":"FunctionDefinition","src":"83369:49:89","nodes":[],"documentation":{"id":35632,"nodeType":"StructuredDocumentation","src":"83329:35:89","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"83378:10:89","parameters":{"id":35633,"nodeType":"ParameterList","parameters":[],"src":"83388:2:89"},"returnParameters":{"id":35636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35637,"src":"83409:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35634,"name":"uint256","nodeType":"ElementaryTypeName","src":"83409:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83408:9:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35647,"nodeType":"FunctionDefinition","src":"83502:73:89","nodes":[],"documentation":{"id":35638,"nodeType":"StructuredDocumentation","src":"83424:73:89","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"83511:10:89","parameters":{"id":35643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35640,"mutability":"mutable","name":"min","nameLocation":"83530:3:89","nodeType":"VariableDeclaration","scope":35647,"src":"83522:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35639,"name":"uint256","nodeType":"ElementaryTypeName","src":"83522:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35642,"mutability":"mutable","name":"max","nameLocation":"83543:3:89","nodeType":"VariableDeclaration","scope":35647,"src":"83535:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35641,"name":"uint256","nodeType":"ElementaryTypeName","src":"83535:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83521:26:89"},"returnParameters":{"id":35646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35647,"src":"83566:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35644,"name":"uint256","nodeType":"ElementaryTypeName","src":"83566:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83565:9:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35655,"nodeType":"FunctionDefinition","src":"83638:66:89","nodes":[],"documentation":{"id":35648,"nodeType":"StructuredDocumentation","src":"83581:52:89","text":"Returns an random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"83647:10:89","parameters":{"id":35651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35650,"mutability":"mutable","name":"bits","nameLocation":"83666:4:89","nodeType":"VariableDeclaration","scope":35655,"src":"83658:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35649,"name":"uint256","nodeType":"ElementaryTypeName","src":"83658:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83657:14:89"},"returnParameters":{"id":35654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35655,"src":"83695:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35652,"name":"uint256","nodeType":"ElementaryTypeName","src":"83695:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83694:9:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35659,"nodeType":"FunctionDefinition","src":"83754:39:89","nodes":[],"documentation":{"id":35656,"nodeType":"StructuredDocumentation","src":"83710:39:89","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"83763:13:89","parameters":{"id":35657,"nodeType":"ParameterList","parameters":[],"src":"83776:2:89"},"returnParameters":{"id":35658,"nodeType":"ParameterList","parameters":[],"src":"83792:0:89"},"scope":35698,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35665,"nodeType":"FunctionDefinition","src":"83876:54:89","nodes":[],"documentation":{"id":35660,"nodeType":"StructuredDocumentation","src":"83799:72:89","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"83885:19:89","parameters":{"id":35663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35662,"mutability":"mutable","name":"target","nameLocation":"83913:6:89","nodeType":"VariableDeclaration","scope":35665,"src":"83905:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35661,"name":"address","nodeType":"ElementaryTypeName","src":"83905:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83904:16:89"},"returnParameters":{"id":35664,"nodeType":"ParameterList","parameters":[],"src":"83929:0:89"},"scope":35698,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35673,"nodeType":"FunctionDefinition","src":"83991:80:89","nodes":[],"documentation":{"id":35666,"nodeType":"StructuredDocumentation","src":"83936:50:89","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"84000:11:89","parameters":{"id":35669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35668,"mutability":"mutable","name":"data","nameLocation":"84027:4:89","nodeType":"VariableDeclaration","scope":35673,"src":"84012:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35667,"name":"bytes","nodeType":"ElementaryTypeName","src":"84012:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84011:21:89"},"returnParameters":{"id":35672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35673,"src":"84056:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35670,"name":"string","nodeType":"ElementaryTypeName","src":"84056:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84055:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35681,"nodeType":"FunctionDefinition","src":"84133:81:89","nodes":[],"documentation":{"id":35674,"nodeType":"StructuredDocumentation","src":"84077:51:89","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"84142:11:89","parameters":{"id":35677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35676,"mutability":"mutable","name":"data","nameLocation":"84170:4:89","nodeType":"VariableDeclaration","scope":35681,"src":"84154:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35675,"name":"string","nodeType":"ElementaryTypeName","src":"84154:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84153:22:89"},"returnParameters":{"id":35680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35681,"src":"84199:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35678,"name":"string","nodeType":"ElementaryTypeName","src":"84199:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84198:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35689,"nodeType":"FunctionDefinition","src":"84272:77:89","nodes":[],"documentation":{"id":35682,"nodeType":"StructuredDocumentation","src":"84220:47:89","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"84281:8:89","parameters":{"id":35685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35684,"mutability":"mutable","name":"data","nameLocation":"84305:4:89","nodeType":"VariableDeclaration","scope":35689,"src":"84290:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35683,"name":"bytes","nodeType":"ElementaryTypeName","src":"84290:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84289:21:89"},"returnParameters":{"id":35688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35689,"src":"84334:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35686,"name":"string","nodeType":"ElementaryTypeName","src":"84334:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84333:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":35697,"nodeType":"FunctionDefinition","src":"84408:78:89","nodes":[],"documentation":{"id":35690,"nodeType":"StructuredDocumentation","src":"84355:48:89","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"84417:8:89","parameters":{"id":35693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35692,"mutability":"mutable","name":"data","nameLocation":"84442:4:89","nodeType":"VariableDeclaration","scope":35697,"src":"84426:20:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35691,"name":"string","nodeType":"ElementaryTypeName","src":"84426:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84425:22:89"},"returnParameters":{"id":35696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35697,"src":"84471:13:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35694,"name":"string","nodeType":"ElementaryTypeName","src":"84471:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84470:15:89"},"scope":35698,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":32187,"nodeType":"StructuredDocumentation","src":"184:225:89","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[35698],"name":"VmSafe","nameLocation":"419:6:89","scope":36402,"usedErrors":[],"usedEvents":[]},{"id":36401,"nodeType":"ContractDefinition","src":"84661:17426:89","nodes":[{"id":35707,"nodeType":"FunctionDefinition","src":"84821:61:89","nodes":[],"documentation":{"id":35702,"nodeType":"StructuredDocumentation","src":"84720:96:89","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"84830:10:89","parameters":{"id":35703,"nodeType":"ParameterList","parameters":[],"src":"84840:2:89"},"returnParameters":{"id":35706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35705,"mutability":"mutable","name":"forkId","nameLocation":"84874:6:89","nodeType":"VariableDeclaration","scope":35707,"src":"84866:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35704,"name":"uint256","nodeType":"ElementaryTypeName","src":"84866:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84865:16:89"},"scope":36401,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35713,"nodeType":"FunctionDefinition","src":"84966:51:89","nodes":[],"documentation":{"id":35708,"nodeType":"StructuredDocumentation","src":"84888:73:89","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"84975:15:89","parameters":{"id":35711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35710,"mutability":"mutable","name":"account","nameLocation":"84999:7:89","nodeType":"VariableDeclaration","scope":35713,"src":"84991:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35709,"name":"address","nodeType":"ElementaryTypeName","src":"84991:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84990:17:89"},"returnParameters":{"id":35712,"nodeType":"ParameterList","parameters":[],"src":"85016:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35719,"nodeType":"FunctionDefinition","src":"85056:54:89","nodes":[],"documentation":{"id":35714,"nodeType":"StructuredDocumentation","src":"85023:28:89","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"85065:11:89","parameters":{"id":35717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35716,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"85085:14:89","nodeType":"VariableDeclaration","scope":35719,"src":"85077:22:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35715,"name":"uint256","nodeType":"ElementaryTypeName","src":"85077:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85076:24:89"},"returnParameters":{"id":35718,"nodeType":"ParameterList","parameters":[],"src":"85109:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35726,"nodeType":"FunctionDefinition","src":"85277:56:89","nodes":[],"documentation":{"id":35720,"nodeType":"StructuredDocumentation","src":"85116:156:89","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"85286:10:89","parameters":{"id":35724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35723,"mutability":"mutable","name":"hashes","nameLocation":"85316:6:89","nodeType":"VariableDeclaration","scope":35726,"src":"85297:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":35721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85297:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":35722,"nodeType":"ArrayTypeName","src":"85297:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"85296:27:89"},"returnParameters":{"id":35725,"nodeType":"ParameterList","parameters":[],"src":"85332:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35732,"nodeType":"FunctionDefinition","src":"85369:46:89","nodes":[],"documentation":{"id":35727,"nodeType":"StructuredDocumentation","src":"85339:25:89","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"85378:7:89","parameters":{"id":35730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35729,"mutability":"mutable","name":"newChainId","nameLocation":"85394:10:89","nodeType":"VariableDeclaration","scope":35732,"src":"85386:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35728,"name":"uint256","nodeType":"ElementaryTypeName","src":"85386:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85385:20:89"},"returnParameters":{"id":35731,"nodeType":"ParameterList","parameters":[],"src":"85414:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35736,"nodeType":"FunctionDefinition","src":"85454:37:89","nodes":[],"documentation":{"id":35733,"nodeType":"StructuredDocumentation","src":"85421:28:89","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"85463:16:89","parameters":{"id":35734,"nodeType":"ParameterList","parameters":[],"src":"85479:2:89"},"returnParameters":{"id":35735,"nodeType":"ParameterList","parameters":[],"src":"85490:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35742,"nodeType":"FunctionDefinition","src":"85528:48:89","nodes":[],"documentation":{"id":35737,"nodeType":"StructuredDocumentation","src":"85497:26:89","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"85537:8:89","parameters":{"id":35740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35739,"mutability":"mutable","name":"newCoinbase","nameLocation":"85554:11:89","nodeType":"VariableDeclaration","scope":35742,"src":"85546:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35738,"name":"address","nodeType":"ElementaryTypeName","src":"85546:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85545:21:89"},"returnParameters":{"id":35741,"nodeType":"ParameterList","parameters":[],"src":"85575:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35750,"nodeType":"FunctionDefinition","src":"85696:82:89","nodes":[],"documentation":{"id":35743,"nodeType":"StructuredDocumentation","src":"85582:109:89","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"85705:10:89","parameters":{"id":35746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35745,"mutability":"mutable","name":"urlOrAlias","nameLocation":"85732:10:89","nodeType":"VariableDeclaration","scope":35750,"src":"85716:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35744,"name":"string","nodeType":"ElementaryTypeName","src":"85716:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85715:28:89"},"returnParameters":{"id":35749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35748,"mutability":"mutable","name":"forkId","nameLocation":"85770:6:89","nodeType":"VariableDeclaration","scope":35750,"src":"85762:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35747,"name":"uint256","nodeType":"ElementaryTypeName","src":"85762:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85761:16:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35760,"nodeType":"FunctionDefinition","src":"85885:103:89","nodes":[],"documentation":{"id":35751,"nodeType":"StructuredDocumentation","src":"85784:96:89","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"85894:10:89","parameters":{"id":35756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35753,"mutability":"mutable","name":"urlOrAlias","nameLocation":"85921:10:89","nodeType":"VariableDeclaration","scope":35760,"src":"85905:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35752,"name":"string","nodeType":"ElementaryTypeName","src":"85905:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35755,"mutability":"mutable","name":"blockNumber","nameLocation":"85941:11:89","nodeType":"VariableDeclaration","scope":35760,"src":"85933:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35754,"name":"uint256","nodeType":"ElementaryTypeName","src":"85933:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85904:49:89"},"returnParameters":{"id":35759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35758,"mutability":"mutable","name":"forkId","nameLocation":"85980:6:89","nodeType":"VariableDeclaration","scope":35760,"src":"85972:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35757,"name":"uint256","nodeType":"ElementaryTypeName","src":"85972:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85971:16:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35770,"nodeType":"FunctionDefinition","src":"86213:98:89","nodes":[],"documentation":{"id":35761,"nodeType":"StructuredDocumentation","src":"85994:214:89","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"86222:10:89","parameters":{"id":35766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35763,"mutability":"mutable","name":"urlOrAlias","nameLocation":"86249:10:89","nodeType":"VariableDeclaration","scope":35770,"src":"86233:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35762,"name":"string","nodeType":"ElementaryTypeName","src":"86233:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35765,"mutability":"mutable","name":"txHash","nameLocation":"86269:6:89","nodeType":"VariableDeclaration","scope":35770,"src":"86261:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86261:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86232:44:89"},"returnParameters":{"id":35769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35768,"mutability":"mutable","name":"forkId","nameLocation":"86303:6:89","nodeType":"VariableDeclaration","scope":35770,"src":"86295:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35767,"name":"uint256","nodeType":"ElementaryTypeName","src":"86295:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86294:16:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35778,"nodeType":"FunctionDefinition","src":"86446:88:89","nodes":[],"documentation":{"id":35771,"nodeType":"StructuredDocumentation","src":"86317:124:89","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"86455:16:89","parameters":{"id":35774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35773,"mutability":"mutable","name":"urlOrAlias","nameLocation":"86488:10:89","nodeType":"VariableDeclaration","scope":35778,"src":"86472:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35772,"name":"string","nodeType":"ElementaryTypeName","src":"86472:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86471:28:89"},"returnParameters":{"id":35777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35776,"mutability":"mutable","name":"forkId","nameLocation":"86526:6:89","nodeType":"VariableDeclaration","scope":35778,"src":"86518:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35775,"name":"uint256","nodeType":"ElementaryTypeName","src":"86518:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86517:16:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35788,"nodeType":"FunctionDefinition","src":"86658:109:89","nodes":[],"documentation":{"id":35779,"nodeType":"StructuredDocumentation","src":"86540:113:89","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"86667:16:89","parameters":{"id":35784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35781,"mutability":"mutable","name":"urlOrAlias","nameLocation":"86700:10:89","nodeType":"VariableDeclaration","scope":35788,"src":"86684:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35780,"name":"string","nodeType":"ElementaryTypeName","src":"86684:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35783,"mutability":"mutable","name":"blockNumber","nameLocation":"86720:11:89","nodeType":"VariableDeclaration","scope":35788,"src":"86712:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35782,"name":"uint256","nodeType":"ElementaryTypeName","src":"86712:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86683:49:89"},"returnParameters":{"id":35787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35786,"mutability":"mutable","name":"forkId","nameLocation":"86759:6:89","nodeType":"VariableDeclaration","scope":35788,"src":"86751:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35785,"name":"uint256","nodeType":"ElementaryTypeName","src":"86751:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86750:16:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35798,"nodeType":"FunctionDefinition","src":"87003:104:89","nodes":[],"documentation":{"id":35789,"nodeType":"StructuredDocumentation","src":"86773:225:89","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"87012:16:89","parameters":{"id":35794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35791,"mutability":"mutable","name":"urlOrAlias","nameLocation":"87045:10:89","nodeType":"VariableDeclaration","scope":35798,"src":"87029:26:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35790,"name":"string","nodeType":"ElementaryTypeName","src":"87029:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":35793,"mutability":"mutable","name":"txHash","nameLocation":"87065:6:89","nodeType":"VariableDeclaration","scope":35798,"src":"87057:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87057:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87028:44:89"},"returnParameters":{"id":35797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35796,"mutability":"mutable","name":"forkId","nameLocation":"87099:6:89","nodeType":"VariableDeclaration","scope":35798,"src":"87091:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35795,"name":"uint256","nodeType":"ElementaryTypeName","src":"87091:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87090:16:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35806,"nodeType":"FunctionDefinition","src":"87147:60:89","nodes":[],"documentation":{"id":35799,"nodeType":"StructuredDocumentation","src":"87113:29:89","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"87156:4:89","parameters":{"id":35804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35801,"mutability":"mutable","name":"account","nameLocation":"87169:7:89","nodeType":"VariableDeclaration","scope":35806,"src":"87161:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35800,"name":"address","nodeType":"ElementaryTypeName","src":"87161:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35803,"mutability":"mutable","name":"newBalance","nameLocation":"87186:10:89","nodeType":"VariableDeclaration","scope":35806,"src":"87178:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35802,"name":"uint256","nodeType":"ElementaryTypeName","src":"87178:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87160:37:89"},"returnParameters":{"id":35805,"nodeType":"ParameterList","parameters":[],"src":"87206:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35814,"nodeType":"FunctionDefinition","src":"87445:76:89","nodes":[],"documentation":{"id":35807,"nodeType":"StructuredDocumentation","src":"87213:227:89","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"87454:14:89","parameters":{"id":35810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35809,"mutability":"mutable","name":"snapshotId","nameLocation":"87477:10:89","nodeType":"VariableDeclaration","scope":35814,"src":"87469:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35808,"name":"uint256","nodeType":"ElementaryTypeName","src":"87469:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87468:20:89"},"returnParameters":{"id":35813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35812,"mutability":"mutable","name":"success","nameLocation":"87512:7:89","nodeType":"VariableDeclaration","scope":35814,"src":"87507:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35811,"name":"bool","nodeType":"ElementaryTypeName","src":"87507:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"87506:14:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35818,"nodeType":"FunctionDefinition","src":"87593:36:89","nodes":[],"documentation":{"id":35815,"nodeType":"StructuredDocumentation","src":"87527:61:89","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"87602:15:89","parameters":{"id":35816,"nodeType":"ParameterList","parameters":[],"src":"87617:2:89"},"returnParameters":{"id":35817,"nodeType":"ParameterList","parameters":[],"src":"87628:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35824,"nodeType":"FunctionDefinition","src":"87805:52:89","nodes":[],"documentation":{"id":35819,"nodeType":"StructuredDocumentation","src":"87635:165:89","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"87814:10:89","parameters":{"id":35822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35821,"mutability":"mutable","name":"newDifficulty","nameLocation":"87833:13:89","nodeType":"VariableDeclaration","scope":35824,"src":"87825:21:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35820,"name":"uint256","nodeType":"ElementaryTypeName","src":"87825:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87824:23:89"},"returnParameters":{"id":35823,"nodeType":"ParameterList","parameters":[],"src":"87856:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35830,"nodeType":"FunctionDefinition","src":"87916:61:89","nodes":[],"documentation":{"id":35825,"nodeType":"StructuredDocumentation","src":"87863:48:89","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"87925:9:89","parameters":{"id":35828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35827,"mutability":"mutable","name":"pathToStateJson","nameLocation":"87951:15:89","nodeType":"VariableDeclaration","scope":35830,"src":"87935:31:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35826,"name":"string","nodeType":"ElementaryTypeName","src":"87935:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87934:33:89"},"returnParameters":{"id":35829,"nodeType":"ParameterList","parameters":[],"src":"87976:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35838,"nodeType":"FunctionDefinition","src":"88014:74:89","nodes":[],"documentation":{"id":35831,"nodeType":"StructuredDocumentation","src":"87983:26:89","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"88023:4:89","parameters":{"id":35836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35833,"mutability":"mutable","name":"target","nameLocation":"88036:6:89","nodeType":"VariableDeclaration","scope":35838,"src":"88028:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35832,"name":"address","nodeType":"ElementaryTypeName","src":"88028:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35835,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"88059:18:89","nodeType":"VariableDeclaration","scope":35838,"src":"88044:33:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35834,"name":"bytes","nodeType":"ElementaryTypeName","src":"88044:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88027:51:89"},"returnParameters":{"id":35837,"nodeType":"ParameterList","parameters":[],"src":"88087:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35844,"nodeType":"FunctionDefinition","src":"88124:42:89","nodes":[],"documentation":{"id":35839,"nodeType":"StructuredDocumentation","src":"88094:25:89","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"88133:3:89","parameters":{"id":35842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35841,"mutability":"mutable","name":"newBasefee","nameLocation":"88145:10:89","nodeType":"VariableDeclaration","scope":35844,"src":"88137:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35840,"name":"uint256","nodeType":"ElementaryTypeName","src":"88137:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88136:20:89"},"returnParameters":{"id":35843,"nodeType":"ParameterList","parameters":[],"src":"88165:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35851,"nodeType":"FunctionDefinition","src":"88344:73:89","nodes":[],"documentation":{"id":35845,"nodeType":"StructuredDocumentation","src":"88172:167:89","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"88353:13:89","parameters":{"id":35846,"nodeType":"ParameterList","parameters":[],"src":"88366:2:89"},"returnParameters":{"id":35850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35849,"mutability":"mutable","name":"hashes","nameLocation":"88409:6:89","nodeType":"VariableDeclaration","scope":35851,"src":"88392:23:89","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":35847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88392:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":35848,"nodeType":"ArrayTypeName","src":"88392:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"88391:25:89"},"scope":36401,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35859,"nodeType":"FunctionDefinition","src":"88484:79:89","nodes":[],"documentation":{"id":35852,"nodeType":"StructuredDocumentation","src":"88423:56:89","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"88493:12:89","parameters":{"id":35855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35854,"mutability":"mutable","name":"account","nameLocation":"88514:7:89","nodeType":"VariableDeclaration","scope":35859,"src":"88506:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35853,"name":"address","nodeType":"ElementaryTypeName","src":"88506:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88505:17:89"},"returnParameters":{"id":35858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35857,"mutability":"mutable","name":"persistent","nameLocation":"88551:10:89","nodeType":"VariableDeclaration","scope":35859,"src":"88546:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35856,"name":"bool","nodeType":"ElementaryTypeName","src":"88546:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88545:17:89"},"scope":36401,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35865,"nodeType":"FunctionDefinition","src":"88644:63:89","nodes":[],"documentation":{"id":35860,"nodeType":"StructuredDocumentation","src":"88569:70:89","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"88653:10:89","parameters":{"id":35863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35862,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"88680:16:89","nodeType":"VariableDeclaration","scope":35865,"src":"88664:32:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":35861,"name":"string","nodeType":"ElementaryTypeName","src":"88664:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88663:34:89"},"returnParameters":{"id":35864,"nodeType":"ParameterList","parameters":[],"src":"88706:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35871,"nodeType":"FunctionDefinition","src":"88910:50:89","nodes":[],"documentation":{"id":35866,"nodeType":"StructuredDocumentation","src":"88713:192:89","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"88919:14:89","parameters":{"id":35869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35868,"mutability":"mutable","name":"account","nameLocation":"88942:7:89","nodeType":"VariableDeclaration","scope":35871,"src":"88934:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35867,"name":"address","nodeType":"ElementaryTypeName","src":"88934:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88933:17:89"},"returnParameters":{"id":35870,"nodeType":"ParameterList","parameters":[],"src":"88959:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35879,"nodeType":"FunctionDefinition","src":"89005:69:89","nodes":[],"documentation":{"id":35872,"nodeType":"StructuredDocumentation","src":"88966:34:89","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"89014:14:89","parameters":{"id":35877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35874,"mutability":"mutable","name":"account0","nameLocation":"89037:8:89","nodeType":"VariableDeclaration","scope":35879,"src":"89029:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35873,"name":"address","nodeType":"ElementaryTypeName","src":"89029:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35876,"mutability":"mutable","name":"account1","nameLocation":"89055:8:89","nodeType":"VariableDeclaration","scope":35879,"src":"89047:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35875,"name":"address","nodeType":"ElementaryTypeName","src":"89047:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89028:36:89"},"returnParameters":{"id":35878,"nodeType":"ParameterList","parameters":[],"src":"89073:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35889,"nodeType":"FunctionDefinition","src":"89119:87:89","nodes":[],"documentation":{"id":35880,"nodeType":"StructuredDocumentation","src":"89080:34:89","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"89128:14:89","parameters":{"id":35887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35882,"mutability":"mutable","name":"account0","nameLocation":"89151:8:89","nodeType":"VariableDeclaration","scope":35889,"src":"89143:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35881,"name":"address","nodeType":"ElementaryTypeName","src":"89143:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35884,"mutability":"mutable","name":"account1","nameLocation":"89169:8:89","nodeType":"VariableDeclaration","scope":35889,"src":"89161:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35883,"name":"address","nodeType":"ElementaryTypeName","src":"89161:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35886,"mutability":"mutable","name":"account2","nameLocation":"89187:8:89","nodeType":"VariableDeclaration","scope":35889,"src":"89179:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35885,"name":"address","nodeType":"ElementaryTypeName","src":"89179:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89142:54:89"},"returnParameters":{"id":35888,"nodeType":"ParameterList","parameters":[],"src":"89205:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35896,"nodeType":"FunctionDefinition","src":"89251:62:89","nodes":[],"documentation":{"id":35890,"nodeType":"StructuredDocumentation","src":"89212:34:89","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"89260:14:89","parameters":{"id":35894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35893,"mutability":"mutable","name":"accounts","nameLocation":"89294:8:89","nodeType":"VariableDeclaration","scope":35896,"src":"89275:27:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":35891,"name":"address","nodeType":"ElementaryTypeName","src":"89275:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":35892,"nodeType":"ArrayTypeName","src":"89275:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"89274:29:89"},"returnParameters":{"id":35895,"nodeType":"ParameterList","parameters":[],"src":"89312:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35906,"nodeType":"FunctionDefinition","src":"89384:97:89","nodes":[],"documentation":{"id":35897,"nodeType":"StructuredDocumentation","src":"89319:60:89","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"89393:14:89","parameters":{"id":35904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35899,"mutability":"mutable","name":"callee","nameLocation":"89416:6:89","nodeType":"VariableDeclaration","scope":35906,"src":"89408:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35898,"name":"address","nodeType":"ElementaryTypeName","src":"89408:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35901,"mutability":"mutable","name":"data","nameLocation":"89439:4:89","nodeType":"VariableDeclaration","scope":35906,"src":"89424:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35900,"name":"bytes","nodeType":"ElementaryTypeName","src":"89424:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":35903,"mutability":"mutable","name":"revertData","nameLocation":"89460:10:89","nodeType":"VariableDeclaration","scope":35906,"src":"89445:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35902,"name":"bytes","nodeType":"ElementaryTypeName","src":"89445:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89407:64:89"},"returnParameters":{"id":35905,"nodeType":"ParameterList","parameters":[],"src":"89480:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35918,"nodeType":"FunctionDefinition","src":"89581:123:89","nodes":[],"documentation":{"id":35907,"nodeType":"StructuredDocumentation","src":"89487:89:89","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"89590:14:89","parameters":{"id":35916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35909,"mutability":"mutable","name":"callee","nameLocation":"89613:6:89","nodeType":"VariableDeclaration","scope":35918,"src":"89605:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35908,"name":"address","nodeType":"ElementaryTypeName","src":"89605:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35911,"mutability":"mutable","name":"msgValue","nameLocation":"89629:8:89","nodeType":"VariableDeclaration","scope":35918,"src":"89621:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35910,"name":"uint256","nodeType":"ElementaryTypeName","src":"89621:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35913,"mutability":"mutable","name":"data","nameLocation":"89654:4:89","nodeType":"VariableDeclaration","scope":35918,"src":"89639:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35912,"name":"bytes","nodeType":"ElementaryTypeName","src":"89639:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":35915,"mutability":"mutable","name":"revertData","nameLocation":"89675:10:89","nodeType":"VariableDeclaration","scope":35918,"src":"89660:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35914,"name":"bytes","nodeType":"ElementaryTypeName","src":"89660:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89604:82:89"},"returnParameters":{"id":35917,"nodeType":"ParameterList","parameters":[],"src":"89703:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35928,"nodeType":"FunctionDefinition","src":"89964:91:89","nodes":[],"documentation":{"id":35919,"nodeType":"StructuredDocumentation","src":"89710:249:89","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"89973:8:89","parameters":{"id":35926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35921,"mutability":"mutable","name":"callee","nameLocation":"89990:6:89","nodeType":"VariableDeclaration","scope":35928,"src":"89982:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35920,"name":"address","nodeType":"ElementaryTypeName","src":"89982:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35923,"mutability":"mutable","name":"data","nameLocation":"90013:4:89","nodeType":"VariableDeclaration","scope":35928,"src":"89998:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35922,"name":"bytes","nodeType":"ElementaryTypeName","src":"89998:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":35925,"mutability":"mutable","name":"returnData","nameLocation":"90034:10:89","nodeType":"VariableDeclaration","scope":35928,"src":"90019:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35924,"name":"bytes","nodeType":"ElementaryTypeName","src":"90019:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89981:64:89"},"returnParameters":{"id":35927,"nodeType":"ParameterList","parameters":[],"src":"90054:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35940,"nodeType":"FunctionDefinition","src":"90230:109:89","nodes":[],"documentation":{"id":35929,"nodeType":"StructuredDocumentation","src":"90061:164:89","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"90239:8:89","parameters":{"id":35938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35931,"mutability":"mutable","name":"callee","nameLocation":"90256:6:89","nodeType":"VariableDeclaration","scope":35940,"src":"90248:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35930,"name":"address","nodeType":"ElementaryTypeName","src":"90248:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35933,"mutability":"mutable","name":"msgValue","nameLocation":"90272:8:89","nodeType":"VariableDeclaration","scope":35940,"src":"90264:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35932,"name":"uint256","nodeType":"ElementaryTypeName","src":"90264:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35935,"mutability":"mutable","name":"data","nameLocation":"90297:4:89","nodeType":"VariableDeclaration","scope":35940,"src":"90282:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35934,"name":"bytes","nodeType":"ElementaryTypeName","src":"90282:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":35937,"mutability":"mutable","name":"returnData","nameLocation":"90318:10:89","nodeType":"VariableDeclaration","scope":35940,"src":"90303:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35936,"name":"bytes","nodeType":"ElementaryTypeName","src":"90303:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90247:82:89"},"returnParameters":{"id":35939,"nodeType":"ParameterList","parameters":[],"src":"90338:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35950,"nodeType":"FunctionDefinition","src":"90845:84:89","nodes":[],"documentation":{"id":35941,"nodeType":"StructuredDocumentation","src":"90345:495:89","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"90854:12:89","parameters":{"id":35948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35943,"mutability":"mutable","name":"callee","nameLocation":"90875:6:89","nodeType":"VariableDeclaration","scope":35950,"src":"90867:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35942,"name":"address","nodeType":"ElementaryTypeName","src":"90867:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35945,"mutability":"mutable","name":"target","nameLocation":"90891:6:89","nodeType":"VariableDeclaration","scope":35950,"src":"90883:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35944,"name":"address","nodeType":"ElementaryTypeName","src":"90883:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35947,"mutability":"mutable","name":"data","nameLocation":"90914:4:89","nodeType":"VariableDeclaration","scope":35950,"src":"90899:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":35946,"name":"bytes","nodeType":"ElementaryTypeName","src":"90899:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90866:53:89"},"returnParameters":{"id":35949,"nodeType":"ParameterList","parameters":[],"src":"90928:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35956,"nodeType":"FunctionDefinition","src":"91004:43:89","nodes":[],"documentation":{"id":35951,"nodeType":"StructuredDocumentation","src":"90935:64:89","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"91013:5:89","parameters":{"id":35954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35953,"mutability":"mutable","name":"msgSender","nameLocation":"91027:9:89","nodeType":"VariableDeclaration","scope":35956,"src":"91019:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35952,"name":"address","nodeType":"ElementaryTypeName","src":"91019:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91018:19:89"},"returnParameters":{"id":35955,"nodeType":"ParameterList","parameters":[],"src":"91046:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35964,"nodeType":"FunctionDefinition","src":"91166:61:89","nodes":[],"documentation":{"id":35957,"nodeType":"StructuredDocumentation","src":"91053:108:89","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"91175:5:89","parameters":{"id":35962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35959,"mutability":"mutable","name":"msgSender","nameLocation":"91189:9:89","nodeType":"VariableDeclaration","scope":35964,"src":"91181:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35958,"name":"address","nodeType":"ElementaryTypeName","src":"91181:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35961,"mutability":"mutable","name":"txOrigin","nameLocation":"91208:8:89","nodeType":"VariableDeclaration","scope":35964,"src":"91200:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35960,"name":"address","nodeType":"ElementaryTypeName","src":"91200:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91180:37:89"},"returnParameters":{"id":35963,"nodeType":"ParameterList","parameters":[],"src":"91226:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35970,"nodeType":"FunctionDefinition","src":"91404:52:89","nodes":[],"documentation":{"id":35965,"nodeType":"StructuredDocumentation","src":"91233:166:89","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"91413:10:89","parameters":{"id":35968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35967,"mutability":"mutable","name":"newPrevrandao","nameLocation":"91432:13:89","nodeType":"VariableDeclaration","scope":35970,"src":"91424:21:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":35966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91424:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"91423:23:89"},"returnParameters":{"id":35969,"nodeType":"ParameterList","parameters":[],"src":"91455:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35976,"nodeType":"FunctionDefinition","src":"91633:52:89","nodes":[],"documentation":{"id":35971,"nodeType":"StructuredDocumentation","src":"91462:166:89","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"91642:10:89","parameters":{"id":35974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35973,"mutability":"mutable","name":"newPrevrandao","nameLocation":"91661:13:89","nodeType":"VariableDeclaration","scope":35976,"src":"91653:21:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35972,"name":"uint256","nodeType":"ElementaryTypeName","src":"91653:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91652:23:89"},"returnParameters":{"id":35975,"nodeType":"ParameterList","parameters":[],"src":"91684:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35987,"nodeType":"FunctionDefinition","src":"91813:101:89","nodes":[],"documentation":{"id":35977,"nodeType":"StructuredDocumentation","src":"91691:117:89","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"91822:11:89","parameters":{"id":35978,"nodeType":"ParameterList","parameters":[],"src":"91833:2:89"},"returnParameters":{"id":35986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35981,"mutability":"mutable","name":"callerMode","nameLocation":"91865:10:89","nodeType":"VariableDeclaration","scope":35987,"src":"91854:21:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$32194","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":35980,"nodeType":"UserDefinedTypeName","pathNode":{"id":35979,"name":"CallerMode","nameLocations":["91854:10:89"],"nodeType":"IdentifierPath","referencedDeclaration":32194,"src":"91854:10:89"},"referencedDeclaration":32194,"src":"91854:10:89","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$32194","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":35983,"mutability":"mutable","name":"msgSender","nameLocation":"91885:9:89","nodeType":"VariableDeclaration","scope":35987,"src":"91877:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35982,"name":"address","nodeType":"ElementaryTypeName","src":"91877:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35985,"mutability":"mutable","name":"txOrigin","nameLocation":"91904:8:89","nodeType":"VariableDeclaration","scope":35987,"src":"91896:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35984,"name":"address","nodeType":"ElementaryTypeName","src":"91896:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91853:60:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35993,"nodeType":"FunctionDefinition","src":"92002:46:89","nodes":[],"documentation":{"id":35988,"nodeType":"StructuredDocumentation","src":"91920:77:89","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"92011:10:89","parameters":{"id":35991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35990,"mutability":"mutable","name":"account","nameLocation":"92030:7:89","nodeType":"VariableDeclaration","scope":35993,"src":"92022:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35989,"name":"address","nodeType":"ElementaryTypeName","src":"92022:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92021:17:89"},"returnParameters":{"id":35992,"nodeType":"ParameterList","parameters":[],"src":"92047:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36001,"nodeType":"FunctionDefinition","src":"92391:70:89","nodes":[],"documentation":{"id":35994,"nodeType":"StructuredDocumentation","src":"92054:332:89","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"92400:8:89","parameters":{"id":35997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35996,"mutability":"mutable","name":"snapshotId","nameLocation":"92417:10:89","nodeType":"VariableDeclaration","scope":36001,"src":"92409:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35995,"name":"uint256","nodeType":"ElementaryTypeName","src":"92409:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92408:20:89"},"returnParameters":{"id":36000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35999,"mutability":"mutable","name":"success","nameLocation":"92452:7:89","nodeType":"VariableDeclaration","scope":36001,"src":"92447:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35998,"name":"bool","nodeType":"ElementaryTypeName","src":"92447:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"92446:14:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36009,"nodeType":"FunctionDefinition","src":"92744:79:89","nodes":[],"documentation":{"id":36002,"nodeType":"StructuredDocumentation","src":"92467:272:89","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"92753:17:89","parameters":{"id":36005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36004,"mutability":"mutable","name":"snapshotId","nameLocation":"92779:10:89","nodeType":"VariableDeclaration","scope":36009,"src":"92771:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36003,"name":"uint256","nodeType":"ElementaryTypeName","src":"92771:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92770:20:89"},"returnParameters":{"id":36008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36007,"mutability":"mutable","name":"success","nameLocation":"92814:7:89","nodeType":"VariableDeclaration","scope":36009,"src":"92809:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36006,"name":"bool","nodeType":"ElementaryTypeName","src":"92809:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"92808:14:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36015,"nodeType":"FunctionDefinition","src":"92920:52:89","nodes":[],"documentation":{"id":36010,"nodeType":"StructuredDocumentation","src":"92829:86:89","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"92929:16:89","parameters":{"id":36013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36012,"mutability":"mutable","name":"account","nameLocation":"92954:7:89","nodeType":"VariableDeclaration","scope":36015,"src":"92946:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36011,"name":"address","nodeType":"ElementaryTypeName","src":"92946:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92945:17:89"},"returnParameters":{"id":36014,"nodeType":"ParameterList","parameters":[],"src":"92971:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36022,"nodeType":"FunctionDefinition","src":"93019:64:89","nodes":[],"documentation":{"id":36016,"nodeType":"StructuredDocumentation","src":"92978:36:89","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"93028:16:89","parameters":{"id":36020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36019,"mutability":"mutable","name":"accounts","nameLocation":"93064:8:89","nodeType":"VariableDeclaration","scope":36022,"src":"93045:27:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":36017,"name":"address","nodeType":"ElementaryTypeName","src":"93045:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":36018,"nodeType":"ArrayTypeName","src":"93045:9:89","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"93044:29:89"},"returnParameters":{"id":36021,"nodeType":"ParameterList","parameters":[],"src":"93082:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36028,"nodeType":"FunctionDefinition","src":"93118:42:89","nodes":[],"documentation":{"id":36023,"nodeType":"StructuredDocumentation","src":"93089:24:89","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"93127:4:89","parameters":{"id":36026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36025,"mutability":"mutable","name":"newHeight","nameLocation":"93140:9:89","nodeType":"VariableDeclaration","scope":36028,"src":"93132:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36024,"name":"uint256","nodeType":"ElementaryTypeName","src":"93132:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93131:19:89"},"returnParameters":{"id":36027,"nodeType":"ParameterList","parameters":[],"src":"93159:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36034,"nodeType":"FunctionDefinition","src":"93299:48:89","nodes":[],"documentation":{"id":36029,"nodeType":"StructuredDocumentation","src":"93166:128:89","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93308:8:89","parameters":{"id":36032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36031,"mutability":"mutable","name":"blockNumber","nameLocation":"93325:11:89","nodeType":"VariableDeclaration","scope":36034,"src":"93317:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36030,"name":"uint256","nodeType":"ElementaryTypeName","src":"93317:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93316:21:89"},"returnParameters":{"id":36033,"nodeType":"ParameterList","parameters":[],"src":"93346:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36040,"nodeType":"FunctionDefinition","src":"93562:43:89","nodes":[],"documentation":{"id":36035,"nodeType":"StructuredDocumentation","src":"93353:204:89","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93571:8:89","parameters":{"id":36038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36037,"mutability":"mutable","name":"txHash","nameLocation":"93588:6:89","nodeType":"VariableDeclaration","scope":36040,"src":"93580:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93580:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"93579:16:89"},"returnParameters":{"id":36039,"nodeType":"ParameterList","parameters":[],"src":"93604:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36048,"nodeType":"FunctionDefinition","src":"93665:64:89","nodes":[],"documentation":{"id":36041,"nodeType":"StructuredDocumentation","src":"93611:49:89","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93674:8:89","parameters":{"id":36046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36043,"mutability":"mutable","name":"forkId","nameLocation":"93691:6:89","nodeType":"VariableDeclaration","scope":36048,"src":"93683:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36042,"name":"uint256","nodeType":"ElementaryTypeName","src":"93683:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36045,"mutability":"mutable","name":"blockNumber","nameLocation":"93707:11:89","nodeType":"VariableDeclaration","scope":36048,"src":"93699:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36044,"name":"uint256","nodeType":"ElementaryTypeName","src":"93699:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93682:37:89"},"returnParameters":{"id":36047,"nodeType":"ParameterList","parameters":[],"src":"93728:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36056,"nodeType":"FunctionDefinition","src":"93865:59:89","nodes":[],"documentation":{"id":36049,"nodeType":"StructuredDocumentation","src":"93735:125:89","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93874:8:89","parameters":{"id":36054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36051,"mutability":"mutable","name":"forkId","nameLocation":"93891:6:89","nodeType":"VariableDeclaration","scope":36056,"src":"93883:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36050,"name":"uint256","nodeType":"ElementaryTypeName","src":"93883:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36053,"mutability":"mutable","name":"txHash","nameLocation":"93907:6:89","nodeType":"VariableDeclaration","scope":36056,"src":"93899:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93899:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"93882:32:89"},"returnParameters":{"id":36055,"nodeType":"ParameterList","parameters":[],"src":"93923:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36062,"nodeType":"FunctionDefinition","src":"94037:45:89","nodes":[],"documentation":{"id":36057,"nodeType":"StructuredDocumentation","src":"93930:102:89","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"94046:10:89","parameters":{"id":36060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36059,"mutability":"mutable","name":"forkId","nameLocation":"94065:6:89","nodeType":"VariableDeclaration","scope":36062,"src":"94057:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36058,"name":"uint256","nodeType":"ElementaryTypeName","src":"94057:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94056:16:89"},"returnParameters":{"id":36061,"nodeType":"ParameterList","parameters":[],"src":"94081:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36070,"nodeType":"FunctionDefinition","src":"94232:71:89","nodes":[],"documentation":{"id":36063,"nodeType":"StructuredDocumentation","src":"94088:139:89","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"94241:12:89","parameters":{"id":36068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36065,"mutability":"mutable","name":"blockNumber","nameLocation":"94262:11:89","nodeType":"VariableDeclaration","scope":36070,"src":"94254:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36064,"name":"uint256","nodeType":"ElementaryTypeName","src":"94254:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36067,"mutability":"mutable","name":"blockHash","nameLocation":"94283:9:89","nodeType":"VariableDeclaration","scope":36070,"src":"94275:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94275:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"94253:40:89"},"returnParameters":{"id":36069,"nodeType":"ParameterList","parameters":[],"src":"94302:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36078,"nodeType":"FunctionDefinition","src":"94401:61:89","nodes":[],"documentation":{"id":36071,"nodeType":"StructuredDocumentation","src":"94309:87:89","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"94410:8:89","parameters":{"id":36076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36073,"mutability":"mutable","name":"account","nameLocation":"94427:7:89","nodeType":"VariableDeclaration","scope":36078,"src":"94419:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36072,"name":"address","nodeType":"ElementaryTypeName","src":"94419:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36075,"mutability":"mutable","name":"newNonce","nameLocation":"94443:8:89","nodeType":"VariableDeclaration","scope":36078,"src":"94436:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36074,"name":"uint64","nodeType":"ElementaryTypeName","src":"94436:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94418:34:89"},"returnParameters":{"id":36077,"nodeType":"ParameterList","parameters":[],"src":"94461:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36086,"nodeType":"FunctionDefinition","src":"94528:67:89","nodes":[],"documentation":{"id":36079,"nodeType":"StructuredDocumentation","src":"94468:55:89","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"94537:14:89","parameters":{"id":36084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36081,"mutability":"mutable","name":"account","nameLocation":"94560:7:89","nodeType":"VariableDeclaration","scope":36086,"src":"94552:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36080,"name":"address","nodeType":"ElementaryTypeName","src":"94552:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36083,"mutability":"mutable","name":"newNonce","nameLocation":"94576:8:89","nodeType":"VariableDeclaration","scope":36086,"src":"94569:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36082,"name":"uint64","nodeType":"ElementaryTypeName","src":"94569:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94551:34:89"},"returnParameters":{"id":36085,"nodeType":"ParameterList","parameters":[],"src":"94594:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36092,"nodeType":"FunctionDefinition","src":"94750:58:89","nodes":[],"documentation":{"id":36087,"nodeType":"StructuredDocumentation","src":"94601:144:89","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"94759:8:89","parameters":{"id":36088,"nodeType":"ParameterList","parameters":[],"src":"94767:2:89"},"returnParameters":{"id":36091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36090,"mutability":"mutable","name":"snapshotId","nameLocation":"94796:10:89","nodeType":"VariableDeclaration","scope":36092,"src":"94788:18:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36089,"name":"uint256","nodeType":"ElementaryTypeName","src":"94788:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94787:20:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36098,"nodeType":"FunctionDefinition","src":"94915:48:89","nodes":[],"documentation":{"id":36093,"nodeType":"StructuredDocumentation","src":"94814:96:89","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"94924:10:89","parameters":{"id":36096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36095,"mutability":"mutable","name":"msgSender","nameLocation":"94943:9:89","nodeType":"VariableDeclaration","scope":36098,"src":"94935:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36094,"name":"address","nodeType":"ElementaryTypeName","src":"94935:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94934:19:89"},"returnParameters":{"id":36097,"nodeType":"ParameterList","parameters":[],"src":"94962:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36106,"nodeType":"FunctionDefinition","src":"95114:66:89","nodes":[],"documentation":{"id":36099,"nodeType":"StructuredDocumentation","src":"94969:140:89","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"95123:10:89","parameters":{"id":36104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36101,"mutability":"mutable","name":"msgSender","nameLocation":"95142:9:89","nodeType":"VariableDeclaration","scope":36106,"src":"95134:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36100,"name":"address","nodeType":"ElementaryTypeName","src":"95134:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36103,"mutability":"mutable","name":"txOrigin","nameLocation":"95161:8:89","nodeType":"VariableDeclaration","scope":36106,"src":"95153:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36102,"name":"address","nodeType":"ElementaryTypeName","src":"95153:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95133:37:89"},"returnParameters":{"id":36105,"nodeType":"ParameterList","parameters":[],"src":"95179:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36110,"nodeType":"FunctionDefinition","src":"95255:30:89","nodes":[],"documentation":{"id":36107,"nodeType":"StructuredDocumentation","src":"95186:64:89","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"95264:9:89","parameters":{"id":36108,"nodeType":"ParameterList","parameters":[],"src":"95273:2:89"},"returnParameters":{"id":36109,"nodeType":"ParameterList","parameters":[],"src":"95284:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36120,"nodeType":"FunctionDefinition","src":"95343:69:89","nodes":[],"documentation":{"id":36111,"nodeType":"StructuredDocumentation","src":"95291:47:89","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"95352:5:89","parameters":{"id":36118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36113,"mutability":"mutable","name":"target","nameLocation":"95366:6:89","nodeType":"VariableDeclaration","scope":36120,"src":"95358:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36112,"name":"address","nodeType":"ElementaryTypeName","src":"95358:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36115,"mutability":"mutable","name":"slot","nameLocation":"95382:4:89","nodeType":"VariableDeclaration","scope":36120,"src":"95374:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95374:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36117,"mutability":"mutable","name":"value","nameLocation":"95396:5:89","nodeType":"VariableDeclaration","scope":36120,"src":"95388:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95388:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95357:45:89"},"returnParameters":{"id":36119,"nodeType":"ParameterList","parameters":[],"src":"95411:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36126,"nodeType":"FunctionDefinition","src":"95515:43:89","nodes":[],"documentation":{"id":36121,"nodeType":"StructuredDocumentation","src":"95418:92:89","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"95524:8:89","parameters":{"id":36124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36123,"mutability":"mutable","name":"txHash","nameLocation":"95541:6:89","nodeType":"VariableDeclaration","scope":36126,"src":"95533:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95533:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95532:16:89"},"returnParameters":{"id":36125,"nodeType":"ParameterList","parameters":[],"src":"95557:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36134,"nodeType":"FunctionDefinition","src":"95660:59:89","nodes":[],"documentation":{"id":36127,"nodeType":"StructuredDocumentation","src":"95564:91:89","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"95669:8:89","parameters":{"id":36132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36129,"mutability":"mutable","name":"forkId","nameLocation":"95686:6:89","nodeType":"VariableDeclaration","scope":36134,"src":"95678:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36128,"name":"uint256","nodeType":"ElementaryTypeName","src":"95678:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36131,"mutability":"mutable","name":"txHash","nameLocation":"95702:6:89","nodeType":"VariableDeclaration","scope":36134,"src":"95694:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95694:7:89","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95677:32:89"},"returnParameters":{"id":36133,"nodeType":"ParameterList","parameters":[],"src":"95718:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36140,"nodeType":"FunctionDefinition","src":"95753:50:89","nodes":[],"documentation":{"id":36135,"nodeType":"StructuredDocumentation","src":"95725:23:89","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"95762:10:89","parameters":{"id":36138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36137,"mutability":"mutable","name":"newGasPrice","nameLocation":"95781:11:89","nodeType":"VariableDeclaration","scope":36140,"src":"95773:19:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36136,"name":"uint256","nodeType":"ElementaryTypeName","src":"95773:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95772:21:89"},"returnParameters":{"id":36139,"nodeType":"ParameterList","parameters":[],"src":"95802:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36146,"nodeType":"FunctionDefinition","src":"95841:45:89","nodes":[],"documentation":{"id":36141,"nodeType":"StructuredDocumentation","src":"95809:27:89","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"95850:4:89","parameters":{"id":36144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36143,"mutability":"mutable","name":"newTimestamp","nameLocation":"95863:12:89","nodeType":"VariableDeclaration","scope":36146,"src":"95855:20:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36142,"name":"uint256","nodeType":"ElementaryTypeName","src":"95855:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95854:22:89"},"returnParameters":{"id":36145,"nodeType":"ParameterList","parameters":[],"src":"95885:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36158,"nodeType":"FunctionDefinition","src":"96038:105:89","nodes":[],"documentation":{"id":36147,"nodeType":"StructuredDocumentation","src":"95926:107:89","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"96047:16:89","parameters":{"id":36156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36149,"mutability":"mutable","name":"callee","nameLocation":"96072:6:89","nodeType":"VariableDeclaration","scope":36158,"src":"96064:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36148,"name":"address","nodeType":"ElementaryTypeName","src":"96064:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36151,"mutability":"mutable","name":"msgValue","nameLocation":"96088:8:89","nodeType":"VariableDeclaration","scope":36158,"src":"96080:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36150,"name":"uint256","nodeType":"ElementaryTypeName","src":"96080:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36153,"mutability":"mutable","name":"minGas","nameLocation":"96105:6:89","nodeType":"VariableDeclaration","scope":36158,"src":"96098:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36152,"name":"uint64","nodeType":"ElementaryTypeName","src":"96098:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36155,"mutability":"mutable","name":"data","nameLocation":"96128:4:89","nodeType":"VariableDeclaration","scope":36158,"src":"96113:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36154,"name":"bytes","nodeType":"ElementaryTypeName","src":"96113:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96063:70:89"},"returnParameters":{"id":36157,"nodeType":"ParameterList","parameters":[],"src":"96142:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36172,"nodeType":"FunctionDefinition","src":"96276:127:89","nodes":[],"documentation":{"id":36159,"nodeType":"StructuredDocumentation","src":"96149:122:89","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"96285:16:89","parameters":{"id":36170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36161,"mutability":"mutable","name":"callee","nameLocation":"96310:6:89","nodeType":"VariableDeclaration","scope":36172,"src":"96302:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36160,"name":"address","nodeType":"ElementaryTypeName","src":"96302:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36163,"mutability":"mutable","name":"msgValue","nameLocation":"96326:8:89","nodeType":"VariableDeclaration","scope":36172,"src":"96318:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36162,"name":"uint256","nodeType":"ElementaryTypeName","src":"96318:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36165,"mutability":"mutable","name":"minGas","nameLocation":"96343:6:89","nodeType":"VariableDeclaration","scope":36172,"src":"96336:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36164,"name":"uint64","nodeType":"ElementaryTypeName","src":"96336:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36167,"mutability":"mutable","name":"data","nameLocation":"96366:4:89","nodeType":"VariableDeclaration","scope":36172,"src":"96351:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36166,"name":"bytes","nodeType":"ElementaryTypeName","src":"96351:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36169,"mutability":"mutable","name":"count","nameLocation":"96379:5:89","nodeType":"VariableDeclaration","scope":36172,"src":"96372:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36168,"name":"uint64","nodeType":"ElementaryTypeName","src":"96372:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"96301:84:89"},"returnParameters":{"id":36171,"nodeType":"ParameterList","parameters":[],"src":"96402:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36180,"nodeType":"FunctionDefinition","src":"96535:66:89","nodes":[],"documentation":{"id":36173,"nodeType":"StructuredDocumentation","src":"96409:121:89","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"96544:10:89","parameters":{"id":36178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36175,"mutability":"mutable","name":"callee","nameLocation":"96563:6:89","nodeType":"VariableDeclaration","scope":36180,"src":"96555:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36174,"name":"address","nodeType":"ElementaryTypeName","src":"96555:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36177,"mutability":"mutable","name":"data","nameLocation":"96586:4:89","nodeType":"VariableDeclaration","scope":36180,"src":"96571:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36176,"name":"bytes","nodeType":"ElementaryTypeName","src":"96571:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96554:37:89"},"returnParameters":{"id":36179,"nodeType":"ParameterList","parameters":[],"src":"96600:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36190,"nodeType":"FunctionDefinition","src":"96688:80:89","nodes":[],"documentation":{"id":36181,"nodeType":"StructuredDocumentation","src":"96607:76:89","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"96697:10:89","parameters":{"id":36188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36183,"mutability":"mutable","name":"callee","nameLocation":"96716:6:89","nodeType":"VariableDeclaration","scope":36190,"src":"96708:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36182,"name":"address","nodeType":"ElementaryTypeName","src":"96708:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36185,"mutability":"mutable","name":"data","nameLocation":"96739:4:89","nodeType":"VariableDeclaration","scope":36190,"src":"96724:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36184,"name":"bytes","nodeType":"ElementaryTypeName","src":"96724:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36187,"mutability":"mutable","name":"count","nameLocation":"96752:5:89","nodeType":"VariableDeclaration","scope":36190,"src":"96745:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36186,"name":"uint64","nodeType":"ElementaryTypeName","src":"96745:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"96707:51:89"},"returnParameters":{"id":36189,"nodeType":"ParameterList","parameters":[],"src":"96767:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36200,"nodeType":"FunctionDefinition","src":"96856:84:89","nodes":[],"documentation":{"id":36191,"nodeType":"StructuredDocumentation","src":"96774:77:89","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"96865:10:89","parameters":{"id":36198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36193,"mutability":"mutable","name":"callee","nameLocation":"96884:6:89","nodeType":"VariableDeclaration","scope":36200,"src":"96876:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36192,"name":"address","nodeType":"ElementaryTypeName","src":"96876:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36195,"mutability":"mutable","name":"msgValue","nameLocation":"96900:8:89","nodeType":"VariableDeclaration","scope":36200,"src":"96892:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36194,"name":"uint256","nodeType":"ElementaryTypeName","src":"96892:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36197,"mutability":"mutable","name":"data","nameLocation":"96925:4:89","nodeType":"VariableDeclaration","scope":36200,"src":"96910:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36196,"name":"bytes","nodeType":"ElementaryTypeName","src":"96910:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96875:55:89"},"returnParameters":{"id":36199,"nodeType":"ParameterList","parameters":[],"src":"96939:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36212,"nodeType":"FunctionDefinition","src":"97043:98:89","nodes":[],"documentation":{"id":36201,"nodeType":"StructuredDocumentation","src":"96946:92:89","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"97052:10:89","parameters":{"id":36210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36203,"mutability":"mutable","name":"callee","nameLocation":"97071:6:89","nodeType":"VariableDeclaration","scope":36212,"src":"97063:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36202,"name":"address","nodeType":"ElementaryTypeName","src":"97063:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36205,"mutability":"mutable","name":"msgValue","nameLocation":"97087:8:89","nodeType":"VariableDeclaration","scope":36212,"src":"97079:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36204,"name":"uint256","nodeType":"ElementaryTypeName","src":"97079:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36207,"mutability":"mutable","name":"data","nameLocation":"97112:4:89","nodeType":"VariableDeclaration","scope":36212,"src":"97097:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36206,"name":"bytes","nodeType":"ElementaryTypeName","src":"97097:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36209,"mutability":"mutable","name":"count","nameLocation":"97125:5:89","nodeType":"VariableDeclaration","scope":36212,"src":"97118:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36208,"name":"uint64","nodeType":"ElementaryTypeName","src":"97118:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97062:69:89"},"returnParameters":{"id":36211,"nodeType":"ParameterList","parameters":[],"src":"97140:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36224,"nodeType":"FunctionDefinition","src":"97234:96:89","nodes":[],"documentation":{"id":36213,"nodeType":"StructuredDocumentation","src":"97147:82:89","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"97243:10:89","parameters":{"id":36222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36215,"mutability":"mutable","name":"callee","nameLocation":"97262:6:89","nodeType":"VariableDeclaration","scope":36224,"src":"97254:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36214,"name":"address","nodeType":"ElementaryTypeName","src":"97254:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36217,"mutability":"mutable","name":"msgValue","nameLocation":"97278:8:89","nodeType":"VariableDeclaration","scope":36224,"src":"97270:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36216,"name":"uint256","nodeType":"ElementaryTypeName","src":"97270:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36219,"mutability":"mutable","name":"gas","nameLocation":"97295:3:89","nodeType":"VariableDeclaration","scope":36224,"src":"97288:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36218,"name":"uint64","nodeType":"ElementaryTypeName","src":"97288:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36221,"mutability":"mutable","name":"data","nameLocation":"97315:4:89","nodeType":"VariableDeclaration","scope":36224,"src":"97300:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36220,"name":"bytes","nodeType":"ElementaryTypeName","src":"97300:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97253:67:89"},"returnParameters":{"id":36223,"nodeType":"ParameterList","parameters":[],"src":"97329:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36238,"nodeType":"FunctionDefinition","src":"97439:110:89","nodes":[],"documentation":{"id":36225,"nodeType":"StructuredDocumentation","src":"97336:98:89","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"97448:10:89","parameters":{"id":36236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36227,"mutability":"mutable","name":"callee","nameLocation":"97467:6:89","nodeType":"VariableDeclaration","scope":36238,"src":"97459:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36226,"name":"address","nodeType":"ElementaryTypeName","src":"97459:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36229,"mutability":"mutable","name":"msgValue","nameLocation":"97483:8:89","nodeType":"VariableDeclaration","scope":36238,"src":"97475:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36228,"name":"uint256","nodeType":"ElementaryTypeName","src":"97475:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36231,"mutability":"mutable","name":"gas","nameLocation":"97500:3:89","nodeType":"VariableDeclaration","scope":36238,"src":"97493:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36230,"name":"uint64","nodeType":"ElementaryTypeName","src":"97493:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36233,"mutability":"mutable","name":"data","nameLocation":"97520:4:89","nodeType":"VariableDeclaration","scope":36238,"src":"97505:19:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36232,"name":"bytes","nodeType":"ElementaryTypeName","src":"97505:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36235,"mutability":"mutable","name":"count","nameLocation":"97533:5:89","nodeType":"VariableDeclaration","scope":36238,"src":"97526:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36234,"name":"uint64","nodeType":"ElementaryTypeName","src":"97526:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97458:81:89"},"returnParameters":{"id":36237,"nodeType":"ParameterList","parameters":[],"src":"97548:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36252,"nodeType":"FunctionDefinition","src":"97908:134:89","nodes":[],"documentation":{"id":36239,"nodeType":"StructuredDocumentation","src":"97555:348:89","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"97917:19:89","parameters":{"id":36250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36241,"mutability":"mutable","name":"checkTopic0","nameLocation":"97942:11:89","nodeType":"VariableDeclaration","scope":36252,"src":"97937:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36240,"name":"bool","nodeType":"ElementaryTypeName","src":"97937:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36243,"mutability":"mutable","name":"checkTopic1","nameLocation":"97960:11:89","nodeType":"VariableDeclaration","scope":36252,"src":"97955:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36242,"name":"bool","nodeType":"ElementaryTypeName","src":"97955:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36245,"mutability":"mutable","name":"checkTopic2","nameLocation":"97978:11:89","nodeType":"VariableDeclaration","scope":36252,"src":"97973:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36244,"name":"bool","nodeType":"ElementaryTypeName","src":"97973:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36247,"mutability":"mutable","name":"checkTopic3","nameLocation":"97996:11:89","nodeType":"VariableDeclaration","scope":36252,"src":"97991:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36246,"name":"bool","nodeType":"ElementaryTypeName","src":"97991:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36249,"mutability":"mutable","name":"checkData","nameLocation":"98014:9:89","nodeType":"VariableDeclaration","scope":36252,"src":"98009:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36248,"name":"bool","nodeType":"ElementaryTypeName","src":"98009:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97936:88:89"},"returnParameters":{"id":36251,"nodeType":"ParameterList","parameters":[],"src":"98041:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36268,"nodeType":"FunctionDefinition","src":"98145:197:89","nodes":[],"documentation":{"id":36253,"nodeType":"StructuredDocumentation","src":"98048:92:89","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"98154:19:89","parameters":{"id":36266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36255,"mutability":"mutable","name":"checkTopic0","nameLocation":"98188:11:89","nodeType":"VariableDeclaration","scope":36268,"src":"98183:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36254,"name":"bool","nodeType":"ElementaryTypeName","src":"98183:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36257,"mutability":"mutable","name":"checkTopic1","nameLocation":"98214:11:89","nodeType":"VariableDeclaration","scope":36268,"src":"98209:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36256,"name":"bool","nodeType":"ElementaryTypeName","src":"98209:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36259,"mutability":"mutable","name":"checkTopic2","nameLocation":"98240:11:89","nodeType":"VariableDeclaration","scope":36268,"src":"98235:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36258,"name":"bool","nodeType":"ElementaryTypeName","src":"98235:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36261,"mutability":"mutable","name":"checkTopic3","nameLocation":"98266:11:89","nodeType":"VariableDeclaration","scope":36268,"src":"98261:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36260,"name":"bool","nodeType":"ElementaryTypeName","src":"98261:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36263,"mutability":"mutable","name":"checkData","nameLocation":"98292:9:89","nodeType":"VariableDeclaration","scope":36268,"src":"98287:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36262,"name":"bool","nodeType":"ElementaryTypeName","src":"98287:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36265,"mutability":"mutable","name":"emitter","nameLocation":"98319:7:89","nodeType":"VariableDeclaration","scope":36268,"src":"98311:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36264,"name":"address","nodeType":"ElementaryTypeName","src":"98311:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98173:159:89"},"returnParameters":{"id":36267,"nodeType":"ParameterList","parameters":[],"src":"98341:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36272,"nodeType":"FunctionDefinition","src":"98632:40:89","nodes":[],"documentation":{"id":36269,"nodeType":"StructuredDocumentation","src":"98348:279:89","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"98641:19:89","parameters":{"id":36270,"nodeType":"ParameterList","parameters":[],"src":"98660:2:89"},"returnParameters":{"id":36271,"nodeType":"ParameterList","parameters":[],"src":"98671:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36278,"nodeType":"FunctionDefinition","src":"98775:55:89","nodes":[],"documentation":{"id":36273,"nodeType":"StructuredDocumentation","src":"98678:92:89","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"98784:19:89","parameters":{"id":36276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36275,"mutability":"mutable","name":"emitter","nameLocation":"98812:7:89","nodeType":"VariableDeclaration","scope":36278,"src":"98804:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36274,"name":"address","nodeType":"ElementaryTypeName","src":"98804:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98803:17:89"},"returnParameters":{"id":36277,"nodeType":"ParameterList","parameters":[],"src":"98829:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36290,"nodeType":"FunctionDefinition","src":"99169:99:89","nodes":[],"documentation":{"id":36279,"nodeType":"StructuredDocumentation","src":"98836:328:89","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99178:10:89","parameters":{"id":36288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36281,"mutability":"mutable","name":"checkTopic1","nameLocation":"99194:11:89","nodeType":"VariableDeclaration","scope":36290,"src":"99189:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36280,"name":"bool","nodeType":"ElementaryTypeName","src":"99189:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36283,"mutability":"mutable","name":"checkTopic2","nameLocation":"99212:11:89","nodeType":"VariableDeclaration","scope":36290,"src":"99207:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36282,"name":"bool","nodeType":"ElementaryTypeName","src":"99207:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36285,"mutability":"mutable","name":"checkTopic3","nameLocation":"99230:11:89","nodeType":"VariableDeclaration","scope":36290,"src":"99225:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36284,"name":"bool","nodeType":"ElementaryTypeName","src":"99225:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36287,"mutability":"mutable","name":"checkData","nameLocation":"99248:9:89","nodeType":"VariableDeclaration","scope":36290,"src":"99243:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36286,"name":"bool","nodeType":"ElementaryTypeName","src":"99243:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"99188:70:89"},"returnParameters":{"id":36289,"nodeType":"ParameterList","parameters":[],"src":"99267:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36304,"nodeType":"FunctionDefinition","src":"99371:124:89","nodes":[],"documentation":{"id":36291,"nodeType":"StructuredDocumentation","src":"99274:92:89","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99380:10:89","parameters":{"id":36302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36293,"mutability":"mutable","name":"checkTopic1","nameLocation":"99396:11:89","nodeType":"VariableDeclaration","scope":36304,"src":"99391:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36292,"name":"bool","nodeType":"ElementaryTypeName","src":"99391:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36295,"mutability":"mutable","name":"checkTopic2","nameLocation":"99414:11:89","nodeType":"VariableDeclaration","scope":36304,"src":"99409:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36294,"name":"bool","nodeType":"ElementaryTypeName","src":"99409:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36297,"mutability":"mutable","name":"checkTopic3","nameLocation":"99432:11:89","nodeType":"VariableDeclaration","scope":36304,"src":"99427:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36296,"name":"bool","nodeType":"ElementaryTypeName","src":"99427:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36299,"mutability":"mutable","name":"checkData","nameLocation":"99450:9:89","nodeType":"VariableDeclaration","scope":36304,"src":"99445:14:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36298,"name":"bool","nodeType":"ElementaryTypeName","src":"99445:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36301,"mutability":"mutable","name":"emitter","nameLocation":"99469:7:89","nodeType":"VariableDeclaration","scope":36304,"src":"99461:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36300,"name":"address","nodeType":"ElementaryTypeName","src":"99461:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99390:87:89"},"returnParameters":{"id":36303,"nodeType":"ParameterList","parameters":[],"src":"99494:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36308,"nodeType":"FunctionDefinition","src":"99765:31:89","nodes":[],"documentation":{"id":36305,"nodeType":"StructuredDocumentation","src":"99501:259:89","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99774:10:89","parameters":{"id":36306,"nodeType":"ParameterList","parameters":[],"src":"99784:2:89"},"returnParameters":{"id":36307,"nodeType":"ParameterList","parameters":[],"src":"99795:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36314,"nodeType":"FunctionDefinition","src":"99899:46:89","nodes":[],"documentation":{"id":36309,"nodeType":"StructuredDocumentation","src":"99802:92:89","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99908:10:89","parameters":{"id":36312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36311,"mutability":"mutable","name":"emitter","nameLocation":"99927:7:89","nodeType":"VariableDeclaration","scope":36314,"src":"99919:15:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36310,"name":"address","nodeType":"ElementaryTypeName","src":"99919:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99918:17:89"},"returnParameters":{"id":36313,"nodeType":"ParameterList","parameters":[],"src":"99944:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36320,"nodeType":"FunctionDefinition","src":"100023:57:89","nodes":[],"documentation":{"id":36315,"nodeType":"StructuredDocumentation","src":"99951:67:89","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"100032:19:89","parameters":{"id":36318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36317,"mutability":"mutable","name":"revertData","nameLocation":"100059:10:89","nodeType":"VariableDeclaration","scope":36320,"src":"100052:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36316,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100052:6:89","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"100051:19:89"},"returnParameters":{"id":36319,"nodeType":"ParameterList","parameters":[],"src":"100079:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36328,"nodeType":"FunctionDefinition","src":"100179:75:89","nodes":[],"documentation":{"id":36321,"nodeType":"StructuredDocumentation","src":"100086:88:89","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"100188:19:89","parameters":{"id":36326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36323,"mutability":"mutable","name":"revertData","nameLocation":"100215:10:89","nodeType":"VariableDeclaration","scope":36328,"src":"100208:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36322,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100208:6:89","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":36325,"mutability":"mutable","name":"reverter","nameLocation":"100235:8:89","nodeType":"VariableDeclaration","scope":36328,"src":"100227:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36324,"name":"address","nodeType":"ElementaryTypeName","src":"100227:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100207:37:89"},"returnParameters":{"id":36327,"nodeType":"ParameterList","parameters":[],"src":"100253:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36332,"nodeType":"FunctionDefinition","src":"100320:33:89","nodes":[],"documentation":{"id":36329,"nodeType":"StructuredDocumentation","src":"100260:55:89","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100329:12:89","parameters":{"id":36330,"nodeType":"ParameterList","parameters":[],"src":"100341:2:89"},"returnParameters":{"id":36331,"nodeType":"ParameterList","parameters":[],"src":"100352:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36338,"nodeType":"FunctionDefinition","src":"100435:50:89","nodes":[],"documentation":{"id":36333,"nodeType":"StructuredDocumentation","src":"100359:71:89","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100444:12:89","parameters":{"id":36336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36335,"mutability":"mutable","name":"revertData","nameLocation":"100464:10:89","nodeType":"VariableDeclaration","scope":36338,"src":"100457:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36334,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100457:6:89","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"100456:19:89"},"returnParameters":{"id":36337,"nodeType":"ParameterList","parameters":[],"src":"100484:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36344,"nodeType":"FunctionDefinition","src":"100567:58:89","nodes":[],"documentation":{"id":36339,"nodeType":"StructuredDocumentation","src":"100491:71:89","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100576:12:89","parameters":{"id":36342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36341,"mutability":"mutable","name":"revertData","nameLocation":"100604:10:89","nodeType":"VariableDeclaration","scope":36344,"src":"100589:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36340,"name":"bytes","nodeType":"ElementaryTypeName","src":"100589:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100588:27:89"},"returnParameters":{"id":36343,"nodeType":"ParameterList","parameters":[],"src":"100624:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36350,"nodeType":"FunctionDefinition","src":"100711:49:89","nodes":[],"documentation":{"id":36345,"nodeType":"StructuredDocumentation","src":"100631:75:89","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100720:12:89","parameters":{"id":36348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36347,"mutability":"mutable","name":"reverter","nameLocation":"100741:8:89","nodeType":"VariableDeclaration","scope":36350,"src":"100733:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36346,"name":"address","nodeType":"ElementaryTypeName","src":"100733:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100732:18:89"},"returnParameters":{"id":36349,"nodeType":"ParameterList","parameters":[],"src":"100759:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36358,"nodeType":"FunctionDefinition","src":"100849:68:89","nodes":[],"documentation":{"id":36351,"nodeType":"StructuredDocumentation","src":"100766:78:89","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100858:12:89","parameters":{"id":36356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36353,"mutability":"mutable","name":"revertData","nameLocation":"100878:10:89","nodeType":"VariableDeclaration","scope":36358,"src":"100871:17:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36352,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100871:6:89","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":36355,"mutability":"mutable","name":"reverter","nameLocation":"100898:8:89","nodeType":"VariableDeclaration","scope":36358,"src":"100890:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36354,"name":"address","nodeType":"ElementaryTypeName","src":"100890:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100870:37:89"},"returnParameters":{"id":36357,"nodeType":"ParameterList","parameters":[],"src":"100916:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36366,"nodeType":"FunctionDefinition","src":"101022:76:89","nodes":[],"documentation":{"id":36359,"nodeType":"StructuredDocumentation","src":"100923:94:89","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"101031:12:89","parameters":{"id":36364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36361,"mutability":"mutable","name":"revertData","nameLocation":"101059:10:89","nodeType":"VariableDeclaration","scope":36366,"src":"101044:25:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36360,"name":"bytes","nodeType":"ElementaryTypeName","src":"101044:5:89","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36363,"mutability":"mutable","name":"reverter","nameLocation":"101079:8:89","nodeType":"VariableDeclaration","scope":36366,"src":"101071:16:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36362,"name":"address","nodeType":"ElementaryTypeName","src":"101071:7:89","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101043:45:89"},"returnParameters":{"id":36365,"nodeType":"ParameterList","parameters":[],"src":"101097:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36374,"nodeType":"FunctionDefinition","src":"101327:59:89","nodes":[],"documentation":{"id":36367,"nodeType":"StructuredDocumentation","src":"101104:218:89","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"101336:16:89","parameters":{"id":36372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36369,"mutability":"mutable","name":"min","nameLocation":"101360:3:89","nodeType":"VariableDeclaration","scope":36374,"src":"101353:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36368,"name":"uint64","nodeType":"ElementaryTypeName","src":"101353:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36371,"mutability":"mutable","name":"max","nameLocation":"101372:3:89","nodeType":"VariableDeclaration","scope":36374,"src":"101365:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36370,"name":"uint64","nodeType":"ElementaryTypeName","src":"101365:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"101352:24:89"},"returnParameters":{"id":36373,"nodeType":"ParameterList","parameters":[],"src":"101385:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36382,"nodeType":"FunctionDefinition","src":"101628:63:89","nodes":[],"documentation":{"id":36375,"nodeType":"StructuredDocumentation","src":"101392:231:89","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"101637:20:89","parameters":{"id":36380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36377,"mutability":"mutable","name":"min","nameLocation":"101665:3:89","nodeType":"VariableDeclaration","scope":36382,"src":"101658:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36376,"name":"uint64","nodeType":"ElementaryTypeName","src":"101658:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36379,"mutability":"mutable","name":"max","nameLocation":"101677:3:89","nodeType":"VariableDeclaration","scope":36382,"src":"101670:10:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36378,"name":"uint64","nodeType":"ElementaryTypeName","src":"101670:6:89","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"101657:24:89"},"returnParameters":{"id":36381,"nodeType":"ParameterList","parameters":[],"src":"101690:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36388,"nodeType":"FunctionDefinition","src":"101773:38:89","nodes":[],"documentation":{"id":36383,"nodeType":"StructuredDocumentation","src":"101697:71:89","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"101782:4:89","parameters":{"id":36386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36385,"mutability":"mutable","name":"skipTest","nameLocation":"101792:8:89","nodeType":"VariableDeclaration","scope":36388,"src":"101787:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36384,"name":"bool","nodeType":"ElementaryTypeName","src":"101787:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101786:15:89"},"returnParameters":{"id":36387,"nodeType":"ParameterList","parameters":[],"src":"101810:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36396,"nodeType":"FunctionDefinition","src":"101907:62:89","nodes":[],"documentation":{"id":36389,"nodeType":"StructuredDocumentation","src":"101817:85:89","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"101916:4:89","parameters":{"id":36394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36391,"mutability":"mutable","name":"skipTest","nameLocation":"101926:8:89","nodeType":"VariableDeclaration","scope":36396,"src":"101921:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36390,"name":"bool","nodeType":"ElementaryTypeName","src":"101921:4:89","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36393,"mutability":"mutable","name":"reason","nameLocation":"101952:6:89","nodeType":"VariableDeclaration","scope":36396,"src":"101936:22:89","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":36392,"name":"string","nodeType":"ElementaryTypeName","src":"101936:6:89","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101920:39:89"},"returnParameters":{"id":36395,"nodeType":"ParameterList","parameters":[],"src":"101968:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":36400,"nodeType":"FunctionDefinition","src":"102044:41:89","nodes":[],"documentation":{"id":36397,"nodeType":"StructuredDocumentation","src":"101975:64:89","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"102053:20:89","parameters":{"id":36398,"nodeType":"ParameterList","parameters":[],"src":"102073:2:89"},"returnParameters":{"id":36399,"nodeType":"ParameterList","parameters":[],"src":"102084:0:89"},"scope":36401,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":35700,"name":"VmSafe","nameLocations":["84677:6:89"],"nodeType":"IdentifierPath","referencedDeclaration":35698,"src":"84677:6:89"},"id":35701,"nodeType":"InheritanceSpecifier","src":"84677:6:89"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":35699,"nodeType":"StructuredDocumentation","src":"84490:171:89","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[36401,35698],"name":"Vm","nameLocation":"84671:2:89","scope":36402,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":89}
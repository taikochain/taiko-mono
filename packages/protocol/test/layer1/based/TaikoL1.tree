MultisigTest
└── Given a new TaikoL1 with 10 slots for blocks and sync internval as 5
    ├── It should initialize the genesis block
    ├── It should initialize the first transition
    ├── It should finalize the genesis block
    ├── It the total number of block should be 1
    ├── It get the genesis block should not revert
    ├── It get the block 1 should revert indicating block not found
    ├── When 10 blocks are proposed individually with different timestamp in different L1 blocks
    │   ├── It propose another block will revert indicating no slot is available
    │   └── When all 10 blocks are proved and verified
    │       ├── It should not revert
    │       ├── It the last verified block id should be 10
    │       ├── It the last synced block id should be 5
    │       ├── It the last synced stateroot should be the one from block 5
    │       ├── It the last synced timestamp should be the timestamp when block 5 is proposed
    │       ├── It the total number of block should be 11
    │       ├── It lastProposedIn should be the L1 block number when the last block is proposed
    │       ├── It lastProposedAt should be the timestamp when the last block is proposed
    │       └── When the block 11 is proposed
    │           ├── It should not revert
    │           ├── It the last verified block id should be 10
    │           ├── It the last synced block id should be 5
    │           ├── It the last synced stateroot should be the one from block 5
    │           ├── It the last synced timestamp should be the timestamp when block 5 is proposed
    │           ├── It the total number of block should be 12
    │           ├── It lastProposedIn should be the L1 block number when the last block is proposed
    │           └── It lastProposedAt should be the timestamp when the last block is proposed
    └── When propose one more block
        └── When it is still inside the last blocks proving window
            └── It should revert if someone other than the proposer tries to prove the block
